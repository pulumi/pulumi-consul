// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * > **NOTE:** This feature requires Consul Enterprise.
 *
 * The `consul.AdminPartition` resource manages [Consul Enterprise Admin Partitions](https://www.consul.io/docs/enterprise/admin-partitions).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const naWest = new consul.AdminPartition("na_west", {
 *     name: "na-west",
 *     description: "Partition for North America West",
 * });
 * ```
 *
 * ## Import
 *
 * `consul_admin_partition` can be imported:
 *
 * ```sh
 * $ pulumi import consul:index/adminPartition:AdminPartition na_west na-west
 * ```
 */
export class AdminPartition extends pulumi.CustomResource {
    /**
     * Get an existing AdminPartition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdminPartitionState, opts?: pulumi.CustomResourceOptions): AdminPartition {
        return new AdminPartition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'consul:index/adminPartition:AdminPartition';

    /**
     * Returns true if the given object is an instance of AdminPartition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdminPartition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdminPartition.__pulumiType;
    }

    /**
     * Free form partition description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * . Disable gossip pool for the partition. Defaults to `false`.
     */
    public readonly disableGossip!: pulumi.Output<boolean | undefined>;
    /**
     * The partition name. This must be a valid DNS hostname label.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AdminPartition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AdminPartitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdminPartitionArgs | AdminPartitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdminPartitionState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableGossip"] = state ? state.disableGossip : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AdminPartitionArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableGossip"] = args ? args.disableGossip : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdminPartition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AdminPartition resources.
 */
export interface AdminPartitionState {
    /**
     * Free form partition description.
     */
    description?: pulumi.Input<string>;
    /**
     * . Disable gossip pool for the partition. Defaults to `false`.
     */
    disableGossip?: pulumi.Input<boolean>;
    /**
     * The partition name. This must be a valid DNS hostname label.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AdminPartition resource.
 */
export interface AdminPartitionArgs {
    /**
     * Free form partition description.
     */
    description?: pulumi.Input<string>;
    /**
     * . Disable gossip pool for the partition. Defaults to `false`.
     */
    disableGossip?: pulumi.Input<boolean>;
    /**
     * The partition name. This must be a valid DNS hostname label.
     */
    name?: pulumi.Input<string>;
}
