// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the consul package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'consul';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Provider.__pulumiType;
    }


    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        {
            inputs["address"] = (args ? args.address : undefined) || (utilities.getEnv("CONSUL_ADDRESS", "CONSUL_HTTP_ADDR") || "localhost:8500");
            inputs["caFile"] = (args ? args.caFile : undefined) || utilities.getEnv("CONSUL_CA_FILE");
            inputs["caPath"] = (args ? args.caPath : undefined) || utilities.getEnv("CONSUL_CAPATH");
            inputs["caPem"] = args ? args.caPem : undefined;
            inputs["certFile"] = (args ? args.certFile : undefined) || utilities.getEnv("CONSUL_CERT_FILE");
            inputs["certPem"] = args ? args.certPem : undefined;
            inputs["datacenter"] = args ? args.datacenter : undefined;
            inputs["httpAuth"] = (args ? args.httpAuth : undefined) || utilities.getEnv("CONSUL_HTTP_AUTH");
            inputs["insecureHttps"] = pulumi.output(args ? args.insecureHttps : undefined).apply(JSON.stringify);
            inputs["keyFile"] = (args ? args.keyFile : undefined) || utilities.getEnv("CONSUL_KEY_FILE");
            inputs["keyPem"] = args ? args.keyPem : undefined;
            inputs["namespace"] = args ? args.namespace : undefined;
            inputs["scheme"] = (args ? args.scheme : undefined) || (utilities.getEnv("CONSUL_SCHEME", "CONSUL_HTTP_SCHEME") || "http");
            inputs["token"] = (args ? args.token : undefined) || utilities.getEnv("CONSUL_TOKEN", "CONSUL_HTTP_TOKEN");
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Provider.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    readonly address?: pulumi.Input<string>;
    readonly caFile?: pulumi.Input<string>;
    readonly caPath?: pulumi.Input<string>;
    readonly caPem?: pulumi.Input<string>;
    readonly certFile?: pulumi.Input<string>;
    readonly certPem?: pulumi.Input<string>;
    readonly datacenter?: pulumi.Input<string>;
    readonly httpAuth?: pulumi.Input<string>;
    readonly insecureHttps?: pulumi.Input<boolean>;
    readonly keyFile?: pulumi.Input<string>;
    readonly keyPem?: pulumi.Input<string>;
    readonly namespace?: pulumi.Input<string>;
    readonly scheme?: pulumi.Input<string>;
    readonly token?: pulumi.Input<string>;
}
