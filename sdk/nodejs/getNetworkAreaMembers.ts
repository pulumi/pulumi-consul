// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
 *
 * The `consul.getNetworkAreaMembers` data source provides a list of the Consul
 * servers present in a specific network area.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const dc2NetworkArea = new consul.NetworkArea("dc2", {
 *     peerDatacenter: "dc2",
 *     retryJoins: ["1.2.3.4"],
 *     useTls: true,
 * });
 * const dc2 = consul.getNetworkAreaMembersOutput({
 *     uuid: dc2NetworkArea.id,
 * });
 * export const members = dc2.apply(dc2 => dc2.members);
 * ```
 */
export function getNetworkAreaMembers(args: GetNetworkAreaMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAreaMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getNetworkAreaMembers:getNetworkAreaMembers", {
        "datacenter": args.datacenter,
        "token": args.token,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkAreaMembers.
 */
export interface GetNetworkAreaMembersArgs {
    /**
     * The datacenter to use. This overrides the
     * agent's default datacenter and the datacenter in the provider setup.
     */
    datacenter?: string;
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     *
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    token?: string;
    /**
     * The UUID of the area to list.
     */
    uuid: string;
}

/**
 * A collection of values returned by getNetworkAreaMembers.
 */
export interface GetNetworkAreaMembersResult {
    /**
     * The node's Consul datacenter.
     */
    readonly datacenter: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of Consul servers in this network area
     */
    readonly members: outputs.GetNetworkAreaMembersMember[];
    /**
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    readonly token?: string;
    /**
     * The UUID of the Network Area being queried.
     */
    readonly uuid: string;
}
/**
 * > **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
 *
 * The `consul.getNetworkAreaMembers` data source provides a list of the Consul
 * servers present in a specific network area.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const dc2NetworkArea = new consul.NetworkArea("dc2", {
 *     peerDatacenter: "dc2",
 *     retryJoins: ["1.2.3.4"],
 *     useTls: true,
 * });
 * const dc2 = consul.getNetworkAreaMembersOutput({
 *     uuid: dc2NetworkArea.id,
 * });
 * export const members = dc2.apply(dc2 => dc2.members);
 * ```
 */
export function getNetworkAreaMembersOutput(args: GetNetworkAreaMembersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkAreaMembersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("consul:index/getNetworkAreaMembers:getNetworkAreaMembers", {
        "datacenter": args.datacenter,
        "token": args.token,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkAreaMembers.
 */
export interface GetNetworkAreaMembersOutputArgs {
    /**
     * The datacenter to use. This overrides the
     * agent's default datacenter and the datacenter in the provider setup.
     */
    datacenter?: pulumi.Input<string>;
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     *
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    token?: pulumi.Input<string>;
    /**
     * The UUID of the area to list.
     */
    uuid: pulumi.Input<string>;
}
