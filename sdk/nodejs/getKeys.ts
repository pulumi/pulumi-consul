// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `consul.Keys` resource reads values from the Consul key/value store.
 * This is a powerful way dynamically set values in templates.
 */
export function getKeys(args?: GetKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetKeysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getKeys:getKeys", {
        "datacenter": args.datacenter,
        "keys": args.keys,
        "namespace": args.namespace,
        "partition": args.partition,
        "token": args.token,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeys.
 */
export interface GetKeysArgs {
    /**
     * The datacenter to use. This overrides the
     * agent's default datacenter and the datacenter in the provider setup.
     */
    datacenter?: string;
    /**
     * Specifies a key in Consul to be read. Supported
     * values documented below. Multiple blocks supported.
     */
    keys?: inputs.GetKeysKey[];
    /**
     * The namespace to lookup the keys.
     */
    namespace?: string;
    /**
     * The partition to lookup the keys.
     */
    partition?: string;
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     *
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    token?: string;
}

/**
 * A collection of values returned by getKeys.
 */
export interface GetKeysResult {
    /**
     * The datacenter the keys are being read from.
     * * `var.<name>` - For each name given, the corresponding attribute
     * has the value of the key.
     */
    readonly datacenter: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keys?: outputs.GetKeysKey[];
    readonly namespace?: string;
    readonly partition?: string;
    /**
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    readonly token?: string;
    readonly var: {[key: string]: string};
}
/**
 * The `consul.Keys` resource reads values from the Consul key/value store.
 * This is a powerful way dynamically set values in templates.
 */
export function getKeysOutput(args?: GetKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeysResult> {
    return pulumi.output(args).apply((a: any) => getKeys(a, opts))
}

/**
 * A collection of arguments for invoking getKeys.
 */
export interface GetKeysOutputArgs {
    /**
     * The datacenter to use. This overrides the
     * agent's default datacenter and the datacenter in the provider setup.
     */
    datacenter?: pulumi.Input<string>;
    /**
     * Specifies a key in Consul to be read. Supported
     * values documented below. Multiple blocks supported.
     */
    keys?: pulumi.Input<pulumi.Input<inputs.GetKeysKeyArgs>[]>;
    /**
     * The namespace to lookup the keys.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The partition to lookup the keys.
     */
    partition?: pulumi.Input<string>;
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     *
     * @deprecated The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration
     */
    token?: pulumi.Input<string>;
}
