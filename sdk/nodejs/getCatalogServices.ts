// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getCatalogServices(args?: GetCatalogServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogServicesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("consul:index/getCatalogServices:getCatalogServices", {
        "queryOptions": args.queryOptions,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalogServices.
 */
export interface GetCatalogServicesArgs {
    queryOptions?: inputs.GetCatalogServicesQueryOption[];
}

/**
 * A collection of values returned by getCatalogServices.
 */
export interface GetCatalogServicesResult {
    readonly datacenter: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names: string[];
    readonly queryOptions?: outputs.GetCatalogServicesQueryOption[];
    readonly services: {[key: string]: string};
    readonly tags: {[key: string]: string};
}

export function getCatalogServicesOutput(args?: GetCatalogServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalogServicesResult> {
    return pulumi.output(args).apply(a => getCatalogServices(a, opts))
}

/**
 * A collection of arguments for invoking getCatalogServices.
 */
export interface GetCatalogServicesOutputArgs {
    queryOptions?: pulumi.Input<pulumi.Input<inputs.GetCatalogServicesQueryOptionArgs>[]>;
}
