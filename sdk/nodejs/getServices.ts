// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The `consul.getServices` data source returns a list of Consul services that
 * have been registered with the Consul cluster in a given datacenter.  By
 * specifying a different datacenter in the `queryOptions` it is possible to
 * retrieve a list of services from a different WAN-attached Consul datacenter.
 *
 * This data source is different from the `consul.Service` (singular) data
 * source, which provides a detailed response about a specific Consul service.
 */
export function getServices(args?: GetServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetServicesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("consul:index/getServices:getServices", {
        "queryOptions": args.queryOptions,
    }, opts);
}

/**
 * A collection of arguments for invoking getServices.
 */
export interface GetServicesArgs {
    /**
     * See below.
     */
    queryOptions?: inputs.GetServicesQueryOption[];
}

/**
 * A collection of values returned by getServices.
 */
export interface GetServicesResult {
    /**
     * The datacenter the keys are being read from to.
     */
    readonly datacenter: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names: string[];
    readonly queryOptions?: outputs.GetServicesQueryOption[];
    readonly services: {[key: string]: string};
    /**
     * A map of the tags found for each service.  If more than one service
     * shares the same tag, unique service names will be joined by whitespace (this
     * is the inverse of `services` and can be used to lookup the services that match
     * a single tag).
     */
    readonly tags: {[key: string]: string};
}

export function getServicesOutput(args?: GetServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServicesResult> {
    return pulumi.output(args).apply(a => getServices(a, opts))
}

/**
 * A collection of arguments for invoking getServices.
 */
export interface GetServicesOutputArgs {
    /**
     * See below.
     */
    queryOptions?: pulumi.Input<pulumi.Input<inputs.GetServicesQueryOptionArgs>[]>;
}
