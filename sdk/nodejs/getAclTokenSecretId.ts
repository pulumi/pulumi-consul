// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const testAclPolicy = new consul.AclPolicy("testAclPolicy", {
 *     rules: "node \"\" { policy = \"read\" }",
 *     datacenters: ["dc1"],
 * });
 * const testAclToken = new consul.AclToken("testAclToken", {
 *     description: "test",
 *     policies: [testAclPolicy.name],
 *     local: true,
 * });
 * const read = consul.getAclTokenSecretIdOutput({
 *     accessorId: testAclToken.id,
 *     pgpKey: "keybase:my_username",
 * });
 * export const consulAclTokenSecretId = read.apply(read => read.encryptedSecretId);
 * ```
 */
export function getAclTokenSecretId(args: GetAclTokenSecretIdArgs, opts?: pulumi.InvokeOptions): Promise<GetAclTokenSecretIdResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("consul:index/getAclTokenSecretId:getAclTokenSecretId", {
        "accessorId": args.accessorId,
        "namespace": args.namespace,
        "pgpKey": args.pgpKey,
    }, opts);
}

/**
 * A collection of arguments for invoking getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdArgs {
    /**
     * The accessor ID of the ACL token.
     */
    accessorId: string;
    /**
     * The namespace to lookup the token.
     */
    namespace?: string;
    pgpKey?: string;
}

/**
 * A collection of values returned by getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdResult {
    readonly accessorId: string;
    readonly encryptedSecretId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly namespace?: string;
    readonly pgpKey?: string;
    /**
     * The secret ID of the ACL token if `pgpKey` has not been set.
     */
    readonly secretId: string;
}

export function getAclTokenSecretIdOutput(args: GetAclTokenSecretIdOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAclTokenSecretIdResult> {
    return pulumi.output(args).apply(a => getAclTokenSecretId(a, opts))
}

/**
 * A collection of arguments for invoking getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdOutputArgs {
    /**
     * The accessor ID of the ACL token.
     */
    accessorId: pulumi.Input<string>;
    /**
     * The namespace to lookup the token.
     */
    namespace?: pulumi.Input<string>;
    pgpKey?: pulumi.Input<string>;
}
