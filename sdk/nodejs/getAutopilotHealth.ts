// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `consul.getAutopilotHealth` data source returns
 * [autopilot health information](https://www.consul.io/api/operator/autopilot.html#read-health)
 * about the current Consul cluster.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const read = consul.getAutopilotHealth({});
 * export const health = read.then(read => read.healthy);
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getAutopilotHealth(args?: GetAutopilotHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetAutopilotHealthResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAutopilotHealth:getAutopilotHealth", {
        "datacenter": args.datacenter,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutopilotHealth.
 */
export interface GetAutopilotHealthArgs {
    /**
     * The datacenter to use. This overrides the agent's
     * default datacenter and the datacenter in the provider setup.
     */
    datacenter?: string;
}

/**
 * A collection of values returned by getAutopilotHealth.
 */
export interface GetAutopilotHealthResult {
    readonly datacenter?: string;
    /**
     * The number of redundant healthy servers that could fail
     * without causing an outage
     */
    readonly failureTolerance: number;
    /**
     * Whether the server is healthy according to the current Autopilot
     * configuration
     */
    readonly healthy: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of server health information. See below for details on the
     * available information.
     */
    readonly servers: outputs.GetAutopilotHealthServer[];
}
/**
 * The `consul.getAutopilotHealth` data source returns
 * [autopilot health information](https://www.consul.io/api/operator/autopilot.html#read-health)
 * about the current Consul cluster.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const read = consul.getAutopilotHealth({});
 * export const health = read.then(read => read.healthy);
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getAutopilotHealthOutput(args?: GetAutopilotHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutopilotHealthResult> {
    return pulumi.output(args).apply((a: any) => getAutopilotHealth(a, opts))
}

/**
 * A collection of arguments for invoking getAutopilotHealth.
 */
export interface GetAutopilotHealthOutputArgs {
    /**
     * The datacenter to use. This overrides the agent's
     * default datacenter and the datacenter in the provider setup.
     */
    datacenter?: pulumi.Input<string>;
}
