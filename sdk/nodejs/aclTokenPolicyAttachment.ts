// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * `consul_acl_token_policy_attachment` can be imported. This is especially useful to manage the
 *
 *  policies attached to the anonymous and the master tokens with Terraform:
 *
 * ```sh
 * $ pulumi import consul:index/aclTokenPolicyAttachment:AclTokenPolicyAttachment anonymous 00000000-0000-0000-0000-000000000002:policy_name
 * ```
 *
 * ```sh
 * $ pulumi import consul:index/aclTokenPolicyAttachment:AclTokenPolicyAttachment master-token 624d94ca-bc5c-f960-4e83-0a609cf588be:policy_name
 * ```
 */
export class AclTokenPolicyAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AclTokenPolicyAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AclTokenPolicyAttachmentState, opts?: pulumi.CustomResourceOptions): AclTokenPolicyAttachment {
        return new AclTokenPolicyAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'consul:index/aclTokenPolicyAttachment:AclTokenPolicyAttachment';

    /**
     * Returns true if the given object is an instance of AclTokenPolicyAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AclTokenPolicyAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AclTokenPolicyAttachment.__pulumiType;
    }

    /**
     * The name of the policy attached to the token.
     */
    public readonly policy!: pulumi.Output<string>;
    /**
     * The id of the token.
     */
    public readonly tokenId!: pulumi.Output<string>;

    /**
     * Create a AclTokenPolicyAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AclTokenPolicyAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AclTokenPolicyAttachmentArgs | AclTokenPolicyAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AclTokenPolicyAttachmentState | undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["tokenId"] = state ? state.tokenId : undefined;
        } else {
            const args = argsOrState as AclTokenPolicyAttachmentArgs | undefined;
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if ((!args || args.tokenId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tokenId'");
            }
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["tokenId"] = args ? args.tokenId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AclTokenPolicyAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AclTokenPolicyAttachment resources.
 */
export interface AclTokenPolicyAttachmentState {
    /**
     * The name of the policy attached to the token.
     */
    policy?: pulumi.Input<string>;
    /**
     * The id of the token.
     */
    tokenId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AclTokenPolicyAttachment resource.
 */
export interface AclTokenPolicyAttachmentArgs {
    /**
     * The name of the policy attached to the token.
     */
    policy: pulumi.Input<string>;
    /**
     * The id of the token.
     */
    tokenId: pulumi.Input<string>;
}
