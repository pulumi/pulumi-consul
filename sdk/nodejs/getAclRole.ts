// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `consul.AclRole` data source returns the information related to a [Consul ACL Role](https://www.consul.io/api/acl/roles.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const test = consul.getAclRole({
 *     name: "example-role",
 * });
 * export const consulAclRole = test.then(test => test.id);
 * ```
 */
export function getAclRole(args: GetAclRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetAclRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAclRole:getAclRole", {
        "name": args.name,
        "namespace": args.namespace,
        "partition": args.partition,
    }, opts);
}

/**
 * A collection of arguments for invoking getAclRole.
 */
export interface GetAclRoleArgs {
    /**
     * The name of the ACL Role.
     */
    name: string;
    /**
     * The namespace to lookup the role.
     */
    namespace?: string;
    /**
     * The partition to lookup the role.
     */
    partition?: string;
}

/**
 * A collection of values returned by getAclRole.
 */
export interface GetAclRoleResult {
    /**
     * The description of the ACL Role.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the ACL Role.
     */
    readonly name: string;
    /**
     * The namespace to lookup the role.
     */
    readonly namespace?: string;
    /**
     * The list of node identities associated with the ACL Role.
     */
    readonly nodeIdentities: outputs.GetAclRoleNodeIdentity[];
    /**
     * The partition to lookup the role.
     */
    readonly partition?: string;
    /**
     * The list of policies associated with the ACL Role.
     */
    readonly policies: outputs.GetAclRolePolicy[];
    /**
     * The list of service identities associated with the ACL Role.
     */
    readonly serviceIdentities: outputs.GetAclRoleServiceIdentity[];
    /**
     * The list of templated policies that should be applied to the token.
     */
    readonly templatedPolicies: outputs.GetAclRoleTemplatedPolicy[];
}
/**
 * The `consul.AclRole` data source returns the information related to a [Consul ACL Role](https://www.consul.io/api/acl/roles.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const test = consul.getAclRole({
 *     name: "example-role",
 * });
 * export const consulAclRole = test.then(test => test.id);
 * ```
 */
export function getAclRoleOutput(args: GetAclRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAclRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("consul:index/getAclRole:getAclRole", {
        "name": args.name,
        "namespace": args.namespace,
        "partition": args.partition,
    }, opts);
}

/**
 * A collection of arguments for invoking getAclRole.
 */
export interface GetAclRoleOutputArgs {
    /**
     * The name of the ACL Role.
     */
    name: pulumi.Input<string>;
    /**
     * The namespace to lookup the role.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The partition to lookup the role.
     */
    partition?: pulumi.Input<string>;
}
