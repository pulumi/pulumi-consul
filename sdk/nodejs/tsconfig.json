{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "aclAuthMethod.ts",
        "aclBindingRule.ts",
        "aclPolicy.ts",
        "aclRole.ts",
        "aclRolePolicyAttachment.ts",
        "aclToken.ts",
        "aclTokenPolicyAttachment.ts",
        "aclTokenRoleAttachment.ts",
        "adminPartition.ts",
        "agentService.ts",
        "autopilotConfig.ts",
        "catalogEntry.ts",
        "certificateAuthority.ts",
        "config/index.ts",
        "config/vars.ts",
        "configEntry.ts",
        "configEntryServiceDefaults.ts",
        "configEntryServiceIntentions.ts",
        "configEntryServiceResolver.ts",
        "configEntryServiceRouter.ts",
        "configEntryServiceSplitter.ts",
        "getAclAuthMethod.ts",
        "getAclPolicy.ts",
        "getAclRole.ts",
        "getAclToken.ts",
        "getAclTokenSecretId.ts",
        "getAgentConfig.ts",
        "getAgentSelf.ts",
        "getAutopilotHealth.ts",
        "getCatalogNodes.ts",
        "getCatalogService.ts",
        "getCatalogServices.ts",
        "getConfigEntry.ts",
        "getDatacenters.ts",
        "getKeyPrefix.ts",
        "getKeys.ts",
        "getNetworkAreaMembers.ts",
        "getNetworkSegments.ts",
        "getNodes.ts",
        "getPeering.ts",
        "getPeerings.ts",
        "getService.ts",
        "getServiceHealth.ts",
        "getServices.ts",
        "index.ts",
        "intention.ts",
        "keyPrefix.ts",
        "keys.ts",
        "license.ts",
        "namespace.ts",
        "namespacePolicyAttachment.ts",
        "namespaceRoleAttachment.ts",
        "networkArea.ts",
        "node.ts",
        "peering.ts",
        "peeringToken.ts",
        "preparedQuery.ts",
        "provider.ts",
        "service.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
