// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `consul.AclToken` data source returns the information related to the
 * `consul.AclToken` resource with the exception of its secret ID.
 *
 * If you want to get the secret ID associated with a token, use the
 * [`consul.getAclTokenSecretId` data source](https://www.terraform.io/docs/providers/consul/d/acl_token_secret_id.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as consul from "@pulumi/consul";
 *
 * const test = pulumi.output(consul.getAclToken({
 *     accessorId: "00000000-0000-0000-0000-000000000002",
 * }, { async: true }));
 *
 * export const consulAclPolicies = test.policies!;
 * ```
 */
export function getAclToken(args: GetAclTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetAclTokenResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("consul:index/getAclToken:getAclToken", {
        "accessorId": args.accessorId,
        "description": args.description,
        "local": args.local,
        "namespace": args.namespace,
        "policies": args.policies,
    }, opts);
}

/**
 * A collection of arguments for invoking getAclToken.
 */
export interface GetAclTokenArgs {
    /**
     * The accessor ID of the ACL token.
     */
    readonly accessorId: string;
    /**
     * The description of the ACL token.
     */
    readonly description?: string;
    /**
     * Whether the ACL token is local to the datacenter it was created within.
     */
    readonly local?: boolean;
    /**
     * The namespace to lookup the ACL token.
     */
    readonly namespace?: string;
    /**
     * A list of policies associated with the ACL token. Each entry has
     * an `id` and a `name` attribute.
     */
    readonly policies?: inputs.GetAclTokenPolicy[];
}

/**
 * A collection of values returned by getAclToken.
 */
export interface GetAclTokenResult {
    readonly accessorId: string;
    /**
     * The description of the ACL token.
     */
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether the ACL token is local to the datacenter it was created within.
     */
    readonly local?: boolean;
    readonly namespace?: string;
    /**
     * A list of policies associated with the ACL token. Each entry has
     * an `id` and a `name` attribute.
     */
    readonly policies?: outputs.GetAclTokenPolicy[];
}
