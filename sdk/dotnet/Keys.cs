// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public partial class Keys : Pulumi.CustomResource
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Output("datacenter")]
        public Output<string> Datacenter { get; private set; } = null!;

        /// <summary>
        /// Specifies a key in Consul to be written.
        /// Supported values documented below.
        /// </summary>
        [Output("keys")]
        public Output<ImmutableArray<Outputs.KeysKeys>> KeysCollection { get; private set; } = null!;

        /// <summary>
        /// The namespace to create the keys within.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Output("token")]
        public Output<string?> Token { get; private set; } = null!;

        [Output("var")]
        public Output<ImmutableDictionary<string, string>> Var { get; private set; } = null!;


        /// <summary>
        /// Create a Keys resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Keys(string name, KeysArgs? args = null, CustomResourceOptions? options = null)
            : base("consul:index/keys:Keys", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Keys(string name, Input<string> id, KeysState? state = null, CustomResourceOptions? options = null)
            : base("consul:index/keys:Keys", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Keys resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Keys Get(string name, Input<string> id, KeysState? state = null, CustomResourceOptions? options = null)
        {
            return new Keys(name, id, state, options);
        }
    }

    public sealed class KeysArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        [Input("keys")]
        private InputList<Inputs.KeysKeysArgs>? _keys;

        /// <summary>
        /// Specifies a key in Consul to be written.
        /// Supported values documented below.
        /// </summary>
        public InputList<Inputs.KeysKeysArgs> KeysCollection
        {
            get => _keys ?? (_keys = new InputList<Inputs.KeysKeysArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The namespace to create the keys within.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        public KeysArgs()
        {
        }
    }

    public sealed class KeysState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        [Input("keys")]
        private InputList<Inputs.KeysKeysGetArgs>? _keys;

        /// <summary>
        /// Specifies a key in Consul to be written.
        /// Supported values documented below.
        /// </summary>
        public InputList<Inputs.KeysKeysGetArgs> KeysCollection
        {
            get => _keys ?? (_keys = new InputList<Inputs.KeysKeysGetArgs>());
            set => _keys = value;
        }

        /// <summary>
        /// The namespace to create the keys within.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        [Input("var")]
        private InputMap<string>? _var;
        public InputMap<string> Var
        {
            get => _var ?? (_var = new InputMap<string>());
            set => _var = value;
        }

        public KeysState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class KeysKeysArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        /// <summary>
        /// If true, then the key will be deleted when
        /// either its configuration block is removed from the configuration or
        /// the entire resource is destroyed. Otherwise, it will be left in Consul.
        /// Defaults to false.
        /// </summary>
        [Input("delete")]
        public Input<bool>? Delete { get; set; }

        /// <summary>
        /// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
        /// to attach to the key (defaults to 0).
        /// </summary>
        [Input("flags")]
        public Input<int>? Flags { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// This is the path in Consul that should be written to.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// The value to write to the given path.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public KeysKeysArgs()
        {
        }
    }

    public sealed class KeysKeysGetArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        /// <summary>
        /// If true, then the key will be deleted when
        /// either its configuration block is removed from the configuration or
        /// the entire resource is destroyed. Otherwise, it will be left in Consul.
        /// Defaults to false.
        /// </summary>
        [Input("delete")]
        public Input<bool>? Delete { get; set; }

        /// <summary>
        /// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
        /// to attach to the key (defaults to 0).
        /// </summary>
        [Input("flags")]
        public Input<int>? Flags { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// This is the path in Consul that should be written to.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// The value to write to the given path.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public KeysKeysGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class KeysKeys
    {
        public readonly string? Default;
        /// <summary>
        /// If true, then the key will be deleted when
        /// either its configuration block is removed from the configuration or
        /// the entire resource is destroyed. Otherwise, it will be left in Consul.
        /// Defaults to false.
        /// </summary>
        public readonly bool? Delete;
        /// <summary>
        /// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
        /// to attach to the key (defaults to 0).
        /// </summary>
        public readonly int? Flags;
        public readonly string? Name;
        /// <summary>
        /// This is the path in Consul that should be written to.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// The value to write to the given path.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private KeysKeys(
            string? @default,
            bool? delete,
            int? flags,
            string? name,
            string path,
            string value)
        {
            Default = @default;
            Delete = delete;
            Flags = flags;
            Name = name;
            Path = path;
            Value = value;
        }
    }
    }
}
