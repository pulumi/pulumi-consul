// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Consul = Pulumi.Consul;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myRole = Consul.GetAclRole.Invoke(new()
    ///     {
    ///         Name = "my_role",
    ///     });
    /// 
    ///     var readPolicy = new Consul.AclPolicy("readPolicy", new()
    ///     {
    ///         Rules = "node \"\" { policy = \"read\" }",
    ///         Datacenters = new[]
    ///         {
    ///             "dc1",
    ///         },
    ///     });
    /// 
    ///     var myRoleReadPolicy = new Consul.AclRolePolicyAttachment("myRoleReadPolicy", new()
    ///     {
    ///         RoleId = data.Consul_acl_role.Test.Id,
    ///         Policy = readPolicy.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import consul:index/aclRolePolicyAttachment:AclRolePolicyAttachment my_role_read_policy 624d94ca-bc5c-f960-4e83-0a609cf588be:policy_name
    /// ```
    /// </summary>
    [ConsulResourceType("consul:index/aclRolePolicyAttachment:AclRolePolicyAttachment")]
    public partial class AclRolePolicyAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The policy name.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// The id of the role.
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;


        /// <summary>
        /// Create a AclRolePolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AclRolePolicyAttachment(string name, AclRolePolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("consul:index/aclRolePolicyAttachment:AclRolePolicyAttachment", name, args ?? new AclRolePolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AclRolePolicyAttachment(string name, Input<string> id, AclRolePolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("consul:index/aclRolePolicyAttachment:AclRolePolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AclRolePolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AclRolePolicyAttachment Get(string name, Input<string> id, AclRolePolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new AclRolePolicyAttachment(name, id, state, options);
        }
    }

    public sealed class AclRolePolicyAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        /// <summary>
        /// The id of the role.
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        public AclRolePolicyAttachmentArgs()
        {
        }
        public static new AclRolePolicyAttachmentArgs Empty => new AclRolePolicyAttachmentArgs();
    }

    public sealed class AclRolePolicyAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy name.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The id of the role.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        public AclRolePolicyAttachmentState()
        {
        }
        public static new AclRolePolicyAttachmentState Empty => new AclRolePolicyAttachmentState();
    }
}
