// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetServices
    {
        /// <summary>
        /// The `consul.getServices` data source returns a list of Consul services that
        /// have been registered with the Consul cluster in a given datacenter.  By
        /// specifying a different datacenter in the `query_options` it is possible to
        /// retrieve a list of services from a different WAN-attached Consul datacenter.
        /// 
        /// This data source is different from the `consul.Service` (singular) data
        /// source, which provides a detailed response about a specific Consul service.
        /// </summary>
        public static Task<GetServicesResult> InvokeAsync(GetServicesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServicesResult>("consul:index/getServices:getServices", args ?? new GetServicesArgs(), options.WithVersion());
    }


    public sealed class GetServicesArgs : Pulumi.InvokeArgs
    {
        [Input("queryOptions")]
        private List<Inputs.GetServicesQueryOptionArgs>? _queryOptions;

        /// <summary>
        /// See below.
        /// </summary>
        public List<Inputs.GetServicesQueryOptionArgs> QueryOptions
        {
            get => _queryOptions ?? (_queryOptions = new List<Inputs.GetServicesQueryOptionArgs>());
            set => _queryOptions = value;
        }

        public GetServicesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServicesResult
    {
        /// <summary>
        /// The datacenter the keys are being read from to.
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly ImmutableArray<Outputs.GetServicesQueryOptionResult> QueryOptions;
        public readonly ImmutableDictionary<string, string> Services;

        [OutputConstructor]
        private GetServicesResult(
            string datacenter,

            string id,

            ImmutableArray<string> names,

            ImmutableArray<Outputs.GetServicesQueryOptionResult> queryOptions,

            ImmutableDictionary<string, string> services)
        {
            Datacenter = datacenter;
            Id = id;
            Names = names;
            QueryOptions = queryOptions;
            Services = services;
        }
    }
}
