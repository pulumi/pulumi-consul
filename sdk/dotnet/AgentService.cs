// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    /// <summary>
    /// !&gt; The `consul.AgentService` resource has been deprecated in version 2.0.0 of the provider
    /// and will be removed in a future release. Please read the [upgrade guide](https://www.terraform.io/docs/providers/consul/guides/upgrading.html#deprecation-of-consul_agent_service)
    /// for more information.
    /// 
    /// Provides access to the agent service data in Consul. This can be used to
    /// define a service associated with a particular agent. Currently, defining
    /// health checks for an agent service is not supported.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Consul = Pulumi.Consul;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var app = new Consul.AgentService("app", new()
    ///     {
    ///         Address = "www.google.com",
    ///         Name = "google",
    ///         Port = 80,
    ///         Tags = new[]
    ///         {
    ///             "tag0",
    ///             "tag1",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ConsulResourceType("consul:index/agentService:AgentService")]
    public partial class AgentService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The address of the service. Defaults to the
        /// address of the agent.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// The name of the service.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The port of the service.
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// A list of values that are opaque to Consul,
        /// but can be used to distinguish between services or nodes.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AgentService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentService(string name, AgentServiceArgs? args = null, CustomResourceOptions? options = null)
            : base("consul:index/agentService:AgentService", name, args ?? new AgentServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentService(string name, Input<string> id, AgentServiceState? state = null, CustomResourceOptions? options = null)
            : base("consul:index/agentService:AgentService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentService Get(string name, Input<string> id, AgentServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentService(name, id, state, options);
        }
    }

    public sealed class AgentServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The address of the service. Defaults to the
        /// address of the agent.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The name of the service.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port of the service.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of values that are opaque to Consul,
        /// but can be used to distinguish between services or nodes.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public AgentServiceArgs()
        {
        }
        public static new AgentServiceArgs Empty => new AgentServiceArgs();
    }

    public sealed class AgentServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The address of the service. Defaults to the
        /// address of the agent.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The name of the service.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port of the service.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of values that are opaque to Consul,
        /// but can be used to distinguish between services or nodes.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public AgentServiceState()
        {
        }
        public static new AgentServiceState Empty => new AgentServiceState();
    }
}
