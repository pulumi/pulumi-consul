// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetAclToken
    {
        /// <summary>
        /// The `consul..AclToken` data source returns the information related to the
        /// `consul..AclToken` resource with the exception of its secret ID.
        /// 
        /// If you want to get the secret ID associated with a token, use the
        /// [`consul..getAclTokenSecretId` data source](https://www.terraform.io/docs/providers/consul/d/acl_token_secret_id.html).
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAclTokenResult> InvokeAsync(GetAclTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAclTokenResult>("consul:index/getAclToken:getAclToken", args ?? new GetAclTokenArgs(), options.WithVersion());
    }


    public sealed class GetAclTokenArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The accessor ID of the ACL token.
        /// </summary>
        [Input("accessorId", required: true)]
        public string AccessorId { get; set; } = null!;

        /// <summary>
        /// The description of the ACL token.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Whether the ACL token is local to the datacenter it was created within.
        /// </summary>
        [Input("local")]
        public bool? Local { get; set; }

        /// <summary>
        /// The namespace to lookup the ACL token.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("policies")]
        private List<Inputs.GetAclTokenPolicyArgs>? _policies;

        /// <summary>
        /// A list of policies associated with the ACL token. Each entry has
        /// an `id` and a `name` attribute.
        /// </summary>
        public List<Inputs.GetAclTokenPolicyArgs> Policies
        {
            get => _policies ?? (_policies = new List<Inputs.GetAclTokenPolicyArgs>());
            set => _policies = value;
        }

        public GetAclTokenArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAclTokenResult
    {
        public readonly string AccessorId;
        /// <summary>
        /// The description of the ACL token.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the ACL token is local to the datacenter it was created within.
        /// </summary>
        public readonly bool? Local;
        public readonly string? Namespace;
        /// <summary>
        /// A list of policies associated with the ACL token. Each entry has
        /// an `id` and a `name` attribute.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAclTokenPolicyResult> Policies;

        [OutputConstructor]
        private GetAclTokenResult(
            string accessorId,

            string? description,

            string id,

            bool? local,

            string? @namespace,

            ImmutableArray<Outputs.GetAclTokenPolicyResult> policies)
        {
            AccessorId = accessorId;
            Description = description;
            Id = id;
            Local = local;
            Namespace = @namespace;
            Policies = policies;
        }
    }
}
