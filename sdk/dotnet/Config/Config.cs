// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Consul
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("consul");

        private static readonly __Value<string?> _address = new __Value<string?>(() => __config.Get("address"));
        public static string? Address
        {
            get => _address.Get();
            set => _address.Set(value);
        }

        private static readonly __Value<string?> _caFile = new __Value<string?>(() => __config.Get("caFile"));
        public static string? CaFile
        {
            get => _caFile.Get();
            set => _caFile.Set(value);
        }

        private static readonly __Value<string?> _caPath = new __Value<string?>(() => __config.Get("caPath"));
        public static string? CaPath
        {
            get => _caPath.Get();
            set => _caPath.Set(value);
        }

        private static readonly __Value<string?> _caPem = new __Value<string?>(() => __config.Get("caPem"));
        public static string? CaPem
        {
            get => _caPem.Get();
            set => _caPem.Set(value);
        }

        private static readonly __Value<string?> _certFile = new __Value<string?>(() => __config.Get("certFile"));
        public static string? CertFile
        {
            get => _certFile.Get();
            set => _certFile.Set(value);
        }

        private static readonly __Value<string?> _certPem = new __Value<string?>(() => __config.Get("certPem"));
        public static string? CertPem
        {
            get => _certPem.Get();
            set => _certPem.Set(value);
        }

        private static readonly __Value<string?> _datacenter = new __Value<string?>(() => __config.Get("datacenter"));
        public static string? Datacenter
        {
            get => _datacenter.Get();
            set => _datacenter.Set(value);
        }

        private static readonly __Value<ImmutableArray<Pulumi.Consul.Config.Types.Headers>> _headers = new __Value<ImmutableArray<Pulumi.Consul.Config.Types.Headers>>(() => __config.GetObject<ImmutableArray<Pulumi.Consul.Config.Types.Headers>>("headers"));
        /// <summary>
        /// Additional headers to send with each Consul request.
        /// </summary>
        public static ImmutableArray<Pulumi.Consul.Config.Types.Headers> Headers
        {
            get => _headers.Get();
            set => _headers.Set(value);
        }

        private static readonly __Value<string?> _httpAuth = new __Value<string?>(() => __config.Get("httpAuth"));
        public static string? HttpAuth
        {
            get => _httpAuth.Get();
            set => _httpAuth.Set(value);
        }

        private static readonly __Value<bool?> _insecureHttps = new __Value<bool?>(() => __config.GetBoolean("insecureHttps"));
        public static bool? InsecureHttps
        {
            get => _insecureHttps.Get();
            set => _insecureHttps.Set(value);
        }

        private static readonly __Value<string?> _keyFile = new __Value<string?>(() => __config.Get("keyFile"));
        public static string? KeyFile
        {
            get => _keyFile.Get();
            set => _keyFile.Set(value);
        }

        private static readonly __Value<string?> _keyPem = new __Value<string?>(() => __config.Get("keyPem"));
        public static string? KeyPem
        {
            get => _keyPem.Get();
            set => _keyPem.Set(value);
        }

        private static readonly __Value<string?> _namespace = new __Value<string?>(() => __config.Get("namespace"));
        public static string? Namespace
        {
            get => _namespace.Get();
            set => _namespace.Set(value);
        }

        private static readonly __Value<string?> _scheme = new __Value<string?>(() => __config.Get("scheme"));
        public static string? Scheme
        {
            get => _scheme.Get();
            set => _scheme.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

        public static class Types
        {

             public class Headers
             {
                public string Name { get; set; }
                public string Value { get; set; }
            }
        }
    }
}
