// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetAgentSelf
    {
        /// <summary>
        /// &gt; **Warning:** The `consul.getAgentSelf` resource has been deprecated and will be removed
        /// from a future release of the provider. Read the [upgrade instructions](https://www.terraform.io/docs/providers/consul/guides/upgrading.html#deprecation-of-consul_agent_self) for more information.
        /// 
        /// 
        /// The `consul.getAgentSelf` data source returns
        /// [configuration and status data](https://www.consul.io/docs/agent/http/agent.html#agent_self)
        /// from the agent specified in the `Provider`.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetAgentSelfResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAgentSelfResult>("consul:index/getAgentSelf:getAgentSelf", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// &gt; **Warning:** The `consul.getAgentSelf` resource has been deprecated and will be removed
        /// from a future release of the provider. Read the [upgrade instructions](https://www.terraform.io/docs/providers/consul/guides/upgrading.html#deprecation-of-consul_agent_self) for more information.
        /// 
        /// 
        /// The `consul.getAgentSelf` data source returns
        /// [configuration and status data](https://www.consul.io/docs/agent/http/agent.html#agent_self)
        /// from the agent specified in the `Provider`.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetAgentSelfResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentSelfResult>("consul:index/getAgentSelf:getAgentSelf", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// &gt; **Warning:** The `consul.getAgentSelf` resource has been deprecated and will be removed
        /// from a future release of the provider. Read the [upgrade instructions](https://www.terraform.io/docs/providers/consul/guides/upgrading.html#deprecation-of-consul_agent_self) for more information.
        /// 
        /// 
        /// The `consul.getAgentSelf` data source returns
        /// [configuration and status data](https://www.consul.io/docs/agent/http/agent.html#agent_self)
        /// from the agent specified in the `Provider`.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetAgentSelfResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAgentSelfResult>("consul:index/getAgentSelf:getAgentSelf", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAgentSelfResult
    {
        public readonly string AclDatacenter;
        public readonly string AclDefaultPolicy;
        /// <summary>
        /// * [`AclDownPolicy`](https://www.consul.io/docs/agent/options.html#acl_down_policy)
        /// * [`AclEnforce08Semantics`](https://www.consul.io/docs/agent/options.html#acl_enforce_version_8)
        /// * [`AclTtl`](https://www.consul.io/docs/agent/options.html#acl_ttl)
        /// * [`Addresses`](https://www.consul.io/docs/agent/options.html#addresses)
        /// * [`AdvertiseAddr`](https://www.consul.io/docs/agent/options.html#_advertise)
        /// * [`AdvertiseAddrWan`](https://www.consul.io/docs/agent/options.html#_advertise-wan)
        /// * [`AdvertiseAddrs`](https://www.consul.io/docs/agent/options.html#advertise_addrs)
        /// * [`AtlasJoin`](https://www.consul.io/docs/agent/options.html#_atlas_join)
        /// * [`BindAddr`](https://www.consul.io/docs/agent/options.html#_bind)
        /// * [`BootstrapExpect`](https://www.consul.io/docs/agent/options.html#_bootstrap_expect)
        /// * [`BootstrapMode`](https://www.consul.io/docs/agent/options.html#_bootstrap)
        /// </summary>
        public readonly string AclDisabledTtl;
        public readonly string AclDownPolicy;
        public readonly bool AclEnforce08Semantics;
        public readonly string AclTtl;
        public readonly ImmutableDictionary<string, string> Addresses;
        public readonly string AdvertiseAddr;
        public readonly string AdvertiseAddrWan;
        public readonly ImmutableDictionary<string, string> AdvertiseAddrs;
        public readonly bool AtlasJoin;
        public readonly string BindAddr;
        public readonly int BootstrapExpect;
        public readonly bool BootstrapMode;
        public readonly string CheckDeregisterIntervalMin;
        /// <summary>
        /// * [`CheckUpdateInterval`](https://www.consul.io/docs/agent/options.html#check_update_interval)
        /// * [`ClientAddr`](https://www.consul.io/docs/agent/options.html#_client)
        /// </summary>
        public readonly string CheckReapInterval;
        public readonly string CheckUpdateInterval;
        public readonly string ClientAddr;
        public readonly string DataDir;
        public readonly string Datacenter;
        public readonly bool DevMode;
        /// <summary>
        /// A map of DNS configuration attributes.  See below for details on the
        /// contents of the `Dns` attribute.
        /// * [`DnsRecursors`](https://www.consul.io/docs/agent/options.html#recursors) - A
        /// list of all DNS recursors.
        /// * [`DataDir`](https://www.consul.io/docs/agent/options.html#_data_dir)
        /// * [`Datacenter`](https://www.consul.io/docs/agent/options.html#_datacenter)
        /// * [`DevMode`](https://www.consul.io/docs/agent/options.html#_dev)
        /// * [`Domain`](https://www.consul.io/docs/agent/options.html#_domain)
        /// * [`EnableAnonymousSignature`](https://www.consul.io/docs/agent/options.html#disable_anonymous_signature)
        /// </summary>
        public readonly ImmutableDictionary<string, string> Dns;
        public readonly ImmutableArray<string> DnsRecursors;
        public readonly string Domain;
        public readonly bool EnableAnonymousSignature;
        /// <summary>
        /// * [`EnableDebug`](https://www.consul.io/docs/agent/options.html#enable_debug)
        /// * [`EnableRemoteExec`](https://www.consul.io/docs/agent/options.html#disable_remote_exec)
        /// * [`EnableSyslog`](https://www.consul.io/docs/agent/options.html#_syslog)
        /// * [`EnableUi`](https://www.consul.io/docs/agent/options.html#_ui)
        /// * [`EnableUpdateCheck`](https://www.consul.io/docs/agent/options.html#disable_update_check)
        /// * [`Id`](https://www.consul.io/docs/agent/options.html#_node_id)
        /// * [`LeaveOnInt`](https://www.consul.io/docs/agent/options.html#skip_leave_on_interrupt)
        /// * [`LeaveOnTerm`](https://www.consul.io/docs/agent/options.html#leave_on_terminate)
        /// * [`LogLevel`](https://www.consul.io/docs/agent/options.html#_log_level)
        /// * [`Name`](https://www.consul.io/docs/agent/options.html#_node)
        /// * [`Performance`](https://www.consul.io/docs/agent/options.html#performance)
        /// * [`PidFile`](https://www.consul.io/docs/agent/options.html#_pid_file)
        /// * [`Ports`](https://www.consul.io/docs/agent/options.html#ports)
        /// * [`ProtocolVersion`](https://www.consul.io/docs/agent/options.html#_protocol)
        /// * [`ReconnectTimeoutLan`](https://www.consul.io/docs/agent/options.html#reconnect_timeout)
        /// * [`ReconnectTimeoutWan`](https://www.consul.io/docs/agent/options.html#reconnect_timeout_wan)
        /// * [`RejoinAfterLeave`](https://www.consul.io/docs/agent/options.html#_rejoin)
        /// * [`RetryJoin`](https://www.consul.io/docs/agent/options.html#retry_join)
        /// * [`RetryJoinEc2`](https://www.consul.io/docs/agent/options.html#retry_join_ec2) -
        /// A map of EC2 retry attributes.  See below for details on the available
        /// information.
        /// * [`RetryJoinGce`](https://www.consul.io/docs/agent/options.html#retry_join_gce) -
        /// A map of GCE retry attributes.  See below for details on the available
        /// information.
        /// * [`RetryJoinWan`](https://www.consul.io/docs/agent/options.html#_retry_join_wan)
        /// * [`RetryMaxAttempts`](https://www.consul.io/docs/agent/options.html#_retry_max)
        /// * [`RetryMaxAttemptsWan`](https://www.consul.io/docs/agent/options.html#_retry_max_wan)
        /// * [`SerfLanBindAddr`](https://www.consul.io/docs/agent/options.html#_serf_lan_bind)
        /// * [`SerfWanBindAddr`](https://www.consul.io/docs/agent/options.html#_serf_wan_bind)
        /// * [`ServerMode`](https://www.consul.io/docs/agent/options.html#_server)
        /// * [`ServerName`](https://www.consul.io/docs/agent/options.html#server_name)
        /// * [`SessionTtlMin`](https://www.consul.io/docs/agent/options.html#session_ttl_min)
        /// * [`StartJoin`](https://www.consul.io/docs/agent/options.html#start_join)
        /// * [`StartJoinWan`](https://www.consul.io/docs/agent/options.html#start_join_wan)
        /// * [`SyslogFacility`](https://www.consul.io/docs/agent/options.html#syslog_facility)
        /// * [`TlsCaFile`](https://www.consul.io/docs/agent/options.html#ca_file)
        /// * [`TlsCertFile`](https://www.consul.io/docs/agent/options.html#cert_file)
        /// * [`TlsKeyFile`](https://www.consul.io/docs/agent/options.html#key_file)
        /// * [`TlsMinVersion`](https://www.consul.io/docs/agent/options.html#tls_min_version)
        /// * [`TlsVerifyIncoming`](https://www.consul.io/docs/agent/options.html#verify_incoming)
        /// * [`TlsVerifyOutgoing`](https://www.consul.io/docs/agent/options.html#verify_outgoing)
        /// * [`TlsVerifyServerHostname`](https://www.consul.io/docs/agent/options.html#verify_server_hostname)
        /// * [`TaggedAddresses`](https://www.consul.io/docs/agent/options.html#translate_wan_addrs)
        /// * [`Telemetry`](https://www.consul.io/docs/agent/options.html#telemetry) - A map
        /// of telemetry configuration.
        /// * [`TranslateWanAddrs`](https://www.consul.io/docs/agent/options.html#translate_wan_addrs)
        /// * [`UiDir`](https://www.consul.io/docs/agent/options.html#ui_dir)
        /// * [`UnixSockets`](https://www.consul.io/docs/agent/options.html#unix_sockets)
        /// </summary>
        public readonly bool EnableCoordinates;
        public readonly bool EnableDebug;
        public readonly bool EnableRemoteExec;
        public readonly bool EnableSyslog;
        public readonly bool EnableUi;
        public readonly bool EnableUpdateCheck;
        public readonly string Id;
        public readonly bool LeaveOnInt;
        public readonly bool LeaveOnTerm;
        public readonly string LogLevel;
        public readonly string Name;
        public readonly ImmutableDictionary<string, string> Performance;
        public readonly string PidFile;
        public readonly ImmutableDictionary<string, int> Ports;
        public readonly int ProtocolVersion;
        public readonly string ReconnectTimeoutLan;
        public readonly string ReconnectTimeoutWan;
        public readonly bool RejoinAfterLeave;
        public readonly ImmutableDictionary<string, string> RetryJoinEc2;
        public readonly ImmutableDictionary<string, string> RetryJoinGce;
        public readonly ImmutableArray<string> RetryJoinWans;
        public readonly ImmutableArray<string> RetryJoins;
        public readonly int RetryMaxAttempts;
        public readonly int RetryMaxAttemptsWan;
        public readonly string SerfLanBindAddr;
        public readonly string SerfWanBindAddr;
        public readonly bool ServerMode;
        public readonly string ServerName;
        public readonly string SessionTtlMin;
        public readonly ImmutableArray<string> StartJoinWans;
        public readonly ImmutableArray<string> StartJoins;
        public readonly string SyslogFacility;
        public readonly ImmutableDictionary<string, string> TaggedAddresses;
        public readonly ImmutableDictionary<string, string> Telemetry;
        public readonly string TlsCaFile;
        public readonly string TlsCertFile;
        public readonly string TlsKeyFile;
        public readonly string TlsMinVersion;
        public readonly bool TlsVerifyIncoming;
        public readonly bool TlsVerifyOutgoing;
        public readonly bool TlsVerifyServerHostname;
        public readonly bool TranslateWanAddrs;
        public readonly string UiDir;
        public readonly ImmutableDictionary<string, string> UnixSockets;
        /// <summary>
        /// The version of the Consul agent.
        /// </summary>
        public readonly string Version;
        public readonly string VersionPrerelease;
        public readonly string VersionRevision;

        [OutputConstructor]
        private GetAgentSelfResult(
            string aclDatacenter,

            string aclDefaultPolicy,

            string aclDisabledTtl,

            string aclDownPolicy,

            bool aclEnforce08Semantics,

            string aclTtl,

            ImmutableDictionary<string, string> addresses,

            string advertiseAddr,

            string advertiseAddrWan,

            ImmutableDictionary<string, string> advertiseAddrs,

            bool atlasJoin,

            string bindAddr,

            int bootstrapExpect,

            bool bootstrapMode,

            string checkDeregisterIntervalMin,

            string checkReapInterval,

            string checkUpdateInterval,

            string clientAddr,

            string dataDir,

            string datacenter,

            bool devMode,

            ImmutableDictionary<string, string> dns,

            ImmutableArray<string> dnsRecursors,

            string domain,

            bool enableAnonymousSignature,

            bool enableCoordinates,

            bool enableDebug,

            bool enableRemoteExec,

            bool enableSyslog,

            bool enableUi,

            bool enableUpdateCheck,

            string id,

            bool leaveOnInt,

            bool leaveOnTerm,

            string logLevel,

            string name,

            ImmutableDictionary<string, string> performance,

            string pidFile,

            ImmutableDictionary<string, int> ports,

            int protocolVersion,

            string reconnectTimeoutLan,

            string reconnectTimeoutWan,

            bool rejoinAfterLeave,

            ImmutableDictionary<string, string> retryJoinEc2,

            ImmutableDictionary<string, string> retryJoinGce,

            ImmutableArray<string> retryJoinWans,

            ImmutableArray<string> retryJoins,

            int retryMaxAttempts,

            int retryMaxAttemptsWan,

            string serfLanBindAddr,

            string serfWanBindAddr,

            bool serverMode,

            string serverName,

            string sessionTtlMin,

            ImmutableArray<string> startJoinWans,

            ImmutableArray<string> startJoins,

            string syslogFacility,

            ImmutableDictionary<string, string> taggedAddresses,

            ImmutableDictionary<string, string> telemetry,

            string tlsCaFile,

            string tlsCertFile,

            string tlsKeyFile,

            string tlsMinVersion,

            bool tlsVerifyIncoming,

            bool tlsVerifyOutgoing,

            bool tlsVerifyServerHostname,

            bool translateWanAddrs,

            string uiDir,

            ImmutableDictionary<string, string> unixSockets,

            string version,

            string versionPrerelease,

            string versionRevision)
        {
            AclDatacenter = aclDatacenter;
            AclDefaultPolicy = aclDefaultPolicy;
            AclDisabledTtl = aclDisabledTtl;
            AclDownPolicy = aclDownPolicy;
            AclEnforce08Semantics = aclEnforce08Semantics;
            AclTtl = aclTtl;
            Addresses = addresses;
            AdvertiseAddr = advertiseAddr;
            AdvertiseAddrWan = advertiseAddrWan;
            AdvertiseAddrs = advertiseAddrs;
            AtlasJoin = atlasJoin;
            BindAddr = bindAddr;
            BootstrapExpect = bootstrapExpect;
            BootstrapMode = bootstrapMode;
            CheckDeregisterIntervalMin = checkDeregisterIntervalMin;
            CheckReapInterval = checkReapInterval;
            CheckUpdateInterval = checkUpdateInterval;
            ClientAddr = clientAddr;
            DataDir = dataDir;
            Datacenter = datacenter;
            DevMode = devMode;
            Dns = dns;
            DnsRecursors = dnsRecursors;
            Domain = domain;
            EnableAnonymousSignature = enableAnonymousSignature;
            EnableCoordinates = enableCoordinates;
            EnableDebug = enableDebug;
            EnableRemoteExec = enableRemoteExec;
            EnableSyslog = enableSyslog;
            EnableUi = enableUi;
            EnableUpdateCheck = enableUpdateCheck;
            Id = id;
            LeaveOnInt = leaveOnInt;
            LeaveOnTerm = leaveOnTerm;
            LogLevel = logLevel;
            Name = name;
            Performance = performance;
            PidFile = pidFile;
            Ports = ports;
            ProtocolVersion = protocolVersion;
            ReconnectTimeoutLan = reconnectTimeoutLan;
            ReconnectTimeoutWan = reconnectTimeoutWan;
            RejoinAfterLeave = rejoinAfterLeave;
            RetryJoinEc2 = retryJoinEc2;
            RetryJoinGce = retryJoinGce;
            RetryJoinWans = retryJoinWans;
            RetryJoins = retryJoins;
            RetryMaxAttempts = retryMaxAttempts;
            RetryMaxAttemptsWan = retryMaxAttemptsWan;
            SerfLanBindAddr = serfLanBindAddr;
            SerfWanBindAddr = serfWanBindAddr;
            ServerMode = serverMode;
            ServerName = serverName;
            SessionTtlMin = sessionTtlMin;
            StartJoinWans = startJoinWans;
            StartJoins = startJoins;
            SyslogFacility = syslogFacility;
            TaggedAddresses = taggedAddresses;
            Telemetry = telemetry;
            TlsCaFile = tlsCaFile;
            TlsCertFile = tlsCertFile;
            TlsKeyFile = tlsKeyFile;
            TlsMinVersion = tlsMinVersion;
            TlsVerifyIncoming = tlsVerifyIncoming;
            TlsVerifyOutgoing = tlsVerifyOutgoing;
            TlsVerifyServerHostname = tlsVerifyServerHostname;
            TranslateWanAddrs = translateWanAddrs;
            UiDir = uiDir;
            UnixSockets = unixSockets;
            Version = version;
            VersionPrerelease = versionPrerelease;
            VersionRevision = versionRevision;
        }
    }
}
