// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class ConfigEntryServiceSplitterSplit
    {
        /// <summary>
        /// Specifies the namespace to use in the FQDN when resolving the service.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// Specifies the admin partition to use in the FQDN when resolving the service.
        /// </summary>
        public readonly string? Partition;
        /// <summary>
        /// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
        /// </summary>
        public readonly Outputs.ConfigEntryServiceSplitterSplitRequestHeaders? RequestHeaders;
        /// <summary>
        /// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
        /// </summary>
        public readonly Outputs.ConfigEntryServiceSplitterSplitResponseHeaders? ResponseHeaders;
        /// <summary>
        /// Specifies the name of the service to resolve.
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// Specifies a subset of the service to resolve. A service subset assigns a name to a specific subset of discoverable service instances within a datacenter, such as `version2` or `canary`. All services have an unnamed default subset that returns all healthy instances.
        /// </summary>
        public readonly string? ServiceSubset;
        /// <summary>
        /// Specifies the percentage of traffic sent to the set of service instances specified in the `service` field. Each weight must be a floating integer between `0` and `100`. The smallest representable value is `.01`. The sum of weights across all splits must add up to `100`.
        /// </summary>
        public readonly double Weight;

        [OutputConstructor]
        private ConfigEntryServiceSplitterSplit(
            string? @namespace,

            string? partition,

            Outputs.ConfigEntryServiceSplitterSplitRequestHeaders? requestHeaders,

            Outputs.ConfigEntryServiceSplitterSplitResponseHeaders? responseHeaders,

            string service,

            string? serviceSubset,

            double weight)
        {
            Namespace = @namespace;
            Partition = partition;
            RequestHeaders = requestHeaders;
            ResponseHeaders = responseHeaders;
            Service = service;
            ServiceSubset = serviceSubset;
            Weight = weight;
        }
    }
}
