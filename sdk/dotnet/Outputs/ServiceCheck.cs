// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class ServiceCheck
    {
        /// <summary>
        /// An ID, *unique per agent*. Will default to *name*
        /// if not set.
        /// </summary>
        public readonly string CheckId;
        /// <summary>
        /// The time after which
        /// the service is automatically deregistered when in the `critical` state.
        /// Defaults to `30s`.
        /// </summary>
        public readonly string? DeregisterCriticalServiceAfter;
        /// <summary>
        /// The headers to send for an HTTP check.
        /// The attributes of each header is given below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceCheckHeader> Headers;
        /// <summary>
        /// The HTTP endpoint to call for an HTTP check.
        /// </summary>
        public readonly string? Http;
        /// <summary>
        /// The interval to wait between each health-check
        /// invocation.
        /// </summary>
        public readonly string Interval;
        /// <summary>
        /// The method to use for HTTP health-checks. Defaults
        /// to `GET`.
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// The name of the health-check.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An opaque field meant to hold human readable text.
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// The initial health-check status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The TCP address and port to connect to for a TCP check.
        /// </summary>
        public readonly string? Tcp;
        /// <summary>
        /// Specifies a timeout for outgoing connections in
        /// the case of a HTTP or TCP check.
        /// </summary>
        public readonly string Timeout;
        /// <summary>
        /// Whether to deactivate certificate
        /// verification for HTTP health-checks. Defaults to `false`.
        /// </summary>
        public readonly bool? TlsSkipVerify;

        [OutputConstructor]
        private ServiceCheck(
            string checkId,

            string? deregisterCriticalServiceAfter,

            ImmutableArray<Outputs.ServiceCheckHeader> headers,

            string? http,

            string interval,

            string? method,

            string name,

            string? notes,

            string? status,

            string? tcp,

            string timeout,

            bool? tlsSkipVerify)
        {
            CheckId = checkId;
            DeregisterCriticalServiceAfter = deregisterCriticalServiceAfter;
            Headers = headers;
            Http = http;
            Interval = interval;
            Method = method;
            Name = name;
            Notes = notes;
            Status = status;
            Tcp = tcp;
            Timeout = timeout;
            TlsSkipVerify = tlsSkipVerify;
        }
    }
}
