// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class GetNetworkAreaMembersMemberResult
    {
        /// <summary>
        /// The IP address of the server.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The Consul version running on the node.
        /// </summary>
        public readonly string Build;
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// The node ID of the server.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The node name of the server, with its datacenter appended.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The server RPC port the node.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The protocol version being spoken by the node.
        /// </summary>
        public readonly int Protocol;
        /// <summary>
        /// Role is always `"server"` since only Consul servers can participate
        /// in network areas.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// An estimated network round trip time from the server answering the
        /// query to the given server, in nanoseconds. This is computed using network
        /// coordinates.
        /// </summary>
        public readonly int Rtt;
        /// <summary>
        /// The current health status of the node, as determined by the
        /// network area distributed failure detector. This will be `"alive"`, `"leaving"`,
        /// or `"failed"`. A `"failed"` status means that other servers are not able to
        /// probe this server over its server RPC interface.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetNetworkAreaMembersMemberResult(
            string address,

            string build,

            string datacenter,

            string id,

            string name,

            int port,

            int protocol,

            string role,

            int rtt,

            string status)
        {
            Address = address;
            Build = build;
            Datacenter = datacenter;
            Id = id;
            Name = name;
            Port = port;
            Protocol = protocol;
            Role = role;
            Rtt = rtt;
            Status = status;
        }
    }
}
