// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class ConfigEntryServiceIntentionsSource
    {
        /// <summary>
        /// Specifies the action to take when the source sends traffic to the destination service.
        /// </summary>
        public readonly string? Action;
        /// <summary>
        /// Specifies a description of the intention.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specifies the name of the source that the intention allows or denies traffic from.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Specifies the traffic source namespace that the intention allows or denies traffic from.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// Specifies the name of an admin partition that the intention allows or denies traffic from.
        /// </summary>
        public readonly string? Partition;
        /// <summary>
        /// Specifies the name of a peered Consul cluster that the intention allows or denies traffic from
        /// </summary>
        public readonly string? Peer;
        /// <summary>
        /// Specifies a list of permissions for L7 traffic sources. The list contains one or more actions and a set of match criteria for each action.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigEntryServiceIntentionsSourcePermission> Permissions;
        /// <summary>
        /// The Precedence field contains a read-only integer. Consul generates the value based on name configurations for the source and destination services.
        /// </summary>
        public readonly int? Precedence;
        /// <summary>
        /// Specifies the name of a sameness group that the intention allows or denies traffic from.
        /// </summary>
        public readonly string? SamenessGroup;
        /// <summary>
        /// Specifies the type of destination service that the configuration entry applies to.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ConfigEntryServiceIntentionsSource(
            string? action,

            string? description,

            string? name,

            string? @namespace,

            string? partition,

            string? peer,

            ImmutableArray<Outputs.ConfigEntryServiceIntentionsSourcePermission> permissions,

            int? precedence,

            string? samenessGroup,

            string? type)
        {
            Action = action;
            Description = description;
            Name = name;
            Namespace = @namespace;
            Partition = partition;
            Peer = peer;
            Permissions = permissions;
            Precedence = precedence;
            SamenessGroup = samenessGroup;
            Type = type;
        }
    }
}
