// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit
    {
        /// <summary>
        /// Specifies the maximum number of concurrent requests.
        /// </summary>
        public readonly int? MaxConcurrentRequests;
        /// <summary>
        /// Specifies the maximum number of connections a service instance can establish against the upstream.
        /// </summary>
        public readonly int? MaxConnections;
        /// <summary>
        /// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
        /// </summary>
        public readonly int? MaxPendingRequests;

        [OutputConstructor]
        private ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit(
            int? maxConcurrentRequests,

            int? maxConnections,

            int? maxPendingRequests)
        {
            MaxConcurrentRequests = maxConcurrentRequests;
            MaxConnections = maxConnections;
            MaxPendingRequests = maxPendingRequests;
        }
    }
}
