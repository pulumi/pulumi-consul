// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Outputs
{

    [OutputType]
    public sealed class ConfigEntryServiceResolverFailover
    {
        /// <summary>
        /// Specifies an ordered list of datacenters at the failover location to attempt connections to during a failover scenario. When Consul cannot establish a connection with the first datacenter in the list, it proceeds sequentially until establishing a connection with another datacenter.
        /// </summary>
        public readonly ImmutableArray<string> Datacenters;
        /// <summary>
        /// Specifies the namespace at the failover location where the failover services are deployed.
        /// </summary>
        public readonly string? Namespace;
        /// <summary>
        /// Specifies the sameness group at the failover location where the failover services are deployed.
        /// </summary>
        public readonly string? SamenessGroup;
        /// <summary>
        /// Specifies the name of the service to resolve at the failover location during a failover scenario.
        /// </summary>
        public readonly string? Service;
        /// <summary>
        /// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
        /// </summary>
        public readonly string? ServiceSubset;
        /// <summary>
        /// Name of subset.
        /// </summary>
        public readonly string SubsetName;
        /// <summary>
        /// Specifies a fixed list of failover targets to try during failover. This list can express complicated failover scenarios.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigEntryServiceResolverFailoverTarget> Targets;

        [OutputConstructor]
        private ConfigEntryServiceResolverFailover(
            ImmutableArray<string> datacenters,

            string? @namespace,

            string? samenessGroup,

            string? service,

            string? serviceSubset,

            string subsetName,

            ImmutableArray<Outputs.ConfigEntryServiceResolverFailoverTarget> targets)
        {
            Datacenters = datacenters;
            Namespace = @namespace;
            SamenessGroup = samenessGroup;
            Service = service;
            ServiceSubset = serviceSubset;
            SubsetName = subsetName;
            Targets = targets;
        }
    }
}
