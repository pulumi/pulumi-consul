// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetCatalogNodes
    {
        public static Task<GetCatalogNodesResult> InvokeAsync(GetCatalogNodesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogNodesResult>("consul:index/getCatalogNodes:getCatalogNodes", args ?? new GetCatalogNodesArgs(), options.WithVersion());
    }


    public sealed class GetCatalogNodesArgs : Pulumi.InvokeArgs
    {
        [Input("queryOptions")]
        private List<Inputs.GetCatalogNodesQueryOptionArgs>? _queryOptions;
        public List<Inputs.GetCatalogNodesQueryOptionArgs> QueryOptions
        {
            get => _queryOptions ?? (_queryOptions = new List<Inputs.GetCatalogNodesQueryOptionArgs>());
            set => _queryOptions = value;
        }

        public GetCatalogNodesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCatalogNodesResult
    {
        public readonly string Datacenter;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> NodeIds;
        public readonly ImmutableArray<string> NodeNames;
        public readonly ImmutableArray<Outputs.GetCatalogNodesNodeResult> Nodes;
        public readonly ImmutableArray<Outputs.GetCatalogNodesQueryOptionResult> QueryOptions;

        [OutputConstructor]
        private GetCatalogNodesResult(
            string datacenter,

            string id,

            ImmutableArray<string> nodeIds,

            ImmutableArray<string> nodeNames,

            ImmutableArray<Outputs.GetCatalogNodesNodeResult> nodes,

            ImmutableArray<Outputs.GetCatalogNodesQueryOptionResult> queryOptions)
        {
            Datacenter = datacenter;
            Id = id;
            NodeIds = nodeIds;
            NodeNames = nodeNames;
            Nodes = nodes;
            QueryOptions = queryOptions;
        }
    }
}
