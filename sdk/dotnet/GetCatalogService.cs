// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetCatalogService
    {
        public static Task<GetCatalogServiceResult> InvokeAsync(GetCatalogServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogServiceResult>("consul:index/getCatalogService:getCatalogService", args ?? new GetCatalogServiceArgs(), options.WithVersion());
    }


    public sealed class GetCatalogServiceArgs : Pulumi.InvokeArgs
    {
        [Input("datacenter")]
        public string? Datacenter { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("queryOptions")]
        private List<Inputs.GetCatalogServiceQueryOptionArgs>? _queryOptions;
        public List<Inputs.GetCatalogServiceQueryOptionArgs> QueryOptions
        {
            get => _queryOptions ?? (_queryOptions = new List<Inputs.GetCatalogServiceQueryOptionArgs>());
            set => _queryOptions = value;
        }

        [Input("tag")]
        public string? Tag { get; set; }

        public GetCatalogServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCatalogServiceResult
    {
        public readonly string? Datacenter;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetCatalogServiceQueryOptionResult> QueryOptions;
        public readonly ImmutableArray<Outputs.GetCatalogServiceServiceResult> Services;
        public readonly string? Tag;

        [OutputConstructor]
        private GetCatalogServiceResult(
            string? datacenter,

            string id,

            string name,

            ImmutableArray<Outputs.GetCatalogServiceQueryOptionResult> queryOptions,

            ImmutableArray<Outputs.GetCatalogServiceServiceResult> services,

            string? tag)
        {
            Datacenter = datacenter;
            Id = id;
            Name = name;
            QueryOptions = queryOptions;
            Services = services;
            Tag = tag;
        }
    }
}
