// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetCatalogServices
    {
        public static Task<GetCatalogServicesResult> InvokeAsync(GetCatalogServicesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogServicesResult>("consul:index/getCatalogServices:getCatalogServices", args ?? new GetCatalogServicesArgs(), options.WithVersion());
    }


    public sealed class GetCatalogServicesArgs : Pulumi.InvokeArgs
    {
        [Input("queryOptions")]
        private List<Inputs.GetCatalogServicesQueryOptionArgs>? _queryOptions;
        public List<Inputs.GetCatalogServicesQueryOptionArgs> QueryOptions
        {
            get => _queryOptions ?? (_queryOptions = new List<Inputs.GetCatalogServicesQueryOptionArgs>());
            set => _queryOptions = value;
        }

        public GetCatalogServicesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCatalogServicesResult
    {
        public readonly string Datacenter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly ImmutableArray<Outputs.GetCatalogServicesQueryOptionResult> QueryOptions;
        public readonly ImmutableDictionary<string, string> Services;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetCatalogServicesResult(
            string datacenter,

            string id,

            ImmutableArray<string> names,

            ImmutableArray<Outputs.GetCatalogServicesQueryOptionResult> queryOptions,

            ImmutableDictionary<string, string> services,

            ImmutableDictionary<string, string> tags)
        {
            Datacenter = datacenter;
            Id = id;
            Names = names;
            QueryOptions = queryOptions;
            Services = services;
            Tags = tags;
        }
    }
}
