// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetPeerings
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Consul = Pulumi.Consul;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var peers = Output.Create(Consul.GetPeerings.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPeeringsResult> InvokeAsync(GetPeeringsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPeeringsResult>("consul:index/getPeerings:getPeerings", args ?? new GetPeeringsArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Consul = Pulumi.Consul;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var peers = Output.Create(Consul.GetPeerings.InvokeAsync());
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPeeringsResult> Invoke(GetPeeringsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPeeringsResult>("consul:index/getPeerings:getPeerings", args ?? new GetPeeringsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeringsArgs : Pulumi.InvokeArgs
    {
        [Input("partition")]
        public string? Partition { get; set; }

        public GetPeeringsArgs()
        {
        }
    }

    public sealed class GetPeeringsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("partition")]
        public Input<string>? Partition { get; set; }

        public GetPeeringsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPeeringsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Partition;
        public readonly ImmutableArray<Outputs.GetPeeringsPeerResult> Peers;

        [OutputConstructor]
        private GetPeeringsResult(
            string id,

            string? partition,

            ImmutableArray<Outputs.GetPeeringsPeerResult> peers)
        {
            Id = id;
            Partition = partition;
            Peers = peers;
        }
    }
}
