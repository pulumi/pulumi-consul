// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class PreparedQueryFailoverGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("datacenters")]
        private InputList<string>? _datacenters;

        /// <summary>
        /// Remote datacenters to return results from.
        /// </summary>
        public InputList<string> Datacenters
        {
            get => _datacenters ?? (_datacenters = new InputList<string>());
            set => _datacenters = value;
        }

        /// <summary>
        /// Return results from this many datacenters, sorted in ascending order of estimated RTT.
        /// </summary>
        [Input("nearestN")]
        public Input<int>? NearestN { get; set; }

        [Input("targets")]
        private InputList<Inputs.PreparedQueryFailoverTargetGetArgs>? _targets;

        /// <summary>
        /// Specifies a sequential list of remote datacenters and cluster peers to failover to if there are no healthy service instances in the local datacenter. This option cannot be used with `nearest_n` or `datacenters`.
        /// </summary>
        public InputList<Inputs.PreparedQueryFailoverTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.PreparedQueryFailoverTargetGetArgs>());
            set => _targets = value;
        }

        public PreparedQueryFailoverGetArgs()
        {
        }
        public static new PreparedQueryFailoverGetArgs Empty => new PreparedQueryFailoverGetArgs();
    }
}
