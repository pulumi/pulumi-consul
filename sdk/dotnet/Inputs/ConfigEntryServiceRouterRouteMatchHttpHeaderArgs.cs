// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ConfigEntryServiceRouterRouteMatchHttpHeaderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies that a request matches when the header with the given name is this exact value.
        /// </summary>
        [Input("exact")]
        public Input<string>? Exact { get; set; }

        /// <summary>
        /// Specifies that the logic for the HTTP header match should be inverted.
        /// </summary>
        [Input("invert")]
        public Input<bool>? Invert { get; set; }

        /// <summary>
        /// Specifies the name of the HTTP header to match.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies that a request matches when the header with the given name has this prefix.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// Specifies that a request matches when the value in the `Name` argument is present anywhere in the HTTP header.
        /// </summary>
        [Input("present")]
        public Input<bool>? Present { get; set; }

        /// <summary>
        /// Specifies that a request matches when the header with the given name matches this regular expression.
        /// </summary>
        [Input("regex")]
        public Input<string>? Regex { get; set; }

        /// <summary>
        /// Specifies that a request matches when the header with the given name has this suffix.
        /// </summary>
        [Input("suffix")]
        public Input<string>? Suffix { get; set; }

        public ConfigEntryServiceRouterRouteMatchHttpHeaderArgs()
        {
        }
        public static new ConfigEntryServiceRouterRouteMatchHttpHeaderArgs Empty => new ConfigEntryServiceRouterRouteMatchHttpHeaderArgs();
    }
}
