// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class GetCatalogServiceQueryOptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// When `True`, the default, allow responses from
        /// Consul servers that are followers.
        /// </summary>
        [Input("allowStale")]
        public bool? AllowStale { get; set; }

        /// <summary>
        /// The Consul datacenter to query.  Defaults to the
        /// same value found in `QueryOptions` parameter specified below, or if that is
        /// empty, the `Datacenter` value found in the Consul agent that this provider is
        /// configured to talk to.
        /// </summary>
        [Input("datacenter")]
        public string? Datacenter { get; set; }

        /// <summary>
        /// The namespace to lookup the service.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("near")]
        public string? Near { get; set; }

        [Input("nodeMeta")]
        private Dictionary<string, string>? _nodeMeta;
        public Dictionary<string, string> NodeMeta
        {
            get => _nodeMeta ?? (_nodeMeta = new Dictionary<string, string>());
            set => _nodeMeta = value;
        }

        [Input("partition")]
        public string? Partition { get; set; }

        /// <summary>
        /// When `True` force the client to perform a
        /// read on at least quorum servers and verify the result is the same.  Defaults
        /// to `False`.
        /// </summary>
        [Input("requireConsistent")]
        public bool? RequireConsistent { get; set; }

        [Input("token")]
        private string? _token;

        /// <summary>
        /// Specify the Consul ACL token to use when performing the
        /// request.  This defaults to the same API token configured by the `Consul`
        /// provider but may be overridden if necessary.
        /// </summary>
        public string? Token
        {
            get => _token;
            set => _token = value;
        }

        /// <summary>
        /// Index number used to enable blocking queries.
        /// </summary>
        [Input("waitIndex")]
        public int? WaitIndex { get; set; }

        /// <summary>
        /// Max time the client should wait for a blocking query
        /// to return.
        /// </summary>
        [Input("waitTime")]
        public string? WaitTime { get; set; }

        public GetCatalogServiceQueryOptionArgs()
        {
        }
        public static new GetCatalogServiceQueryOptionArgs Empty => new GetCatalogServiceQueryOptionArgs();
    }
}
