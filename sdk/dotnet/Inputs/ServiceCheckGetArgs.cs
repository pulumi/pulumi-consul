// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ServiceCheckGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An ID, *unique per agent*.
        /// </summary>
        [Input("checkId", required: true)]
        public Input<string> CheckId { get; set; } = null!;

        /// <summary>
        /// The time after which the service is automatically deregistered when in the `critical` state. Defaults to `30s`.
        /// </summary>
        [Input("deregisterCriticalServiceAfter")]
        public Input<string>? DeregisterCriticalServiceAfter { get; set; }

        [Input("headers")]
        private InputList<Inputs.ServiceCheckHeaderGetArgs>? _headers;

        /// <summary>
        /// The headers to send for an HTTP check. The attributes of each header is given below.
        /// </summary>
        public InputList<Inputs.ServiceCheckHeaderGetArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.ServiceCheckHeaderGetArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// The HTTP endpoint to call for an HTTP check.
        /// </summary>
        [Input("http")]
        public Input<string>? Http { get; set; }

        /// <summary>
        /// The interval to wait between each health-check invocation.
        /// </summary>
        [Input("interval", required: true)]
        public Input<string> Interval { get; set; } = null!;

        /// <summary>
        /// The method to use for HTTP health-checks. Defaults to `GET`.
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// The name of the health-check.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// An opaque field meant to hold human readable text.
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        /// <summary>
        /// The initial health-check status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The TCP address and port to connect to for a TCP check.
        /// </summary>
        [Input("tcp")]
        public Input<string>? Tcp { get; set; }

        /// <summary>
        /// Specifies a timeout for outgoing connections in the case of a HTTP or TCP check.
        /// </summary>
        [Input("timeout", required: true)]
        public Input<string> Timeout { get; set; } = null!;

        /// <summary>
        /// Whether to deactivate certificate verification for HTTP health-checks. Defaults to `false`.
        /// </summary>
        [Input("tlsSkipVerify")]
        public Input<bool>? TlsSkipVerify { get; set; }

        public ServiceCheckGetArgs()
        {
        }
        public static new ServiceCheckGetArgs Empty => new ServiceCheckGetArgs();
    }
}
