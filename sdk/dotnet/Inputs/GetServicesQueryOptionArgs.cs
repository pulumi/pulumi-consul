// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class GetServicesQueryOptionInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When `true`, the default, allow responses from
        /// Consul servers that are followers.
        /// </summary>
        [Input("allowStale")]
        public Input<bool>? AllowStale { get; set; }

        /// <summary>
        /// The Consul datacenter to query.  Defaults to the
        /// same value found in `query_options` parameter specified below, or if that is
        /// empty, the `datacenter` value found in the Consul agent that this provider is
        /// configured to talk to.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// The namespace to lookup the services.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("near")]
        public Input<string>? Near { get; set; }

        [Input("nodeMeta")]
        private InputMap<string>? _nodeMeta;
        public InputMap<string> NodeMeta
        {
            get => _nodeMeta ?? (_nodeMeta = new InputMap<string>());
            set => _nodeMeta = value;
        }

        [Input("partition")]
        public Input<string>? Partition { get; set; }

        /// <summary>
        /// When `true` force the client to perform a
        /// read on at least quorum servers and verify the result is the same.  Defaults
        /// to `false`.
        /// </summary>
        [Input("requireConsistent")]
        public Input<bool>? RequireConsistent { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Specify the Consul ACL token to use when performing the
        /// request.  This defaults to the same API token configured by the `consul`
        /// provider but may be overridden if necessary.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Index number used to enable blocking queries.
        /// </summary>
        [Input("waitIndex")]
        public Input<int>? WaitIndex { get; set; }

        /// <summary>
        /// Max time the client should wait for a blocking query
        /// to return.
        /// </summary>
        [Input("waitTime")]
        public Input<string>? WaitTime { get; set; }

        public GetServicesQueryOptionInputArgs()
        {
        }
        public static new GetServicesQueryOptionInputArgs Empty => new GetServicesQueryOptionInputArgs();
    }
}
