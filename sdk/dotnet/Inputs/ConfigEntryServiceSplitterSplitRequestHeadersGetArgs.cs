// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ConfigEntryServiceSplitterSplitRequestHeadersGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("add")]
        private InputMap<string>? _add;

        /// <summary>
        /// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
        /// </summary>
        public InputMap<string> Add
        {
            get => _add ?? (_add = new InputMap<string>());
            set => _add = value;
        }

        [Input("removes")]
        private InputList<string>? _removes;

        /// <summary>
        /// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
        /// </summary>
        public InputList<string> Removes
        {
            get => _removes ?? (_removes = new InputList<string>());
            set => _removes = value;
        }

        [Input("set")]
        private InputMap<string>? _set;

        /// <summary>
        /// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
        /// </summary>
        public InputMap<string> Set
        {
            get => _set ?? (_set = new InputMap<string>());
            set => _set = value;
        }

        public ConfigEntryServiceSplitterSplitRequestHeadersGetArgs()
        {
        }
        public static new ConfigEntryServiceSplitterSplitRequestHeadersGetArgs Empty => new ConfigEntryServiceSplitterSplitRequestHeadersGetArgs();
    }
}
