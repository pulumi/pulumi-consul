// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ConfigEntryServiceResolverFailoverTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the WAN federated datacenter to use for the failover target. If empty, the current datacenter is used.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// Specifies the namespace to use for the failover target. If empty, the default namespace is used.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Specifies the admin partition within the same datacenter to use for the failover target. If empty, the default partition is used.
        /// </summary>
        [Input("partition")]
        public Input<string>? Partition { get; set; }

        /// <summary>
        /// Specifies the destination cluster peer to resolve the target service name from.
        /// </summary>
        [Input("peer")]
        public Input<string>? Peer { get; set; }

        /// <summary>
        /// Specifies the service name to use for the failover target. If empty, the current service name is used.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Specifies the named subset to use for the failover target. If empty, the default subset for the requested service name is used.
        /// </summary>
        [Input("serviceSubset")]
        public Input<string>? ServiceSubset { get; set; }

        public ConfigEntryServiceResolverFailoverTargetArgs()
        {
        }
        public static new ConfigEntryServiceResolverFailoverTargetArgs Empty => new ConfigEntryServiceResolverFailoverTargetArgs();
    }
}
