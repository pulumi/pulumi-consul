// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ConfigEntryServiceSplitterSplitArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the namespace to use in the FQDN when resolving the service.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Specifies the admin partition to use in the FQDN when resolving the service.
        /// </summary>
        [Input("partition")]
        public Input<string>? Partition { get; set; }

        /// <summary>
        /// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service split. You cannot configure request headers if the listener protocol is set to `Tcp`.
        /// </summary>
        [Input("requestHeaders")]
        public Input<Inputs.ConfigEntryServiceSplitterSplitRequestHeadersArgs>? RequestHeaders { get; set; }

        /// <summary>
        /// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service split. You cannot configure request headers if the listener protocol is set to `Tcp`.
        /// </summary>
        [Input("responseHeaders")]
        public Input<Inputs.ConfigEntryServiceSplitterSplitResponseHeadersArgs>? ResponseHeaders { get; set; }

        /// <summary>
        /// Specifies the name of the service to resolve.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// Specifies a subset of the service to resolve. A service subset assigns a name to a specific subset of discoverable service instances within a datacenter, such as `Version2` or `Canary`. All services have an unnamed default subset that returns all healthy instances.
        /// </summary>
        [Input("serviceSubset")]
        public Input<string>? ServiceSubset { get; set; }

        /// <summary>
        /// Specifies the percentage of traffic sent to the set of service instances specified in the `Service` field. Each weight must be a floating integer between `0` and `100`. The smallest representable value is `.01`. The sum of weights across all splits must add up to `100`.
        /// </summary>
        [Input("weight", required: true)]
        public Input<double> Weight { get; set; } = null!;

        public ConfigEntryServiceSplitterSplitArgs()
        {
        }
        public static new ConfigEntryServiceSplitterSplitArgs Empty => new ConfigEntryServiceSplitterSplitArgs();
    }
}
