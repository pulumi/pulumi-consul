// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul.Inputs
{

    public sealed class ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the maximum number of concurrent requests.
        /// </summary>
        [Input("maxConcurrentRequests")]
        public Input<int>? MaxConcurrentRequests { get; set; }

        /// <summary>
        /// Specifies the maximum number of connections a service instance can establish against the upstream.
        /// </summary>
        [Input("maxConnections")]
        public Input<int>? MaxConnections { get; set; }

        /// <summary>
        /// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
        /// </summary>
        [Input("maxPendingRequests")]
        public Input<int>? MaxPendingRequests { get; set; }

        public ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs()
        {
        }
        public static new ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs Empty => new ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs();
    }
}
