// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetNetworkAreaMembers
    {
        /// <summary>
        /// &gt; **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
        /// 
        /// The `consul.getNetworkAreaMembers` data source provides a list of the Consul
        /// servers present in a specific network area.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Consul = Pulumi.Consul;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dc2NetworkArea = new Consul.NetworkArea("dc2", new()
        ///     {
        ///         PeerDatacenter = "dc2",
        ///         RetryJoins = new[]
        ///         {
        ///             "1.2.3.4",
        ///         },
        ///         UseTls = true,
        ///     });
        /// 
        ///     var dc2 = Consul.GetNetworkAreaMembers.Invoke(new()
        ///     {
        ///         Uuid = dc2NetworkArea.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["members"] = dc2.Apply(getNetworkAreaMembersResult =&gt; getNetworkAreaMembersResult.Members),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetNetworkAreaMembersResult> InvokeAsync(GetNetworkAreaMembersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkAreaMembersResult>("consul:index/getNetworkAreaMembers:getNetworkAreaMembers", args ?? new GetNetworkAreaMembersArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
        /// 
        /// The `consul.getNetworkAreaMembers` data source provides a list of the Consul
        /// servers present in a specific network area.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Consul = Pulumi.Consul;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dc2NetworkArea = new Consul.NetworkArea("dc2", new()
        ///     {
        ///         PeerDatacenter = "dc2",
        ///         RetryJoins = new[]
        ///         {
        ///             "1.2.3.4",
        ///         },
        ///         UseTls = true,
        ///     });
        /// 
        ///     var dc2 = Consul.GetNetworkAreaMembers.Invoke(new()
        ///     {
        ///         Uuid = dc2NetworkArea.Id,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["members"] = dc2.Apply(getNetworkAreaMembersResult =&gt; getNetworkAreaMembersResult.Members),
        ///     };
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetNetworkAreaMembersResult> Invoke(GetNetworkAreaMembersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkAreaMembersResult>("consul:index/getNetworkAreaMembers:getNetworkAreaMembers", args ?? new GetNetworkAreaMembersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkAreaMembersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Input("datacenter")]
        public string? Datacenter { get; set; }

        [Input("token")]
        private string? _token;

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Obsolete(@"The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration")]
        public string? Token
        {
            get => _token;
            set => _token = value;
        }

        /// <summary>
        /// The UUID of the area to list.
        /// </summary>
        [Input("uuid", required: true)]
        public string Uuid { get; set; } = null!;

        public GetNetworkAreaMembersArgs()
        {
        }
        public static new GetNetworkAreaMembersArgs Empty => new GetNetworkAreaMembersArgs();
    }

    public sealed class GetNetworkAreaMembersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Obsolete(@"The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration")]
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The UUID of the area to list.
        /// </summary>
        [Input("uuid", required: true)]
        public Input<string> Uuid { get; set; } = null!;

        public GetNetworkAreaMembersInvokeArgs()
        {
        }
        public static new GetNetworkAreaMembersInvokeArgs Empty => new GetNetworkAreaMembersInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkAreaMembersResult
    {
        /// <summary>
        /// The node's Consul datacenter.
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of Consul servers in this network area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkAreaMembersMemberResult> Members;
        public readonly string? Token;
        /// <summary>
        /// The UUID of the Network Area being queried.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetNetworkAreaMembersResult(
            string datacenter,

            string id,

            ImmutableArray<Outputs.GetNetworkAreaMembersMemberResult> members,

            string? token,

            string uuid)
        {
            Datacenter = datacenter;
            Id = id;
            Members = members;
            Token = token;
            Uuid = uuid;
        }
    }
}
