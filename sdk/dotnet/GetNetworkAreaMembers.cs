// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    public static class GetNetworkAreaMembers
    {
        /// <summary>
        /// &gt; **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
        /// 
        /// The `consul..getNetworkAreaMembers` data source provides a list of the Consul
        /// servers present in a specific network area.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Consul = Pulumi.Consul;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var dc2NetworkArea = new Consul.NetworkArea("dc2NetworkArea", new Consul.NetworkAreaArgs
        ///         {
        ///             PeerDatacenter = "dc2",
        ///             RetryJoins = 
        ///             {
        ///                 "1.2.3.4",
        ///             },
        ///             UseTls = true,
        ///         });
        ///         var dc2NetworkAreaMembers = dc2NetworkArea.Id.Apply(id =&gt; Consul.GetNetworkAreaMembers.InvokeAsync(new Consul.GetNetworkAreaMembersArgs
        ///         {
        ///             Uuid = id,
        ///         }));
        ///         this.Members = dc2NetworkAreaMembers.Apply(dc2NetworkAreaMembers =&gt; dc2NetworkAreaMembers.Members);
        ///     }
        /// 
        ///     [Output("members")]
        ///     public Output&lt;string&gt; Members { get; set; }
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNetworkAreaMembersResult> InvokeAsync(GetNetworkAreaMembersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNetworkAreaMembersResult>("consul:index/getNetworkAreaMembers:getNetworkAreaMembers", args ?? new GetNetworkAreaMembersArgs(), options.WithVersion());
    }


    public sealed class GetNetworkAreaMembersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The datacenter to use. This overrides the
        /// agent's default datacenter and the datacenter in the provider setup.
        /// </summary>
        [Input("datacenter")]
        public string? Datacenter { get; set; }

        /// <summary>
        /// The ACL token to use. This overrides the
        /// token that the agent provides by default.
        /// </summary>
        [Input("token")]
        public string? Token { get; set; }

        /// <summary>
        /// The UUID of the area to list.
        /// </summary>
        [Input("uuid", required: true)]
        public string Uuid { get; set; } = null!;

        public GetNetworkAreaMembersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNetworkAreaMembersResult
    {
        /// <summary>
        /// The node's Consul datacenter.
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of Consul servers in this network area
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkAreaMembersMemberResult> Members;
        public readonly string? Token;
        /// <summary>
        /// The UUID of the Network Area being queried.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetNetworkAreaMembersResult(
            string datacenter,

            string id,

            ImmutableArray<Outputs.GetNetworkAreaMembersMemberResult> members,

            string? token,

            string uuid)
        {
            Datacenter = datacenter;
            Id = id;
            Members = members;
            Token = token;
            Uuid = uuid;
        }
    }
}
