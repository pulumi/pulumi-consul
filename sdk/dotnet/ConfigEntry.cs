// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Consul
{
    /// <summary>
    /// The [Configuration Entry](https://www.consul.io/docs/agent/config_entries.html)
    /// resource can be used to provide cluster-wide defaults for various aspects of
    /// Consul.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/config_entry.html.markdown.
    /// </summary>
    public partial class ConfigEntry : Pulumi.CustomResource
    {
        /// <summary>
        /// An arbitrary map of configuration values.
        /// </summary>
        [Output("configJson")]
        public Output<string?> ConfigJson { get; private set; } = null!;

        /// <summary>
        /// The kind of configuration entry to register.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The name of the configuration entry being registred.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigEntry(string name, ConfigEntryArgs args, CustomResourceOptions? options = null)
            : base("consul:index/configEntry:ConfigEntry", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ConfigEntry(string name, Input<string> id, ConfigEntryState? state = null, CustomResourceOptions? options = null)
            : base("consul:index/configEntry:ConfigEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigEntry Get(string name, Input<string> id, ConfigEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigEntry(name, id, state, options);
        }
    }

    public sealed class ConfigEntryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An arbitrary map of configuration values.
        /// </summary>
        [Input("configJson")]
        public Input<string>? ConfigJson { get; set; }

        /// <summary>
        /// The kind of configuration entry to register.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The name of the configuration entry being registred.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConfigEntryArgs()
        {
        }
    }

    public sealed class ConfigEntryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An arbitrary map of configuration values.
        /// </summary>
        [Input("configJson")]
        public Input<string>? ConfigJson { get; set; }

        /// <summary>
        /// The kind of configuration entry to register.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The name of the configuration entry being registred.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConfigEntryState()
        {
        }
    }
}
