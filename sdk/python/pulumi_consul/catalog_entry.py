# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class CatalogEntry(pulumi.CustomResource):
    address: pulumi.Output[str]
    """
    The address of the node being added to,
    or referenced in the catalog.
    """
    datacenter: pulumi.Output[str]
    """
    The datacenter to use. This overrides the
    agent's default datacenter and the datacenter in the provider setup.
    """
    node: pulumi.Output[str]
    """
    The name of the node being added to, or
    referenced in the catalog.
    """
    services: pulumi.Output[list]
    """
    A service to optionally associated with
    the node. Supported values are documented below.
    
      * `address` (`str`) - The address of the node being added to,
        or referenced in the catalog.
      * `id` (`str`)
      * `name` (`str`)
      * `port` (`float`)
      * `tags` (`list`)
    """
    token: pulumi.Output[str]
    """
    ACL token.
    """
    def __init__(__self__, resource_name, opts=None, address=None, datacenter=None, node=None, services=None, token=None, __props__=None, __name__=None, __opts__=None):
        """
        !> The `.CatalogEntry` resource has been deprecated in version 2.0.0 of the provider
        and will be removed in a future release. Please read the [upgrade guide](https://www.terraform.io/docs/providers/consul/upgrading.html#deprecation-of-consul_catalog_entry)
        for more information.
        
        Registers a node or service with the [Consul Catalog](https://www.consul.io/docs/agent/http/catalog.html#catalog_register).
        Currently, defining health checks is not supported.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] address: The address of the node being added to,
               or referenced in the catalog.
        :param pulumi.Input[str] datacenter: The datacenter to use. This overrides the
               agent's default datacenter and the datacenter in the provider setup.
        :param pulumi.Input[str] node: The name of the node being added to, or
               referenced in the catalog.
        :param pulumi.Input[list] services: A service to optionally associated with
               the node. Supported values are documented below.
        :param pulumi.Input[str] token: ACL token.
        
        The **services** object supports the following:
        
          * `address` (`pulumi.Input[str]`) - The address of the node being added to,
            or referenced in the catalog.
          * `id` (`pulumi.Input[str]`)
          * `name` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `tags` (`pulumi.Input[list]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/catalog_entry.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if address is None:
                raise TypeError("Missing required property 'address'")
            __props__['address'] = address
            __props__['datacenter'] = datacenter
            if node is None:
                raise TypeError("Missing required property 'node'")
            __props__['node'] = node
            __props__['services'] = services
            __props__['token'] = token
        super(CatalogEntry, __self__).__init__(
            'consul:index/catalogEntry:CatalogEntry',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, address=None, datacenter=None, node=None, services=None, token=None):
        """
        Get an existing CatalogEntry resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] address: The address of the node being added to,
               or referenced in the catalog.
        :param pulumi.Input[str] datacenter: The datacenter to use. This overrides the
               agent's default datacenter and the datacenter in the provider setup.
        :param pulumi.Input[str] node: The name of the node being added to, or
               referenced in the catalog.
        :param pulumi.Input[list] services: A service to optionally associated with
               the node. Supported values are documented below.
        :param pulumi.Input[str] token: ACL token.
        
        The **services** object supports the following:
        
          * `address` (`pulumi.Input[str]`) - The address of the node being added to,
            or referenced in the catalog.
          * `id` (`pulumi.Input[str]`)
          * `name` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `tags` (`pulumi.Input[list]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/catalog_entry.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["address"] = address
        __props__["datacenter"] = datacenter
        __props__["node"] = node
        __props__["services"] = services
        __props__["token"] = token
        return CatalogEntry(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

