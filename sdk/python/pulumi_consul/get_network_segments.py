# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetNetworkSegmentsResult:
    """
    A collection of values returned by getNetworkSegments.
    """
    def __init__(__self__, datacenter=None, id=None, segments=None, token=None):
        if datacenter and not isinstance(datacenter, str):
            raise TypeError("Expected argument 'datacenter' to be a str")
        __self__.datacenter = datacenter
        """
        The datacenter the segments are being read from.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if segments and not isinstance(segments, list):
            raise TypeError("Expected argument 'segments' to be a list")
        __self__.segments = segments
        """
        The list of network segments.
        """
        if token and not isinstance(token, str):
            raise TypeError("Expected argument 'token' to be a str")
        __self__.token = token
class AwaitableGetNetworkSegmentsResult(GetNetworkSegmentsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkSegmentsResult(
            datacenter=self.datacenter,
            id=self.id,
            segments=self.segments,
            token=self.token)

def get_network_segments(datacenter=None,token=None,opts=None):
    """
    > **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).

    The `consul_network_segment` data source can be used to retrieve the network
    segments defined in the configuration.

    ## Example Usage



    ```python
    import pulumi
    import pulumi_consul as consul

    segments_network_segments = consul.get_network_segments()
    pulumi.export("segments", segments_network_segments.segments)
    ```



    :param str datacenter: The datacenter to use. This overrides the
           agent's default datacenter and the datacenter in the provider setup.
    :param str token: The ACL token to use. This overrides the
           token that the agent provides by default.
    """
    __args__ = dict()


    __args__['datacenter'] = datacenter
    __args__['token'] = token
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('consul:index/getNetworkSegments:getNetworkSegments', __args__, opts=opts).value

    return AwaitableGetNetworkSegmentsResult(
        datacenter=__ret__.get('datacenter'),
        id=__ret__.get('id'),
        segments=__ret__.get('segments'),
        token=__ret__.get('token'))
