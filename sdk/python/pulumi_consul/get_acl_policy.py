# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetAclPolicyResult:
    """
    A collection of values returned by getAclPolicy.
    """
    def __init__(__self__, datacenters=None, description=None, id=None, name=None, namespace=None, rules=None):
        if datacenters and not isinstance(datacenters, list):
            raise TypeError("Expected argument 'datacenters' to be a list")
        __self__.datacenters = datacenters
        """
        The datacenters associated with the ACL Policy.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        The description of the ACL Policy.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        if namespace and not isinstance(namespace, str):
            raise TypeError("Expected argument 'namespace' to be a str")
        __self__.namespace = namespace
        if rules and not isinstance(rules, str):
            raise TypeError("Expected argument 'rules' to be a str")
        __self__.rules = rules
        """
        The rules associated with the ACL Policy.
        """
class AwaitableGetAclPolicyResult(GetAclPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAclPolicyResult(
            datacenters=self.datacenters,
            description=self.description,
            id=self.id,
            name=self.name,
            namespace=self.namespace,
            rules=self.rules)

def get_acl_policy(datacenters=None,description=None,name=None,namespace=None,rules=None,opts=None):
    """
    The `.AclPolicy` data source returns the information related to a
    [Consul ACL Policy](https://www.consul.io/docs/acl/acl-system.html#acl-policies).


    ## Example Usage



    ```python
    import pulumi
    import pulumi_consul as consul

    agent = consul.get_acl_policy(name="agent")
    pulumi.export("consulAclPolicy", agent.rules)
    ```



    :param list datacenters: The datacenters associated with the ACL Policy.
    :param str description: The description of the ACL Policy.
    :param str name: The name of the ACL Policy.
    :param str namespace: The namespace to lookup the policy.
    :param str rules: The rules associated with the ACL Policy.
    """
    __args__ = dict()


    __args__['datacenters'] = datacenters
    __args__['description'] = description
    __args__['name'] = name
    __args__['namespace'] = namespace
    __args__['rules'] = rules
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('consul:index/getAclPolicy:getAclPolicy', __args__, opts=opts).value

    return AwaitableGetAclPolicyResult(
        datacenters=__ret__.get('datacenters'),
        description=__ret__.get('description'),
        id=__ret__.get('id'),
        name=__ret__.get('name'),
        namespace=__ret__.get('namespace'),
        rules=__ret__.get('rules'))
