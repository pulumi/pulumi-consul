# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetAgentConfigResult:
    """
    A collection of values returned by getAgentConfig.
    """
    def __init__(__self__, datacenter=None, id=None, node_id=None, node_name=None, revision=None, server=None, version=None):
        if datacenter and not isinstance(datacenter, str):
            raise TypeError("Expected argument 'datacenter' to be a str")
        __self__.datacenter = datacenter
        """
        The datacenter the agent is running in
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if node_id and not isinstance(node_id, str):
            raise TypeError("Expected argument 'node_id' to be a str")
        __self__.node_id = node_id
        """
        The ID of the node the agent is running on
        """
        if node_name and not isinstance(node_name, str):
            raise TypeError("Expected argument 'node_name' to be a str")
        __self__.node_name = node_name
        """
        The name of the node the agent is running on
        """
        if revision and not isinstance(revision, str):
            raise TypeError("Expected argument 'revision' to be a str")
        __self__.revision = revision
        """
        The first 9 characters of the VCS revision of the build of Consul that is running
        """
        if server and not isinstance(server, bool):
            raise TypeError("Expected argument 'server' to be a bool")
        __self__.server = server
        """
        Boolean if the agent is a server or not
        """
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        __self__.version = version
        """
        The version of the build of Consul that is running
        """
class AwaitableGetAgentConfigResult(GetAgentConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAgentConfigResult(
            datacenter=self.datacenter,
            id=self.id,
            node_id=self.node_id,
            node_name=self.node_name,
            revision=self.revision,
            server=self.server,
            version=self.version)

def get_agent_config(opts=None):
    """
    > **Note:** The `.getAgentConfig` resource differs from [`.getAgentSelf`](https://www.terraform.io/docs/providers/consul/d/agent_self.html),
    providing less information but utilizing stable APIs. `.getAgentSelf` will be
    deprecated in a future release.

    The `.getAgentConfig` data source returns
    [configuration data](https://www.consul.io/api/agent.html#read-configuration)
    from the agent specified in the `provider`.

    ## Example Usage



    ```python
    import pulumi
    import pulumi_consul as consul

    remote_agent = consul.get_agent_config()
    pulumi.export("consulVersion", remote_agent.version)
    ```
    """
    __args__ = dict()


    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('consul:index/getAgentConfig:getAgentConfig', __args__, opts=opts).value

    return AwaitableGetAgentConfigResult(
        datacenter=__ret__.get('datacenter'),
        id=__ret__.get('id'),
        node_id=__ret__.get('nodeId'),
        node_name=__ret__.get('nodeName'),
        revision=__ret__.get('revision'),
        server=__ret__.get('server'),
        version=__ret__.get('version'))
