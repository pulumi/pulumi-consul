// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceHealthResultNode {
    /**
     * @return The address of this instance.
     * 
     */
    private String address;
    /**
     * @return The Consul datacenter to query.
     * 
     */
    private String datacenter;
    /**
     * @return The ID of this health-check.
     * 
     */
    private String id;
    /**
     * @return Service metadata tag information, if any.
     * 
     */
    private Map<String,String> meta;
    /**
     * @return The service name to select.
     * 
     */
    private String name;
    private Map<String,String> taggedAddresses;

    private GetServiceHealthResultNode() {}
    /**
     * @return The address of this instance.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return The Consul datacenter to query.
     * 
     */
    public String datacenter() {
        return this.datacenter;
    }
    /**
     * @return The ID of this health-check.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Service metadata tag information, if any.
     * 
     */
    public Map<String,String> meta() {
        return this.meta;
    }
    /**
     * @return The service name to select.
     * 
     */
    public String name() {
        return this.name;
    }
    public Map<String,String> taggedAddresses() {
        return this.taggedAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHealthResultNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String datacenter;
        private String id;
        private Map<String,String> meta;
        private String name;
        private Map<String,String> taggedAddresses;
        public Builder() {}
        public Builder(GetServiceHealthResultNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.datacenter = defaults.datacenter;
    	      this.id = defaults.id;
    	      this.meta = defaults.meta;
    	      this.name = defaults.name;
    	      this.taggedAddresses = defaults.taggedAddresses;
        }

        @CustomType.Setter
        public Builder address(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        @CustomType.Setter
        public Builder datacenter(String datacenter) {
            this.datacenter = Objects.requireNonNull(datacenter);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder meta(Map<String,String> meta) {
            this.meta = Objects.requireNonNull(meta);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder taggedAddresses(Map<String,String> taggedAddresses) {
            this.taggedAddresses = Objects.requireNonNull(taggedAddresses);
            return this;
        }
        public GetServiceHealthResultNode build() {
            final var o = new GetServiceHealthResultNode();
            o.address = address;
            o.datacenter = datacenter;
            o.id = id;
            o.meta = meta;
            o.name = name;
            o.taggedAddresses = taggedAddresses;
            return o;
        }
    }
}
