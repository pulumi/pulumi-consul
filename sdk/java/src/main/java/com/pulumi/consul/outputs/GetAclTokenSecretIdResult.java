// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAclTokenSecretIdResult {
    private String accessorId;
    private String encryptedSecretId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String namespace;
    private @Nullable String partition;
    private @Nullable String pgpKey;
    /**
     * @return The secret ID of the ACL token if `pgpKey` has not been set.
     * 
     */
    private String secretId;

    private GetAclTokenSecretIdResult() {}
    public String accessorId() {
        return this.accessorId;
    }
    public String encryptedSecretId() {
        return this.encryptedSecretId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }
    public Optional<String> pgpKey() {
        return Optional.ofNullable(this.pgpKey);
    }
    /**
     * @return The secret ID of the ACL token if `pgpKey` has not been set.
     * 
     */
    public String secretId() {
        return this.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAclTokenSecretIdResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessorId;
        private String encryptedSecretId;
        private String id;
        private @Nullable String namespace;
        private @Nullable String partition;
        private @Nullable String pgpKey;
        private String secretId;
        public Builder() {}
        public Builder(GetAclTokenSecretIdResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessorId = defaults.accessorId;
    	      this.encryptedSecretId = defaults.encryptedSecretId;
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
    	      this.partition = defaults.partition;
    	      this.pgpKey = defaults.pgpKey;
    	      this.secretId = defaults.secretId;
        }

        @CustomType.Setter
        public Builder accessorId(String accessorId) {
            if (accessorId == null) {
              throw new MissingRequiredPropertyException("GetAclTokenSecretIdResult", "accessorId");
            }
            this.accessorId = accessorId;
            return this;
        }
        @CustomType.Setter
        public Builder encryptedSecretId(String encryptedSecretId) {
            if (encryptedSecretId == null) {
              throw new MissingRequiredPropertyException("GetAclTokenSecretIdResult", "encryptedSecretId");
            }
            this.encryptedSecretId = encryptedSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAclTokenSecretIdResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder partition(@Nullable String partition) {

            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder pgpKey(@Nullable String pgpKey) {

            this.pgpKey = pgpKey;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(String secretId) {
            if (secretId == null) {
              throw new MissingRequiredPropertyException("GetAclTokenSecretIdResult", "secretId");
            }
            this.secretId = secretId;
            return this;
        }
        public GetAclTokenSecretIdResult build() {
            final var _resultValue = new GetAclTokenSecretIdResult();
            _resultValue.accessorId = accessorId;
            _resultValue.encryptedSecretId = encryptedSecretId;
            _resultValue.id = id;
            _resultValue.namespace = namespace;
            _resultValue.partition = partition;
            _resultValue.pgpKey = pgpKey;
            _resultValue.secretId = secretId;
            return _resultValue;
        }
    }
}
