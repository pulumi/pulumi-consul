// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit {
    /**
     * @return Specifies the maximum number of concurrent requests.
     * 
     */
    private @Nullable Integer maxConcurrentRequests;
    /**
     * @return Specifies the maximum number of connections a service instance can establish against the upstream.
     * 
     */
    private @Nullable Integer maxConnections;
    /**
     * @return Specifies the maximum number of requests that are queued while waiting for a connection to establish.
     * 
     */
    private @Nullable Integer maxPendingRequests;

    private ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit() {}
    /**
     * @return Specifies the maximum number of concurrent requests.
     * 
     */
    public Optional<Integer> maxConcurrentRequests() {
        return Optional.ofNullable(this.maxConcurrentRequests);
    }
    /**
     * @return Specifies the maximum number of connections a service instance can establish against the upstream.
     * 
     */
    public Optional<Integer> maxConnections() {
        return Optional.ofNullable(this.maxConnections);
    }
    /**
     * @return Specifies the maximum number of requests that are queued while waiting for a connection to establish.
     * 
     */
    public Optional<Integer> maxPendingRequests() {
        return Optional.ofNullable(this.maxPendingRequests);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxConcurrentRequests;
        private @Nullable Integer maxConnections;
        private @Nullable Integer maxPendingRequests;
        public Builder() {}
        public Builder(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConcurrentRequests = defaults.maxConcurrentRequests;
    	      this.maxConnections = defaults.maxConnections;
    	      this.maxPendingRequests = defaults.maxPendingRequests;
        }

        @CustomType.Setter
        public Builder maxConcurrentRequests(@Nullable Integer maxConcurrentRequests) {
            this.maxConcurrentRequests = maxConcurrentRequests;
            return this;
        }
        @CustomType.Setter
        public Builder maxConnections(@Nullable Integer maxConnections) {
            this.maxConnections = maxConnections;
            return this;
        }
        @CustomType.Setter
        public Builder maxPendingRequests(@Nullable Integer maxPendingRequests) {
            this.maxPendingRequests = maxPendingRequests;
            return this;
        }
        public ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit build() {
            final var _resultValue = new ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit();
            _resultValue.maxConcurrentRequests = maxConcurrentRequests;
            _resultValue.maxConnections = maxConnections;
            _resultValue.maxPendingRequests = maxPendingRequests;
            return _resultValue;
        }
    }
}
