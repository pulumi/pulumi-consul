// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.AclRoleTemplatedPolicyTemplateVariablesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclRoleTemplatedPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclRoleTemplatedPolicyArgs Empty = new AclRoleTemplatedPolicyArgs();

    /**
     * Specifies the datacenters the effective policy is valid within.
     * 
     */
    @Import(name="datacenters")
    private @Nullable Output<List<String>> datacenters;

    /**
     * @return Specifies the datacenters the effective policy is valid within.
     * 
     */
    public Optional<Output<List<String>>> datacenters() {
        return Optional.ofNullable(this.datacenters);
    }

    /**
     * The name of the templated policies.
     * 
     */
    @Import(name="templateName", required=true)
    private Output<String> templateName;

    /**
     * @return The name of the templated policies.
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    /**
     * The templated policy variables.
     * 
     */
    @Import(name="templateVariables")
    private @Nullable Output<AclRoleTemplatedPolicyTemplateVariablesArgs> templateVariables;

    /**
     * @return The templated policy variables.
     * 
     */
    public Optional<Output<AclRoleTemplatedPolicyTemplateVariablesArgs>> templateVariables() {
        return Optional.ofNullable(this.templateVariables);
    }

    private AclRoleTemplatedPolicyArgs() {}

    private AclRoleTemplatedPolicyArgs(AclRoleTemplatedPolicyArgs $) {
        this.datacenters = $.datacenters;
        this.templateName = $.templateName;
        this.templateVariables = $.templateVariables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRoleTemplatedPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRoleTemplatedPolicyArgs $;

        public Builder() {
            $ = new AclRoleTemplatedPolicyArgs();
        }

        public Builder(AclRoleTemplatedPolicyArgs defaults) {
            $ = new AclRoleTemplatedPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(@Nullable Output<List<String>> datacenters) {
            $.datacenters = datacenters;
            return this;
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(List<String> datacenters) {
            return datacenters(Output.of(datacenters));
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(String... datacenters) {
            return datacenters(List.of(datacenters));
        }

        /**
         * @param templateName The name of the templated policies.
         * 
         * @return builder
         * 
         */
        public Builder templateName(Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName The name of the templated policies.
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        /**
         * @param templateVariables The templated policy variables.
         * 
         * @return builder
         * 
         */
        public Builder templateVariables(@Nullable Output<AclRoleTemplatedPolicyTemplateVariablesArgs> templateVariables) {
            $.templateVariables = templateVariables;
            return this;
        }

        /**
         * @param templateVariables The templated policy variables.
         * 
         * @return builder
         * 
         */
        public Builder templateVariables(AclRoleTemplatedPolicyTemplateVariablesArgs templateVariables) {
            return templateVariables(Output.of(templateVariables));
        }

        public AclRoleTemplatedPolicyArgs build() {
            if ($.templateName == null) {
                throw new MissingRequiredPropertyException("AclRoleTemplatedPolicyArgs", "templateName");
            }
            return $;
        }
    }

}
