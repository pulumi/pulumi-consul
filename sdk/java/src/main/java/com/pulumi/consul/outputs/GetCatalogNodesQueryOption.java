// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCatalogNodesQueryOption {
    private @Nullable Boolean allowStale;
    private @Nullable String datacenter;
    private @Nullable String near;
    private @Nullable Map<String,String> nodeMeta;
    private @Nullable String partition;
    private @Nullable Boolean requireConsistent;
    private @Nullable String token;
    private @Nullable Integer waitIndex;
    private @Nullable String waitTime;

    private GetCatalogNodesQueryOption() {}
    public Optional<Boolean> allowStale() {
        return Optional.ofNullable(this.allowStale);
    }
    public Optional<String> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }
    public Optional<String> near() {
        return Optional.ofNullable(this.near);
    }
    public Map<String,String> nodeMeta() {
        return this.nodeMeta == null ? Map.of() : this.nodeMeta;
    }
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }
    public Optional<Boolean> requireConsistent() {
        return Optional.ofNullable(this.requireConsistent);
    }
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }
    public Optional<Integer> waitIndex() {
        return Optional.ofNullable(this.waitIndex);
    }
    public Optional<String> waitTime() {
        return Optional.ofNullable(this.waitTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogNodesQueryOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowStale;
        private @Nullable String datacenter;
        private @Nullable String near;
        private @Nullable Map<String,String> nodeMeta;
        private @Nullable String partition;
        private @Nullable Boolean requireConsistent;
        private @Nullable String token;
        private @Nullable Integer waitIndex;
        private @Nullable String waitTime;
        public Builder() {}
        public Builder(GetCatalogNodesQueryOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowStale = defaults.allowStale;
    	      this.datacenter = defaults.datacenter;
    	      this.near = defaults.near;
    	      this.nodeMeta = defaults.nodeMeta;
    	      this.partition = defaults.partition;
    	      this.requireConsistent = defaults.requireConsistent;
    	      this.token = defaults.token;
    	      this.waitIndex = defaults.waitIndex;
    	      this.waitTime = defaults.waitTime;
        }

        @CustomType.Setter
        public Builder allowStale(@Nullable Boolean allowStale) {
            this.allowStale = allowStale;
            return this;
        }
        @CustomType.Setter
        public Builder datacenter(@Nullable String datacenter) {
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder near(@Nullable String near) {
            this.near = near;
            return this;
        }
        @CustomType.Setter
        public Builder nodeMeta(@Nullable Map<String,String> nodeMeta) {
            this.nodeMeta = nodeMeta;
            return this;
        }
        @CustomType.Setter
        public Builder partition(@Nullable String partition) {
            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder requireConsistent(@Nullable Boolean requireConsistent) {
            this.requireConsistent = requireConsistent;
            return this;
        }
        @CustomType.Setter
        public Builder token(@Nullable String token) {
            this.token = token;
            return this;
        }
        @CustomType.Setter
        public Builder waitIndex(@Nullable Integer waitIndex) {
            this.waitIndex = waitIndex;
            return this;
        }
        @CustomType.Setter
        public Builder waitTime(@Nullable String waitTime) {
            this.waitTime = waitTime;
            return this;
        }
        public GetCatalogNodesQueryOption build() {
            final var o = new GetCatalogNodesQueryOption();
            o.allowStale = allowStale;
            o.datacenter = datacenter;
            o.near = near;
            o.nodeMeta = nodeMeta;
            o.partition = partition;
            o.requireConsistent = requireConsistent;
            o.token = token;
            o.waitIndex = waitIndex;
            o.waitTime = waitTime;
            return o;
        }
    }
}
