// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclRolePolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final AclRolePolicyAttachmentState Empty = new AclRolePolicyAttachmentState();

    /**
     * The policy name.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The policy name.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The id of the role.
     * 
     */
    @Import(name="roleId")
    private @Nullable Output<String> roleId;

    /**
     * @return The id of the role.
     * 
     */
    public Optional<Output<String>> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    private AclRolePolicyAttachmentState() {}

    private AclRolePolicyAttachmentState(AclRolePolicyAttachmentState $) {
        this.policy = $.policy;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRolePolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRolePolicyAttachmentState $;

        public Builder() {
            $ = new AclRolePolicyAttachmentState();
        }

        public Builder(AclRolePolicyAttachmentState defaults) {
            $ = new AclRolePolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy The policy name.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The policy name.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param roleId The id of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The id of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public AclRolePolicyAttachmentState build() {
            return $;
        }
    }

}
