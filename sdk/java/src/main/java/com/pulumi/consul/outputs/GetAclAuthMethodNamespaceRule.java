// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAclAuthMethodNamespaceRule {
    private String bindNamespace;
    private String selector;

    private GetAclAuthMethodNamespaceRule() {}
    public String bindNamespace() {
        return this.bindNamespace;
    }
    public String selector() {
        return this.selector;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAclAuthMethodNamespaceRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bindNamespace;
        private String selector;
        public Builder() {}
        public Builder(GetAclAuthMethodNamespaceRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindNamespace = defaults.bindNamespace;
    	      this.selector = defaults.selector;
        }

        @CustomType.Setter
        public Builder bindNamespace(String bindNamespace) {
            if (bindNamespace == null) {
              throw new MissingRequiredPropertyException("GetAclAuthMethodNamespaceRule", "bindNamespace");
            }
            this.bindNamespace = bindNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder selector(String selector) {
            if (selector == null) {
              throw new MissingRequiredPropertyException("GetAclAuthMethodNamespaceRule", "selector");
            }
            this.selector = selector;
            return this;
        }
        public GetAclAuthMethodNamespaceRule build() {
            final var _resultValue = new GetAclAuthMethodNamespaceRule();
            _resultValue.bindNamespace = bindNamespace;
            _resultValue.selector = selector;
            return _resultValue;
        }
    }
}
