// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.NetworkAreaArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.NetworkAreaState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
 * 
 * The `consul.NetworkArea` resource manages a relationship between servers in two
 * different Consul datacenters.
 * 
 * Unlike Consul&#39;s WAN feature, network areas use just the server RPC port for
 * communication, and relationships can be made between independent pairs of
 * datacenters, so not all servers need to be fully connected. This allows for
 * complex topologies among Consul datacenters like hub/spoke and more general trees.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.NetworkArea;
 * import com.pulumi.consul.NetworkAreaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dc2 = new NetworkArea("dc2", NetworkAreaArgs.builder()
 *             .peerDatacenter("dc2")
 *             .retryJoins("1.2.3.4")
 *             .useTls(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="consul:index/networkArea:NetworkArea")
public class NetworkArea extends com.pulumi.resources.CustomResource {
    /**
     * The datacenter to use. This overrides the
     * agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    @Export(name="datacenter", refs={String.class}, tree="[0]")
    private Output<String> datacenter;

    /**
     * @return The datacenter to use. This overrides the
     * agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    public Output<String> datacenter() {
        return this.datacenter;
    }
    /**
     * The name of the Consul datacenter that will be
     * joined to form the area.
     * 
     */
    @Export(name="peerDatacenter", refs={String.class}, tree="[0]")
    private Output<String> peerDatacenter;

    /**
     * @return The name of the Consul datacenter that will be
     * joined to form the area.
     * 
     */
    public Output<String> peerDatacenter() {
        return this.peerDatacenter;
    }
    /**
     * Specifies a list of Consul servers to attempt to
     * join. Servers can be given as `IP`, `IP:port`, `hostname`, or `hostname:port`.
     * 
     */
    @Export(name="retryJoins", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> retryJoins;

    /**
     * @return Specifies a list of Consul servers to attempt to
     * join. Servers can be given as `IP`, `IP:port`, `hostname`, or `hostname:port`.
     * 
     */
    public Output<Optional<List<String>>> retryJoins() {
        return Codegen.optional(this.retryJoins);
    }
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     * 
     * @deprecated
     * The token argument has been deprecated and will be removed in a future release.
     * Please use the token argument in the provider configuration
     * 
     */
    @Deprecated /* The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration */
    @Export(name="token", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> token;

    /**
     * @return The ACL token to use. This overrides the
     * token that the agent provides by default.
     * 
     */
    public Output<Optional<String>> token() {
        return Codegen.optional(this.token);
    }
    /**
     * Specifies whether gossip over this area should be
     * encrypted with TLS if possible. Defaults to `false`.
     * 
     */
    @Export(name="useTls", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useTls;

    /**
     * @return Specifies whether gossip over this area should be
     * encrypted with TLS if possible. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> useTls() {
        return Codegen.optional(this.useTls);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkArea(String name) {
        this(name, NetworkAreaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkArea(String name, NetworkAreaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkArea(String name, NetworkAreaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/networkArea:NetworkArea", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkArea(String name, Output<String> id, @Nullable NetworkAreaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/networkArea:NetworkArea", name, state, makeResourceOptions(options, id));
    }

    private static NetworkAreaArgs makeArgs(NetworkAreaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkAreaArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "token"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkArea get(String name, Output<String> id, @Nullable NetworkAreaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkArea(name, id, state, options);
    }
}
