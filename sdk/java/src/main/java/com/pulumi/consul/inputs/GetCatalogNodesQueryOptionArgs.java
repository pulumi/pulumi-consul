// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogNodesQueryOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCatalogNodesQueryOptionArgs Empty = new GetCatalogNodesQueryOptionArgs();

    /**
     * When `true`, the default, allow responses from
     * Consul servers that are followers.
     * 
     */
    @Import(name="allowStale")
    private @Nullable Output<Boolean> allowStale;

    /**
     * @return When `true`, the default, allow responses from
     * Consul servers that are followers.
     * 
     */
    public Optional<Output<Boolean>> allowStale() {
        return Optional.ofNullable(this.allowStale);
    }

    /**
     * The Consul datacenter to query.  Defaults to the
     * same value found in `query_options` parameter specified below, or if that is
     * empty, the `datacenter` value found in the Consul agent that this provider is
     * configured to talk to then the datacenter in the provider setup.
     * 
     */
    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    /**
     * @return The Consul datacenter to query.  Defaults to the
     * same value found in `query_options` parameter specified below, or if that is
     * empty, the `datacenter` value found in the Consul agent that this provider is
     * configured to talk to then the datacenter in the provider setup.
     * 
     */
    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    @Import(name="near")
    private @Nullable Output<String> near;

    public Optional<Output<String>> near() {
        return Optional.ofNullable(this.near);
    }

    @Import(name="nodeMeta")
    private @Nullable Output<Map<String,String>> nodeMeta;

    public Optional<Output<Map<String,String>>> nodeMeta() {
        return Optional.ofNullable(this.nodeMeta);
    }

    @Import(name="partition")
    private @Nullable Output<String> partition;

    public Optional<Output<String>> partition() {
        return Optional.ofNullable(this.partition);
    }

    /**
     * When `true` force the client to perform a
     * read on at least quorum servers and verify the result is the same.  Defaults
     * to `false`.
     * 
     */
    @Import(name="requireConsistent")
    private @Nullable Output<Boolean> requireConsistent;

    /**
     * @return When `true` force the client to perform a
     * read on at least quorum servers and verify the result is the same.  Defaults
     * to `false`.
     * 
     */
    public Optional<Output<Boolean>> requireConsistent() {
        return Optional.ofNullable(this.requireConsistent);
    }

    /**
     * Specify the Consul ACL token to use when performing the
     * request.  This defaults to the same API token configured by the `consul`
     * provider but may be overridden if necessary.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return Specify the Consul ACL token to use when performing the
     * request.  This defaults to the same API token configured by the `consul`
     * provider but may be overridden if necessary.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * Index number used to enable blocking queries.
     * 
     */
    @Import(name="waitIndex")
    private @Nullable Output<Integer> waitIndex;

    /**
     * @return Index number used to enable blocking queries.
     * 
     */
    public Optional<Output<Integer>> waitIndex() {
        return Optional.ofNullable(this.waitIndex);
    }

    /**
     * Max time the client should wait for a blocking query
     * to return.
     * 
     */
    @Import(name="waitTime")
    private @Nullable Output<String> waitTime;

    /**
     * @return Max time the client should wait for a blocking query
     * to return.
     * 
     */
    public Optional<Output<String>> waitTime() {
        return Optional.ofNullable(this.waitTime);
    }

    private GetCatalogNodesQueryOptionArgs() {}

    private GetCatalogNodesQueryOptionArgs(GetCatalogNodesQueryOptionArgs $) {
        this.allowStale = $.allowStale;
        this.datacenter = $.datacenter;
        this.near = $.near;
        this.nodeMeta = $.nodeMeta;
        this.partition = $.partition;
        this.requireConsistent = $.requireConsistent;
        this.token = $.token;
        this.waitIndex = $.waitIndex;
        this.waitTime = $.waitTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogNodesQueryOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogNodesQueryOptionArgs $;

        public Builder() {
            $ = new GetCatalogNodesQueryOptionArgs();
        }

        public Builder(GetCatalogNodesQueryOptionArgs defaults) {
            $ = new GetCatalogNodesQueryOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowStale When `true`, the default, allow responses from
         * Consul servers that are followers.
         * 
         * @return builder
         * 
         */
        public Builder allowStale(@Nullable Output<Boolean> allowStale) {
            $.allowStale = allowStale;
            return this;
        }

        /**
         * @param allowStale When `true`, the default, allow responses from
         * Consul servers that are followers.
         * 
         * @return builder
         * 
         */
        public Builder allowStale(Boolean allowStale) {
            return allowStale(Output.of(allowStale));
        }

        /**
         * @param datacenter The Consul datacenter to query.  Defaults to the
         * same value found in `query_options` parameter specified below, or if that is
         * empty, the `datacenter` value found in the Consul agent that this provider is
         * configured to talk to then the datacenter in the provider setup.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        /**
         * @param datacenter The Consul datacenter to query.  Defaults to the
         * same value found in `query_options` parameter specified below, or if that is
         * empty, the `datacenter` value found in the Consul agent that this provider is
         * configured to talk to then the datacenter in the provider setup.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        public Builder near(@Nullable Output<String> near) {
            $.near = near;
            return this;
        }

        public Builder near(String near) {
            return near(Output.of(near));
        }

        public Builder nodeMeta(@Nullable Output<Map<String,String>> nodeMeta) {
            $.nodeMeta = nodeMeta;
            return this;
        }

        public Builder nodeMeta(Map<String,String> nodeMeta) {
            return nodeMeta(Output.of(nodeMeta));
        }

        public Builder partition(@Nullable Output<String> partition) {
            $.partition = partition;
            return this;
        }

        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        /**
         * @param requireConsistent When `true` force the client to perform a
         * read on at least quorum servers and verify the result is the same.  Defaults
         * to `false`.
         * 
         * @return builder
         * 
         */
        public Builder requireConsistent(@Nullable Output<Boolean> requireConsistent) {
            $.requireConsistent = requireConsistent;
            return this;
        }

        /**
         * @param requireConsistent When `true` force the client to perform a
         * read on at least quorum servers and verify the result is the same.  Defaults
         * to `false`.
         * 
         * @return builder
         * 
         */
        public Builder requireConsistent(Boolean requireConsistent) {
            return requireConsistent(Output.of(requireConsistent));
        }

        /**
         * @param token Specify the Consul ACL token to use when performing the
         * request.  This defaults to the same API token configured by the `consul`
         * provider but may be overridden if necessary.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token Specify the Consul ACL token to use when performing the
         * request.  This defaults to the same API token configured by the `consul`
         * provider but may be overridden if necessary.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param waitIndex Index number used to enable blocking queries.
         * 
         * @return builder
         * 
         */
        public Builder waitIndex(@Nullable Output<Integer> waitIndex) {
            $.waitIndex = waitIndex;
            return this;
        }

        /**
         * @param waitIndex Index number used to enable blocking queries.
         * 
         * @return builder
         * 
         */
        public Builder waitIndex(Integer waitIndex) {
            return waitIndex(Output.of(waitIndex));
        }

        /**
         * @param waitTime Max time the client should wait for a blocking query
         * to return.
         * 
         * @return builder
         * 
         */
        public Builder waitTime(@Nullable Output<String> waitTime) {
            $.waitTime = waitTime;
            return this;
        }

        /**
         * @param waitTime Max time the client should wait for a blocking query
         * to return.
         * 
         * @return builder
         * 
         */
        public Builder waitTime(String waitTime) {
            return waitTime(Output.of(waitTime));
        }

        public GetCatalogNodesQueryOptionArgs build() {
            return $;
        }
    }

}
