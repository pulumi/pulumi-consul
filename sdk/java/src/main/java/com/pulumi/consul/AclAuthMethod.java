// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.AclAuthMethodArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.AclAuthMethodState;
import com.pulumi.consul.outputs.AclAuthMethodNamespaceRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Starting with Consul 1.5.0, the `consul.AclAuthMethod` resource can be used to managed [Consul ACL auth methods](https://www.consul.io/docs/acl/auth-methods).
 * 
 * ## Example Usage
 * 
 * Define a `kubernetes` auth method:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.AclAuthMethod;
 * import com.pulumi.consul.AclAuthMethodArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var minikube = new AclAuthMethod("minikube", AclAuthMethodArgs.builder()
 *             .name("minikube")
 *             .type("kubernetes")
 *             .description("dev minikube cluster")
 *             .configJson(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("Host", "https://192.0.2.42:8443"),
 *                     jsonProperty("CACert", """
 * -----BEGIN CERTIFICATE-----
 * ...-----END CERTIFICATE-----
 *                     """),
 *                     jsonProperty("ServiceAccountJWT", "eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9...")
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Define a `jwt` auth method:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.AclAuthMethod;
 * import com.pulumi.consul.AclAuthMethodArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var oidc = new AclAuthMethod("oidc", AclAuthMethodArgs.builder()
 *             .name("auth0")
 *             .type("oidc")
 *             .maxTokenTtl("5m")
 *             .configJson(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("AllowedRedirectURIs", jsonArray(
 *                         "http://localhost:8550/oidc/callback", 
 *                         "http://localhost:8500/ui/oidc/callback"
 *                     )),
 *                     jsonProperty("BoundAudiences", jsonArray("V1RPi2MYptMV1RPi2MYptMV1RPi2MYpt")),
 *                     jsonProperty("ClaimMappings", jsonObject(
 *                         jsonProperty("http://example.com/first_name", "first_name"),
 *                         jsonProperty("http://example.com/last_name", "last_name")
 *                     )),
 *                     jsonProperty("ListClaimMappings", jsonObject(
 *                         jsonProperty("http://consul.com/groups", "groups")
 *                     )),
 *                     jsonProperty("OIDCClientID", "V1RPi2MYptMV1RPi2MYptMV1RPi2MYpt"),
 *                     jsonProperty("OIDCClientSecret", "...(omitted)..."),
 *                     jsonProperty("OIDCDiscoveryURL", "https://my-corp-app-name.auth0.com/")
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="consul:index/aclAuthMethod:AclAuthMethod")
public class AclAuthMethod extends com.pulumi.resources.CustomResource {
    /**
     * The raw configuration for this ACL auth method.
     * 
     * @deprecated
     * The config attribute is deprecated, please use `config_json` instead.
     * 
     */
    @Deprecated /* The config attribute is deprecated, please use `config_json` instead. */
    @Export(name="config", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> config;

    /**
     * @return The raw configuration for this ACL auth method.
     * 
     */
    public Output<Optional<Map<String,String>>> config() {
        return Codegen.optional(this.config);
    }
    /**
     * The raw configuration for this ACL auth method.
     * 
     */
    @Export(name="configJson", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> configJson;

    /**
     * @return The raw configuration for this ACL auth method.
     * 
     */
    public Output<Optional<String>> configJson() {
        return Codegen.optional(this.configJson);
    }
    /**
     * A free form human readable description of the auth method.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A free form human readable description of the auth method.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * An optional name to use instead of the name attribute when displaying information about this auth method.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return An optional name to use instead of the name attribute when displaying information about this auth method.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The maximum life of any token created by this auth method. **This attribute is required and must be set to a nonzero for the OIDC auth method.**
     * 
     */
    @Export(name="maxTokenTtl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> maxTokenTtl;

    /**
     * @return The maximum life of any token created by this auth method. **This attribute is required and must be set to a nonzero for the OIDC auth method.**
     * 
     */
    public Output<Optional<String>> maxTokenTtl() {
        return Codegen.optional(this.maxTokenTtl);
    }
    /**
     * The name of the ACL auth method.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the ACL auth method.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The namespace in which to create the auth method.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace in which to create the auth method.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * A set of rules that control which namespace tokens created via this auth method will be created within.
     * 
     */
    @Export(name="namespaceRules", refs={List.class,AclAuthMethodNamespaceRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AclAuthMethodNamespaceRule>> namespaceRules;

    /**
     * @return A set of rules that control which namespace tokens created via this auth method will be created within.
     * 
     */
    public Output<Optional<List<AclAuthMethodNamespaceRule>>> namespaceRules() {
        return Codegen.optional(this.namespaceRules);
    }
    /**
     * The partition the ACL auth method is associated with.
     * 
     */
    @Export(name="partition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partition;

    /**
     * @return The partition the ACL auth method is associated with.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * The kind of token that this auth method produces. This can be either &#39;local&#39; or &#39;global&#39;.
     * 
     */
    @Export(name="tokenLocality", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tokenLocality;

    /**
     * @return The kind of token that this auth method produces. This can be either &#39;local&#39; or &#39;global&#39;.
     * 
     */
    public Output<Optional<String>> tokenLocality() {
        return Codegen.optional(this.tokenLocality);
    }
    /**
     * The type of the ACL auth method.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the ACL auth method.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AclAuthMethod(String name) {
        this(name, AclAuthMethodArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AclAuthMethod(String name, AclAuthMethodArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AclAuthMethod(String name, AclAuthMethodArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/aclAuthMethod:AclAuthMethod", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private AclAuthMethod(String name, Output<String> id, @Nullable AclAuthMethodState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/aclAuthMethod:AclAuthMethod", name, state, makeResourceOptions(options, id));
    }

    private static AclAuthMethodArgs makeArgs(AclAuthMethodArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AclAuthMethodArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AclAuthMethod get(String name, Output<String> id, @Nullable AclAuthMethodState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AclAuthMethod(name, id, state, options);
    }
}
