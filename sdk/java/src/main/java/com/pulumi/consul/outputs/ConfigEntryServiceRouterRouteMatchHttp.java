// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.ConfigEntryServiceRouterRouteMatchHttpHeader;
import com.pulumi.consul.outputs.ConfigEntryServiceRouterRouteMatchHttpQueryParam;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigEntryServiceRouterRouteMatchHttp {
    /**
     * @return Specifies information in the HTTP request header to match with.
     * 
     */
    private @Nullable List<ConfigEntryServiceRouterRouteMatchHttpHeader> headers;
    /**
     * @return Specifies HTTP methods that the match applies to.
     * 
     */
    private @Nullable List<String> methods;
    /**
     * @return Specifies the exact path to match on the HTTP request path.
     * 
     */
    private @Nullable String pathExact;
    /**
     * @return Specifies the path prefix to match on the HTTP request path.
     * 
     */
    private @Nullable String pathPrefix;
    /**
     * @return Specifies a regular expression to match on the HTTP request path.
     * 
     */
    private @Nullable String pathRegex;
    /**
     * @return Specifies information to match to on HTTP query parameters.
     * 
     */
    private @Nullable List<ConfigEntryServiceRouterRouteMatchHttpQueryParam> queryParams;

    private ConfigEntryServiceRouterRouteMatchHttp() {}
    /**
     * @return Specifies information in the HTTP request header to match with.
     * 
     */
    public List<ConfigEntryServiceRouterRouteMatchHttpHeader> headers() {
        return this.headers == null ? List.of() : this.headers;
    }
    /**
     * @return Specifies HTTP methods that the match applies to.
     * 
     */
    public List<String> methods() {
        return this.methods == null ? List.of() : this.methods;
    }
    /**
     * @return Specifies the exact path to match on the HTTP request path.
     * 
     */
    public Optional<String> pathExact() {
        return Optional.ofNullable(this.pathExact);
    }
    /**
     * @return Specifies the path prefix to match on the HTTP request path.
     * 
     */
    public Optional<String> pathPrefix() {
        return Optional.ofNullable(this.pathPrefix);
    }
    /**
     * @return Specifies a regular expression to match on the HTTP request path.
     * 
     */
    public Optional<String> pathRegex() {
        return Optional.ofNullable(this.pathRegex);
    }
    /**
     * @return Specifies information to match to on HTTP query parameters.
     * 
     */
    public List<ConfigEntryServiceRouterRouteMatchHttpQueryParam> queryParams() {
        return this.queryParams == null ? List.of() : this.queryParams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEntryServiceRouterRouteMatchHttp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ConfigEntryServiceRouterRouteMatchHttpHeader> headers;
        private @Nullable List<String> methods;
        private @Nullable String pathExact;
        private @Nullable String pathPrefix;
        private @Nullable String pathRegex;
        private @Nullable List<ConfigEntryServiceRouterRouteMatchHttpQueryParam> queryParams;
        public Builder() {}
        public Builder(ConfigEntryServiceRouterRouteMatchHttp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headers = defaults.headers;
    	      this.methods = defaults.methods;
    	      this.pathExact = defaults.pathExact;
    	      this.pathPrefix = defaults.pathPrefix;
    	      this.pathRegex = defaults.pathRegex;
    	      this.queryParams = defaults.queryParams;
        }

        @CustomType.Setter
        public Builder headers(@Nullable List<ConfigEntryServiceRouterRouteMatchHttpHeader> headers) {
            this.headers = headers;
            return this;
        }
        public Builder headers(ConfigEntryServiceRouterRouteMatchHttpHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder methods(@Nullable List<String> methods) {
            this.methods = methods;
            return this;
        }
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }
        @CustomType.Setter
        public Builder pathExact(@Nullable String pathExact) {
            this.pathExact = pathExact;
            return this;
        }
        @CustomType.Setter
        public Builder pathPrefix(@Nullable String pathPrefix) {
            this.pathPrefix = pathPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder pathRegex(@Nullable String pathRegex) {
            this.pathRegex = pathRegex;
            return this;
        }
        @CustomType.Setter
        public Builder queryParams(@Nullable List<ConfigEntryServiceRouterRouteMatchHttpQueryParam> queryParams) {
            this.queryParams = queryParams;
            return this;
        }
        public Builder queryParams(ConfigEntryServiceRouterRouteMatchHttpQueryParam... queryParams) {
            return queryParams(List.of(queryParams));
        }
        public ConfigEntryServiceRouterRouteMatchHttp build() {
            final var _resultValue = new ConfigEntryServiceRouterRouteMatchHttp();
            _resultValue.headers = headers;
            _resultValue.methods = methods;
            _resultValue.pathExact = pathExact;
            _resultValue.pathPrefix = pathPrefix;
            _resultValue.pathRegex = pathRegex;
            _resultValue.queryParams = queryParams;
            return _resultValue;
        }
    }
}
