// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.GetNodesNode;
import com.pulumi.consul.outputs.GetNodesQueryOption;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetNodesResult {
    /**
     * @return The datacenter the keys are being read from to.
     * 
     */
    private String datacenter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of the Consul node IDs.
     * 
     */
    private List<String> nodeIds;
    /**
     * @return A list of the Consul node names.
     * 
     */
    private List<String> nodeNames;
    /**
     * @return A list of nodes and details about each Consul agent.  The list of
     * per-node attributes is detailed below.
     * 
     */
    private List<GetNodesNode> nodes;
    private @Nullable List<GetNodesQueryOption> queryOptions;

    private GetNodesResult() {}
    /**
     * @return The datacenter the keys are being read from to.
     * 
     */
    public String datacenter() {
        return this.datacenter;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of the Consul node IDs.
     * 
     */
    public List<String> nodeIds() {
        return this.nodeIds;
    }
    /**
     * @return A list of the Consul node names.
     * 
     */
    public List<String> nodeNames() {
        return this.nodeNames;
    }
    /**
     * @return A list of nodes and details about each Consul agent.  The list of
     * per-node attributes is detailed below.
     * 
     */
    public List<GetNodesNode> nodes() {
        return this.nodes;
    }
    public List<GetNodesQueryOption> queryOptions() {
        return this.queryOptions == null ? List.of() : this.queryOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenter;
        private String id;
        private List<String> nodeIds;
        private List<String> nodeNames;
        private List<GetNodesNode> nodes;
        private @Nullable List<GetNodesQueryOption> queryOptions;
        public Builder() {}
        public Builder(GetNodesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenter = defaults.datacenter;
    	      this.id = defaults.id;
    	      this.nodeIds = defaults.nodeIds;
    	      this.nodeNames = defaults.nodeNames;
    	      this.nodes = defaults.nodes;
    	      this.queryOptions = defaults.queryOptions;
        }

        @CustomType.Setter
        public Builder datacenter(String datacenter) {
            this.datacenter = Objects.requireNonNull(datacenter);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder nodeIds(List<String> nodeIds) {
            this.nodeIds = Objects.requireNonNull(nodeIds);
            return this;
        }
        public Builder nodeIds(String... nodeIds) {
            return nodeIds(List.of(nodeIds));
        }
        @CustomType.Setter
        public Builder nodeNames(List<String> nodeNames) {
            this.nodeNames = Objects.requireNonNull(nodeNames);
            return this;
        }
        public Builder nodeNames(String... nodeNames) {
            return nodeNames(List.of(nodeNames));
        }
        @CustomType.Setter
        public Builder nodes(List<GetNodesNode> nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }
        public Builder nodes(GetNodesNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder queryOptions(@Nullable List<GetNodesQueryOption> queryOptions) {
            this.queryOptions = queryOptions;
            return this;
        }
        public Builder queryOptions(GetNodesQueryOption... queryOptions) {
            return queryOptions(List.of(queryOptions));
        }
        public GetNodesResult build() {
            final var _resultValue = new GetNodesResult();
            _resultValue.datacenter = datacenter;
            _resultValue.id = id;
            _resultValue.nodeIds = nodeIds;
            _resultValue.nodeNames = nodeNames;
            _resultValue.nodes = nodes;
            _resultValue.queryOptions = queryOptions;
            return _resultValue;
        }
    }
}
