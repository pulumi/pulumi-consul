// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KeyPrefixSubkeyCollection {
    /**
     * @return An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
     * to attach to the key (defaults to 0).
     * 
     */
    private @Nullable Integer flags;
    /**
     * @return This is the path (which will be appended to the given
     * `path_prefix`) in Consul that should be written to.
     * 
     */
    private String path;
    /**
     * @return The value to write to the given path.
     * 
     */
    private String value;

    private KeyPrefixSubkeyCollection() {}
    /**
     * @return An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
     * to attach to the key (defaults to 0).
     * 
     */
    public Optional<Integer> flags() {
        return Optional.ofNullable(this.flags);
    }
    /**
     * @return This is the path (which will be appended to the given
     * `path_prefix`) in Consul that should be written to.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The value to write to the given path.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyPrefixSubkeyCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer flags;
        private String path;
        private String value;
        public Builder() {}
        public Builder(KeyPrefixSubkeyCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.flags = defaults.flags;
    	      this.path = defaults.path;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder flags(@Nullable Integer flags) {

            this.flags = flags;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("KeyPrefixSubkeyCollection", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("KeyPrefixSubkeyCollection", "value");
            }
            this.value = value;
            return this;
        }
        public KeyPrefixSubkeyCollection build() {
            final var _resultValue = new KeyPrefixSubkeyCollection();
            _resultValue.flags = flags;
            _resultValue.path = path;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
