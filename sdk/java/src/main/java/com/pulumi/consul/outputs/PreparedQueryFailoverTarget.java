// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreparedQueryFailoverTarget {
    /**
     * @return The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    private @Nullable String datacenter;
    private @Nullable String peer;

    private PreparedQueryFailoverTarget() {}
    /**
     * @return The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    public Optional<String> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }
    public Optional<String> peer() {
        return Optional.ofNullable(this.peer);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreparedQueryFailoverTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String datacenter;
        private @Nullable String peer;
        public Builder() {}
        public Builder(PreparedQueryFailoverTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenter = defaults.datacenter;
    	      this.peer = defaults.peer;
        }

        @CustomType.Setter
        public Builder datacenter(@Nullable String datacenter) {
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder peer(@Nullable String peer) {
            this.peer = peer;
            return this;
        }
        public PreparedQueryFailoverTarget build() {
            final var o = new PreparedQueryFailoverTarget();
            o.datacenter = datacenter;
            o.peer = peer;
            return o;
        }
    }
}
