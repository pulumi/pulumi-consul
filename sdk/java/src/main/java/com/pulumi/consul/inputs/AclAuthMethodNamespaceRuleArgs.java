// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclAuthMethodNamespaceRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclAuthMethodNamespaceRuleArgs Empty = new AclAuthMethodNamespaceRuleArgs();

    /**
     * If the namespace rule&#39;s `selector` matches then
     * this is used to control the namespace where the token is created.
     * 
     */
    @Import(name="bindNamespace", required=true)
    private Output<String> bindNamespace;

    /**
     * @return If the namespace rule&#39;s `selector` matches then
     * this is used to control the namespace where the token is created.
     * 
     */
    public Output<String> bindNamespace() {
        return this.bindNamespace;
    }

    /**
     * Specifies the expression used to match this namespace
     * rule against valid identities returned from an auth method validation.
     * Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="selector")
    private @Nullable Output<String> selector;

    /**
     * @return Specifies the expression used to match this namespace
     * rule against valid identities returned from an auth method validation.
     * Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> selector() {
        return Optional.ofNullable(this.selector);
    }

    private AclAuthMethodNamespaceRuleArgs() {}

    private AclAuthMethodNamespaceRuleArgs(AclAuthMethodNamespaceRuleArgs $) {
        this.bindNamespace = $.bindNamespace;
        this.selector = $.selector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclAuthMethodNamespaceRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclAuthMethodNamespaceRuleArgs $;

        public Builder() {
            $ = new AclAuthMethodNamespaceRuleArgs();
        }

        public Builder(AclAuthMethodNamespaceRuleArgs defaults) {
            $ = new AclAuthMethodNamespaceRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindNamespace If the namespace rule&#39;s `selector` matches then
         * this is used to control the namespace where the token is created.
         * 
         * @return builder
         * 
         */
        public Builder bindNamespace(Output<String> bindNamespace) {
            $.bindNamespace = bindNamespace;
            return this;
        }

        /**
         * @param bindNamespace If the namespace rule&#39;s `selector` matches then
         * this is used to control the namespace where the token is created.
         * 
         * @return builder
         * 
         */
        public Builder bindNamespace(String bindNamespace) {
            return bindNamespace(Output.of(bindNamespace));
        }

        /**
         * @param selector Specifies the expression used to match this namespace
         * rule against valid identities returned from an auth method validation.
         * Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder selector(@Nullable Output<String> selector) {
            $.selector = selector;
            return this;
        }

        /**
         * @param selector Specifies the expression used to match this namespace
         * rule against valid identities returned from an auth method validation.
         * Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder selector(String selector) {
            return selector(Output.of(selector));
        }

        public AclAuthMethodNamespaceRuleArgs build() {
            $.bindNamespace = Objects.requireNonNull($.bindNamespace, "expected parameter 'bindNamespace' to be non-null");
            return $;
        }
    }

}
