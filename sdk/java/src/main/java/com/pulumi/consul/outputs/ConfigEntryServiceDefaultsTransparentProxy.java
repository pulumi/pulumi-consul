// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class ConfigEntryServiceDefaultsTransparentProxy {
    private Boolean dialedDirectly;
    private Integer outboundListenerPort;

    private ConfigEntryServiceDefaultsTransparentProxy() {}
    public Boolean dialedDirectly() {
        return this.dialedDirectly;
    }
    public Integer outboundListenerPort() {
        return this.outboundListenerPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEntryServiceDefaultsTransparentProxy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean dialedDirectly;
        private Integer outboundListenerPort;
        public Builder() {}
        public Builder(ConfigEntryServiceDefaultsTransparentProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dialedDirectly = defaults.dialedDirectly;
    	      this.outboundListenerPort = defaults.outboundListenerPort;
        }

        @CustomType.Setter
        public Builder dialedDirectly(Boolean dialedDirectly) {
            if (dialedDirectly == null) {
              throw new MissingRequiredPropertyException("ConfigEntryServiceDefaultsTransparentProxy", "dialedDirectly");
            }
            this.dialedDirectly = dialedDirectly;
            return this;
        }
        @CustomType.Setter
        public Builder outboundListenerPort(Integer outboundListenerPort) {
            if (outboundListenerPort == null) {
              throw new MissingRequiredPropertyException("ConfigEntryServiceDefaultsTransparentProxy", "outboundListenerPort");
            }
            this.outboundListenerPort = outboundListenerPort;
            return this;
        }
        public ConfigEntryServiceDefaultsTransparentProxy build() {
            final var _resultValue = new ConfigEntryServiceDefaultsTransparentProxy();
            _resultValue.dialedDirectly = dialedDirectly;
            _resultValue.outboundListenerPort = outboundListenerPort;
            return _resultValue;
        }
    }
}
