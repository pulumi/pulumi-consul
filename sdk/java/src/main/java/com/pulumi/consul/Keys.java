// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.KeysArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.KeysState;
import com.pulumi.consul.outputs.KeysKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 */
@ResourceType(type="consul:index/keys:Keys")
public class Keys extends com.pulumi.resources.CustomResource {
    /**
     * The datacenter to use. This overrides the
     * agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    @Export(name="datacenter", type=String.class, parameters={})
    private Output<String> datacenter;

    /**
     * @return The datacenter to use. This overrides the
     * agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    public Output<String> datacenter() {
        return this.datacenter;
    }
    /**
     * Specifies a key in Consul to be written.
     * Supported values documented below.
     * 
     */
    @Export(name="keys", type=List.class, parameters={KeysKey.class})
    private Output</* @Nullable */ List<KeysKey>> keys;

    /**
     * @return Specifies a key in Consul to be written.
     * Supported values documented below.
     * 
     */
    public Output<Optional<List<KeysKey>>> keys() {
        return Codegen.optional(this.keys);
    }
    /**
     * The namespace to create the keys within.
     * 
     */
    @Export(name="namespace", type=String.class, parameters={})
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The namespace to create the keys within.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The partition to create the keys within.
     * 
     */
    @Export(name="partition", type=String.class, parameters={})
    private Output</* @Nullable */ String> partition;

    /**
     * @return The partition to create the keys within.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * The ACL token to use. This overrides the
     * token that the agent provides by default.
     * 
     */
    @Export(name="token", type=String.class, parameters={})
    private Output</* @Nullable */ String> token;

    /**
     * @return The ACL token to use. This overrides the
     * token that the agent provides by default.
     * 
     */
    public Output<Optional<String>> token() {
        return Codegen.optional(this.token);
    }
    @Export(name="var", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> var_;

    public Output<Map<String,String>> var_() {
        return this.var_;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Keys(String name) {
        this(name, KeysArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Keys(String name, @Nullable KeysArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Keys(String name, @Nullable KeysArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/keys:Keys", name, args == null ? KeysArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Keys(String name, Output<String> id, @Nullable KeysState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/keys:Keys", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Keys get(String name, Output<String> id, @Nullable KeysState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Keys(name, id, state, options);
    }
}
