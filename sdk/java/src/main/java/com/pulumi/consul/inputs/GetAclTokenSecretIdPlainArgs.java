// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAclTokenSecretIdPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAclTokenSecretIdPlainArgs Empty = new GetAclTokenSecretIdPlainArgs();

    /**
     * The accessor ID of the ACL token.
     * 
     */
    @Import(name="accessorId", required=true)
    private String accessorId;

    /**
     * @return The accessor ID of the ACL token.
     * 
     */
    public String accessorId() {
        return this.accessorId;
    }

    /**
     * The namespace to lookup the token.
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return The namespace to lookup the token.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The partition to lookup the token.
     * 
     */
    @Import(name="partition")
    private @Nullable String partition;

    /**
     * @return The partition to lookup the token.
     * 
     */
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }

    @Import(name="pgpKey")
    private @Nullable String pgpKey;

    public Optional<String> pgpKey() {
        return Optional.ofNullable(this.pgpKey);
    }

    private GetAclTokenSecretIdPlainArgs() {}

    private GetAclTokenSecretIdPlainArgs(GetAclTokenSecretIdPlainArgs $) {
        this.accessorId = $.accessorId;
        this.namespace = $.namespace;
        this.partition = $.partition;
        this.pgpKey = $.pgpKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAclTokenSecretIdPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAclTokenSecretIdPlainArgs $;

        public Builder() {
            $ = new GetAclTokenSecretIdPlainArgs();
        }

        public Builder(GetAclTokenSecretIdPlainArgs defaults) {
            $ = new GetAclTokenSecretIdPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessorId The accessor ID of the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder accessorId(String accessorId) {
            $.accessorId = accessorId;
            return this;
        }

        /**
         * @param namespace The namespace to lookup the token.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param partition The partition to lookup the token.
         * 
         * @return builder
         * 
         */
        public Builder partition(@Nullable String partition) {
            $.partition = partition;
            return this;
        }

        public Builder pgpKey(@Nullable String pgpKey) {
            $.pgpKey = pgpKey;
            return this;
        }

        public GetAclTokenSecretIdPlainArgs build() {
            if ($.accessorId == null) {
                throw new MissingRequiredPropertyException("GetAclTokenSecretIdPlainArgs", "accessorId");
            }
            return $;
        }
    }

}
