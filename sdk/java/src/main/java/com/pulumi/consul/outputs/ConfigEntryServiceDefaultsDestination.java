// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConfigEntryServiceDefaultsDestination {
    private List<String> addresses;
    private Integer port;

    private ConfigEntryServiceDefaultsDestination() {}
    public List<String> addresses() {
        return this.addresses;
    }
    public Integer port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEntryServiceDefaultsDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> addresses;
        private Integer port;
        public Builder() {}
        public Builder(ConfigEntryServiceDefaultsDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder addresses(List<String> addresses) {
            if (addresses == null) {
              throw new MissingRequiredPropertyException("ConfigEntryServiceDefaultsDestination", "addresses");
            }
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("ConfigEntryServiceDefaultsDestination", "port");
            }
            this.port = port;
            return this;
        }
        public ConfigEntryServiceDefaultsDestination build() {
            final var _resultValue = new ConfigEntryServiceDefaultsDestination();
            _resultValue.addresses = addresses;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
