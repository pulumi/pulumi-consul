// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.AdminPartitionArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.AdminPartitionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **NOTE:** This feature requires Consul Enterprise.
 * 
 * The `consul.AdminPartition` resource manages [Consul Enterprise Admin Partitions](https://www.consul.io/docs/enterprise/admin-partitions).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.AdminPartition;
 * import com.pulumi.consul.AdminPartitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var naWest = new AdminPartition("naWest", AdminPartitionArgs.builder()
 *             .name("na-west")
 *             .description("Partition for North America West")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * `consul_admin_partition` can be imported:
 * 
 * ```sh
 * $ pulumi import consul:index/adminPartition:AdminPartition na_west na-west
 * ```
 * 
 */
@ResourceType(type="consul:index/adminPartition:AdminPartition")
public class AdminPartition extends com.pulumi.resources.CustomResource {
    /**
     * Free form partition description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Free form partition description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * . Disable gossip pool for the partition. Defaults to `false`.
     * 
     */
    @Export(name="disableGossip", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableGossip;

    /**
     * @return . Disable gossip pool for the partition. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> disableGossip() {
        return Codegen.optional(this.disableGossip);
    }
    /**
     * The partition name. This must be a valid DNS hostname label.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The partition name. This must be a valid DNS hostname label.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AdminPartition(java.lang.String name) {
        this(name, AdminPartitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AdminPartition(java.lang.String name, @Nullable AdminPartitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AdminPartition(java.lang.String name, @Nullable AdminPartitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/adminPartition:AdminPartition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AdminPartition(java.lang.String name, Output<java.lang.String> id, @Nullable AdminPartitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/adminPartition:AdminPartition", name, state, makeResourceOptions(options, id), false);
    }

    private static AdminPartitionArgs makeArgs(@Nullable AdminPartitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AdminPartitionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AdminPartition get(java.lang.String name, Output<java.lang.String> id, @Nullable AdminPartitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AdminPartition(name, id, state, options);
    }
}
