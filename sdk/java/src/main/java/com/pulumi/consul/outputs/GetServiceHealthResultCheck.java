// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceHealthResultCheck {
    /**
     * @return The ID of this health-check.
     * 
     */
    private String id;
    /**
     * @return The service name to select.
     * 
     */
    private String name;
    /**
     * @return The name of the node associated with this health-check.
     * 
     */
    private String node;
    /**
     * @return A human readable description of the current state of the health-check.
     * 
     */
    private String notes;
    /**
     * @return The output of the health-check.
     * 
     */
    private String output;
    /**
     * @return The ID of the service associated to this health-check.
     * 
     */
    private String serviceId;
    /**
     * @return The name of the service associated with this health-check.
     * 
     */
    private String serviceName;
    /**
     * @return The list of tags associated with this health-check.
     * 
     */
    private List<String> serviceTags;
    /**
     * @return The status of this health-check.
     * 
     */
    private String status;

    private GetServiceHealthResultCheck() {}
    /**
     * @return The ID of this health-check.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The service name to select.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the node associated with this health-check.
     * 
     */
    public String node() {
        return this.node;
    }
    /**
     * @return A human readable description of the current state of the health-check.
     * 
     */
    public String notes() {
        return this.notes;
    }
    /**
     * @return The output of the health-check.
     * 
     */
    public String output() {
        return this.output;
    }
    /**
     * @return The ID of the service associated to this health-check.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }
    /**
     * @return The name of the service associated with this health-check.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The list of tags associated with this health-check.
     * 
     */
    public List<String> serviceTags() {
        return this.serviceTags;
    }
    /**
     * @return The status of this health-check.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHealthResultCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String node;
        private String notes;
        private String output;
        private String serviceId;
        private String serviceName;
        private List<String> serviceTags;
        private String status;
        public Builder() {}
        public Builder(GetServiceHealthResultCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.node = defaults.node;
    	      this.notes = defaults.notes;
    	      this.output = defaults.output;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceName = defaults.serviceName;
    	      this.serviceTags = defaults.serviceTags;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder node(String node) {
            this.node = Objects.requireNonNull(node);
            return this;
        }
        @CustomType.Setter
        public Builder notes(String notes) {
            this.notes = Objects.requireNonNull(notes);
            return this;
        }
        @CustomType.Setter
        public Builder output(String output) {
            this.output = Objects.requireNonNull(output);
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceTags(List<String> serviceTags) {
            this.serviceTags = Objects.requireNonNull(serviceTags);
            return this;
        }
        public Builder serviceTags(String... serviceTags) {
            return serviceTags(List.of(serviceTags));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public GetServiceHealthResultCheck build() {
            final var _resultValue = new GetServiceHealthResultCheck();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.node = node;
            _resultValue.notes = notes;
            _resultValue.output = output;
            _resultValue.serviceId = serviceId;
            _resultValue.serviceName = serviceName;
            _resultValue.serviceTags = serviceTags;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
