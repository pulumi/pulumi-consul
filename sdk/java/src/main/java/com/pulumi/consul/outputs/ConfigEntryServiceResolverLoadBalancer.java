// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.ConfigEntryServiceResolverLoadBalancerHashPolicy;
import com.pulumi.consul.outputs.ConfigEntryServiceResolverLoadBalancerLeastRequestConfig;
import com.pulumi.consul.outputs.ConfigEntryServiceResolverLoadBalancerRingHashConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigEntryServiceResolverLoadBalancer {
    /**
     * @return Specifies a list of hash policies to use for hashing load balancing algorithms. Consul evaluates hash policies individually and combines them so that identical lists result in the same hash.
     * 
     */
    private @Nullable List<ConfigEntryServiceResolverLoadBalancerHashPolicy> hashPolicies;
    /**
     * @return Specifies configuration for the least*request policy type.
     * 
     */
    private @Nullable List<ConfigEntryServiceResolverLoadBalancerLeastRequestConfig> leastRequestConfigs;
    /**
     * @return Specifies the type of load balancing policy for selecting a host.
     * 
     */
    private @Nullable String policy;
    /**
     * @return Specifies configuration for the ring*hash policy type.
     * 
     */
    private @Nullable List<ConfigEntryServiceResolverLoadBalancerRingHashConfig> ringHashConfigs;

    private ConfigEntryServiceResolverLoadBalancer() {}
    /**
     * @return Specifies a list of hash policies to use for hashing load balancing algorithms. Consul evaluates hash policies individually and combines them so that identical lists result in the same hash.
     * 
     */
    public List<ConfigEntryServiceResolverLoadBalancerHashPolicy> hashPolicies() {
        return this.hashPolicies == null ? List.of() : this.hashPolicies;
    }
    /**
     * @return Specifies configuration for the least*request policy type.
     * 
     */
    public List<ConfigEntryServiceResolverLoadBalancerLeastRequestConfig> leastRequestConfigs() {
        return this.leastRequestConfigs == null ? List.of() : this.leastRequestConfigs;
    }
    /**
     * @return Specifies the type of load balancing policy for selecting a host.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return Specifies configuration for the ring*hash policy type.
     * 
     */
    public List<ConfigEntryServiceResolverLoadBalancerRingHashConfig> ringHashConfigs() {
        return this.ringHashConfigs == null ? List.of() : this.ringHashConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigEntryServiceResolverLoadBalancer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ConfigEntryServiceResolverLoadBalancerHashPolicy> hashPolicies;
        private @Nullable List<ConfigEntryServiceResolverLoadBalancerLeastRequestConfig> leastRequestConfigs;
        private @Nullable String policy;
        private @Nullable List<ConfigEntryServiceResolverLoadBalancerRingHashConfig> ringHashConfigs;
        public Builder() {}
        public Builder(ConfigEntryServiceResolverLoadBalancer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hashPolicies = defaults.hashPolicies;
    	      this.leastRequestConfigs = defaults.leastRequestConfigs;
    	      this.policy = defaults.policy;
    	      this.ringHashConfigs = defaults.ringHashConfigs;
        }

        @CustomType.Setter
        public Builder hashPolicies(@Nullable List<ConfigEntryServiceResolverLoadBalancerHashPolicy> hashPolicies) {

            this.hashPolicies = hashPolicies;
            return this;
        }
        public Builder hashPolicies(ConfigEntryServiceResolverLoadBalancerHashPolicy... hashPolicies) {
            return hashPolicies(List.of(hashPolicies));
        }
        @CustomType.Setter
        public Builder leastRequestConfigs(@Nullable List<ConfigEntryServiceResolverLoadBalancerLeastRequestConfig> leastRequestConfigs) {

            this.leastRequestConfigs = leastRequestConfigs;
            return this;
        }
        public Builder leastRequestConfigs(ConfigEntryServiceResolverLoadBalancerLeastRequestConfig... leastRequestConfigs) {
            return leastRequestConfigs(List.of(leastRequestConfigs));
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {

            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder ringHashConfigs(@Nullable List<ConfigEntryServiceResolverLoadBalancerRingHashConfig> ringHashConfigs) {

            this.ringHashConfigs = ringHashConfigs;
            return this;
        }
        public Builder ringHashConfigs(ConfigEntryServiceResolverLoadBalancerRingHashConfig... ringHashConfigs) {
            return ringHashConfigs(List.of(ringHashConfigs));
        }
        public ConfigEntryServiceResolverLoadBalancer build() {
            final var _resultValue = new ConfigEntryServiceResolverLoadBalancer();
            _resultValue.hashPolicies = hashPolicies;
            _resultValue.leastRequestConfigs = leastRequestConfigs;
            _resultValue.policy = policy;
            _resultValue.ringHashConfigs = ringHashConfigs;
            return _resultValue;
        }
    }
}
