// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.GetKeysKeyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKeysArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKeysArgs Empty = new GetKeysArgs();

    /**
     * The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    /**
     * @return The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
     * 
     */
    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    /**
     * Whether to return an error when a key is absent from the KV store and no default is configured. This defaults to `false`.
     * 
     */
    @Import(name="errorOnMissingKeys")
    private @Nullable Output<Boolean> errorOnMissingKeys;

    /**
     * @return Whether to return an error when a key is absent from the KV store and no default is configured. This defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> errorOnMissingKeys() {
        return Optional.ofNullable(this.errorOnMissingKeys);
    }

    /**
     * Specifies a key in Consul to be read. Supported values documented below. Multiple blocks supported.
     * 
     */
    @Import(name="keys")
    private @Nullable Output<List<GetKeysKeyArgs>> keys;

    /**
     * @return Specifies a key in Consul to be read. Supported values documented below. Multiple blocks supported.
     * 
     */
    public Optional<Output<List<GetKeysKeyArgs>>> keys() {
        return Optional.ofNullable(this.keys);
    }

    /**
     * The namespace to lookup the keys.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to lookup the keys.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The partition to lookup the keys.
     * 
     */
    @Import(name="partition")
    private @Nullable Output<String> partition;

    /**
     * @return The partition to lookup the keys.
     * 
     */
    public Optional<Output<String>> partition() {
        return Optional.ofNullable(this.partition);
    }

    /**
     * The ACL token to use. This overrides the token that the agent provides by default.
     * 
     * @deprecated
     * The token argument has been deprecated and will be removed in a future release.
     * Please use the token argument in the provider configuration
     * 
     */
    @Deprecated /* The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The ACL token to use. This overrides the token that the agent provides by default.
     * 
     * @deprecated
     * The token argument has been deprecated and will be removed in a future release.
     * Please use the token argument in the provider configuration
     * 
     */
    @Deprecated /* The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private GetKeysArgs() {}

    private GetKeysArgs(GetKeysArgs $) {
        this.datacenter = $.datacenter;
        this.errorOnMissingKeys = $.errorOnMissingKeys;
        this.keys = $.keys;
        this.namespace = $.namespace;
        this.partition = $.partition;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKeysArgs $;

        public Builder() {
            $ = new GetKeysArgs();
        }

        public Builder(GetKeysArgs defaults) {
            $ = new GetKeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenter The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        /**
         * @param datacenter The datacenter to use. This overrides the agent&#39;s default datacenter and the datacenter in the provider setup.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        /**
         * @param errorOnMissingKeys Whether to return an error when a key is absent from the KV store and no default is configured. This defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder errorOnMissingKeys(@Nullable Output<Boolean> errorOnMissingKeys) {
            $.errorOnMissingKeys = errorOnMissingKeys;
            return this;
        }

        /**
         * @param errorOnMissingKeys Whether to return an error when a key is absent from the KV store and no default is configured. This defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder errorOnMissingKeys(Boolean errorOnMissingKeys) {
            return errorOnMissingKeys(Output.of(errorOnMissingKeys));
        }

        /**
         * @param keys Specifies a key in Consul to be read. Supported values documented below. Multiple blocks supported.
         * 
         * @return builder
         * 
         */
        public Builder keys(@Nullable Output<List<GetKeysKeyArgs>> keys) {
            $.keys = keys;
            return this;
        }

        /**
         * @param keys Specifies a key in Consul to be read. Supported values documented below. Multiple blocks supported.
         * 
         * @return builder
         * 
         */
        public Builder keys(List<GetKeysKeyArgs> keys) {
            return keys(Output.of(keys));
        }

        /**
         * @param keys Specifies a key in Consul to be read. Supported values documented below. Multiple blocks supported.
         * 
         * @return builder
         * 
         */
        public Builder keys(GetKeysKeyArgs... keys) {
            return keys(List.of(keys));
        }

        /**
         * @param namespace The namespace to lookup the keys.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to lookup the keys.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param partition The partition to lookup the keys.
         * 
         * @return builder
         * 
         */
        public Builder partition(@Nullable Output<String> partition) {
            $.partition = partition;
            return this;
        }

        /**
         * @param partition The partition to lookup the keys.
         * 
         * @return builder
         * 
         */
        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        /**
         * @param token The ACL token to use. This overrides the token that the agent provides by default.
         * 
         * @return builder
         * 
         * @deprecated
         * The token argument has been deprecated and will be removed in a future release.
         * Please use the token argument in the provider configuration
         * 
         */
        @Deprecated /* The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The ACL token to use. This overrides the token that the agent provides by default.
         * 
         * @return builder
         * 
         * @deprecated
         * The token argument has been deprecated and will be removed in a future release.
         * Please use the token argument in the provider configuration
         * 
         */
        @Deprecated /* The token argument has been deprecated and will be removed in a future release.
Please use the token argument in the provider configuration */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public GetKeysArgs build() {
            return $;
        }
    }

}
