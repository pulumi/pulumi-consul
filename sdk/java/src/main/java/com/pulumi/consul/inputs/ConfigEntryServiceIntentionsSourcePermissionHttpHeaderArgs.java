// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs Empty = new ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs();

    /**
     * Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
     * 
     */
    @Import(name="exact")
    private @Nullable Output<String> exact;

    /**
     * @return Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
     * 
     */
    public Optional<Output<String>> exact() {
        return Optional.ofNullable(this.exact);
    }

    /**
     * Inverts the matching logic configured in the Header.
     * 
     */
    @Import(name="invert")
    private @Nullable Output<Boolean> invert;

    /**
     * @return Inverts the matching logic configured in the Header.
     * 
     */
    public Optional<Output<Boolean>> invert() {
        return Optional.ofNullable(this.invert);
    }

    /**
     * Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specifies a prefix value for the header key set in the Name field.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Specifies a prefix value for the header key set in the Name field.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
     * 
     */
    @Import(name="present")
    private @Nullable Output<Boolean> present;

    /**
     * @return Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
     * 
     */
    public Optional<Output<Boolean>> present() {
        return Optional.ofNullable(this.present);
    }

    /**
     * Specifies a regular expression pattern as the value for the header key set in the Name field.
     * 
     */
    @Import(name="regex")
    private @Nullable Output<String> regex;

    /**
     * @return Specifies a regular expression pattern as the value for the header key set in the Name field.
     * 
     */
    public Optional<Output<String>> regex() {
        return Optional.ofNullable(this.regex);
    }

    /**
     * Specifies a suffix value for the header key set in the Name field.
     * 
     */
    @Import(name="suffix")
    private @Nullable Output<String> suffix;

    /**
     * @return Specifies a suffix value for the header key set in the Name field.
     * 
     */
    public Optional<Output<String>> suffix() {
        return Optional.ofNullable(this.suffix);
    }

    private ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs() {}

    private ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs $) {
        this.exact = $.exact;
        this.invert = $.invert;
        this.name = $.name;
        this.prefix = $.prefix;
        this.present = $.present;
        this.regex = $.regex;
        this.suffix = $.suffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs $;

        public Builder() {
            $ = new ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs();
        }

        public Builder(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs defaults) {
            $ = new ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exact Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
         * 
         * @return builder
         * 
         */
        public Builder exact(@Nullable Output<String> exact) {
            $.exact = exact;
            return this;
        }

        /**
         * @param exact Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
         * 
         * @return builder
         * 
         */
        public Builder exact(String exact) {
            return exact(Output.of(exact));
        }

        /**
         * @param invert Inverts the matching logic configured in the Header.
         * 
         * @return builder
         * 
         */
        public Builder invert(@Nullable Output<Boolean> invert) {
            $.invert = invert;
            return this;
        }

        /**
         * @param invert Inverts the matching logic configured in the Header.
         * 
         * @return builder
         * 
         */
        public Builder invert(Boolean invert) {
            return invert(Output.of(invert));
        }

        /**
         * @param name Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param prefix Specifies a prefix value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Specifies a prefix value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param present Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
         * 
         * @return builder
         * 
         */
        public Builder present(@Nullable Output<Boolean> present) {
            $.present = present;
            return this;
        }

        /**
         * @param present Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
         * 
         * @return builder
         * 
         */
        public Builder present(Boolean present) {
            return present(Output.of(present));
        }

        /**
         * @param regex Specifies a regular expression pattern as the value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable Output<String> regex) {
            $.regex = regex;
            return this;
        }

        /**
         * @param regex Specifies a regular expression pattern as the value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder regex(String regex) {
            return regex(Output.of(regex));
        }

        /**
         * @param suffix Specifies a suffix value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder suffix(@Nullable Output<String> suffix) {
            $.suffix = suffix;
            return this;
        }

        /**
         * @param suffix Specifies a suffix value for the header key set in the Name field.
         * 
         * @return builder
         * 
         */
        public Builder suffix(String suffix) {
            return suffix(Output.of(suffix));
        }

        public ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
