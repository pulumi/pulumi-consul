// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreparedQueryFailoverArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreparedQueryFailoverArgs Empty = new PreparedQueryFailoverArgs();

    /**
     * Remote datacenters to return results from.
     * 
     */
    @Import(name="datacenters")
    private @Nullable Output<List<String>> datacenters;

    /**
     * @return Remote datacenters to return results from.
     * 
     */
    public Optional<Output<List<String>>> datacenters() {
        return Optional.ofNullable(this.datacenters);
    }

    /**
     * Return results from this many datacenters,
     * sorted in ascending order of estimated RTT.
     * 
     */
    @Import(name="nearestN")
    private @Nullable Output<Integer> nearestN;

    /**
     * @return Return results from this many datacenters,
     * sorted in ascending order of estimated RTT.
     * 
     */
    public Optional<Output<Integer>> nearestN() {
        return Optional.ofNullable(this.nearestN);
    }

    private PreparedQueryFailoverArgs() {}

    private PreparedQueryFailoverArgs(PreparedQueryFailoverArgs $) {
        this.datacenters = $.datacenters;
        this.nearestN = $.nearestN;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreparedQueryFailoverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreparedQueryFailoverArgs $;

        public Builder() {
            $ = new PreparedQueryFailoverArgs();
        }

        public Builder(PreparedQueryFailoverArgs defaults) {
            $ = new PreparedQueryFailoverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenters Remote datacenters to return results from.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(@Nullable Output<List<String>> datacenters) {
            $.datacenters = datacenters;
            return this;
        }

        /**
         * @param datacenters Remote datacenters to return results from.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(List<String> datacenters) {
            return datacenters(Output.of(datacenters));
        }

        /**
         * @param datacenters Remote datacenters to return results from.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(String... datacenters) {
            return datacenters(List.of(datacenters));
        }

        /**
         * @param nearestN Return results from this many datacenters,
         * sorted in ascending order of estimated RTT.
         * 
         * @return builder
         * 
         */
        public Builder nearestN(@Nullable Output<Integer> nearestN) {
            $.nearestN = nearestN;
            return this;
        }

        /**
         * @param nearestN Return results from this many datacenters,
         * sorted in ascending order of estimated RTT.
         * 
         * @return builder
         * 
         */
        public Builder nearestN(Integer nearestN) {
            return nearestN(Output.of(nearestN));
        }

        public PreparedQueryFailoverArgs build() {
            return $;
        }
    }

}
