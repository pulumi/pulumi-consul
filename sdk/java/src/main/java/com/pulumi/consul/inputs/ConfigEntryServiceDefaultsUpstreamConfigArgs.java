// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs;
import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEntryServiceDefaultsUpstreamConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigEntryServiceDefaultsUpstreamConfigArgs Empty = new ConfigEntryServiceDefaultsUpstreamConfigArgs();

    /**
     * Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
     * 
     */
    @Import(name="defaults")
    private @Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs>> defaults;

    /**
     * @return Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs>>> defaults() {
        return Optional.ofNullable(this.defaults);
    }

    /**
     * Specifies options that override the default upstream configurations for individual upstreams.
     * 
     */
    @Import(name="overrides")
    private @Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs>> overrides;

    /**
     * @return Specifies options that override the default upstream configurations for individual upstreams.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs>>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    private ConfigEntryServiceDefaultsUpstreamConfigArgs() {}

    private ConfigEntryServiceDefaultsUpstreamConfigArgs(ConfigEntryServiceDefaultsUpstreamConfigArgs $) {
        this.defaults = $.defaults;
        this.overrides = $.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigEntryServiceDefaultsUpstreamConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigEntryServiceDefaultsUpstreamConfigArgs $;

        public Builder() {
            $ = new ConfigEntryServiceDefaultsUpstreamConfigArgs();
        }

        public Builder(ConfigEntryServiceDefaultsUpstreamConfigArgs defaults) {
            $ = new ConfigEntryServiceDefaultsUpstreamConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaults Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
         * 
         * @return builder
         * 
         */
        public Builder defaults(@Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs>> defaults) {
            $.defaults = defaults;
            return this;
        }

        /**
         * @param defaults Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
         * 
         * @return builder
         * 
         */
        public Builder defaults(List<ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs> defaults) {
            return defaults(Output.of(defaults));
        }

        /**
         * @param defaults Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
         * 
         * @return builder
         * 
         */
        public Builder defaults(ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs... defaults) {
            return defaults(List.of(defaults));
        }

        /**
         * @param overrides Specifies options that override the default upstream configurations for individual upstreams.
         * 
         * @return builder
         * 
         */
        public Builder overrides(@Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs>> overrides) {
            $.overrides = overrides;
            return this;
        }

        /**
         * @param overrides Specifies options that override the default upstream configurations for individual upstreams.
         * 
         * @return builder
         * 
         */
        public Builder overrides(List<ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs> overrides) {
            return overrides(Output.of(overrides));
        }

        /**
         * @param overrides Specifies options that override the default upstream configurations for individual upstreams.
         * 
         * @return builder
         * 
         */
        public Builder overrides(ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs... overrides) {
            return overrides(List.of(overrides));
        }

        public ConfigEntryServiceDefaultsUpstreamConfigArgs build() {
            return $;
        }
    }

}
