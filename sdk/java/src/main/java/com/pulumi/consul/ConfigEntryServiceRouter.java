// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.ConfigEntryServiceRouterArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.ConfigEntryServiceRouterState;
import com.pulumi.consul.outputs.ConfigEntryServiceRouterRoute;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.ConfigEntryServiceDefaults;
 * import com.pulumi.consul.ConfigEntryServiceDefaultsArgs;
 * import com.pulumi.consul.ConfigEntryServiceRouter;
 * import com.pulumi.consul.ConfigEntryServiceRouterArgs;
 * import com.pulumi.consul.inputs.ConfigEntryServiceRouterRouteArgs;
 * import com.pulumi.consul.inputs.ConfigEntryServiceRouterRouteMatchArgs;
 * import com.pulumi.consul.inputs.ConfigEntryServiceRouterRouteMatchHttpArgs;
 * import com.pulumi.consul.inputs.ConfigEntryServiceRouterRouteDestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var adminServiceDefaultsConfigEntryServiceDefaults = new ConfigEntryServiceDefaults(&#34;adminServiceDefaultsConfigEntryServiceDefaults&#34;, ConfigEntryServiceDefaultsArgs.builder()        
 *             .protocol(&#34;http&#34;)
 *             .build());
 * 
 *         var adminServiceDefaultsIndex_configEntryServiceDefaultsConfigEntryServiceDefaults = new ConfigEntryServiceDefaults(&#34;adminServiceDefaultsIndex/configEntryServiceDefaultsConfigEntryServiceDefaults&#34;, ConfigEntryServiceDefaultsArgs.builder()        
 *             .protocol(&#34;http&#34;)
 *             .build());
 * 
 *         var foo = new ConfigEntryServiceRouter(&#34;foo&#34;, ConfigEntryServiceRouterArgs.builder()        
 *             .routes(ConfigEntryServiceRouterRouteArgs.builder()
 *                 .match(ConfigEntryServiceRouterRouteMatchArgs.builder()
 *                     .http(ConfigEntryServiceRouterRouteMatchHttpArgs.builder()
 *                         .pathPrefix(&#34;/admin&#34;)
 *                         .build())
 *                     .build())
 *                 .destination(ConfigEntryServiceRouterRouteDestinationArgs.builder()
 *                     .service(consul_config_entry.admin_service().name())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="consul:index/configEntryServiceRouter:ConfigEntryServiceRouter")
public class ConfigEntryServiceRouter extends com.pulumi.resources.CustomResource {
    /**
     * Specifies key-value pairs to add to the KV store.
     * 
     */
    @Export(name="meta", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> meta;

    /**
     * @return Specifies key-value pairs to add to the KV store.
     * 
     */
    public Output<Optional<Map<String,String>>> meta() {
        return Codegen.optional(this.meta);
    }
    /**
     * Specifies the name of the HTTP header to match.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the HTTP header to match.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the Consul namespace to resolve the service from instead of the current namespace.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return Specifies the Consul namespace to resolve the service from instead of the current namespace.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Specifies the Consul admin partition to resolve the service from instead of the current partition.
     * 
     */
    @Export(name="partition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partition;

    /**
     * @return Specifies the Consul admin partition to resolve the service from instead of the current partition.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * Defines the possible routes for L7 requests.
     * 
     */
    @Export(name="routes", refs={List.class,ConfigEntryServiceRouterRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceRouterRoute>> routes;

    /**
     * @return Defines the possible routes for L7 requests.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceRouterRoute>>> routes() {
        return Codegen.optional(this.routes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigEntryServiceRouter(String name) {
        this(name, ConfigEntryServiceRouterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigEntryServiceRouter(String name, @Nullable ConfigEntryServiceRouterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigEntryServiceRouter(String name, @Nullable ConfigEntryServiceRouterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/configEntryServiceRouter:ConfigEntryServiceRouter", name, args == null ? ConfigEntryServiceRouterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConfigEntryServiceRouter(String name, Output<String> id, @Nullable ConfigEntryServiceRouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/configEntryServiceRouter:ConfigEntryServiceRouter", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigEntryServiceRouter get(String name, Output<String> id, @Nullable ConfigEntryServiceRouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigEntryServiceRouter(name, id, state, options);
    }
}
