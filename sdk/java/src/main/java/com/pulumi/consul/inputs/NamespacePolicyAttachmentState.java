// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespacePolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final NamespacePolicyAttachmentState Empty = new NamespacePolicyAttachmentState();

    /**
     * The namespace to attach the policy to.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to attach the policy to.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The name of the policy attached to the namespace.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The name of the policy attached to the namespace.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    private NamespacePolicyAttachmentState() {}

    private NamespacePolicyAttachmentState(NamespacePolicyAttachmentState $) {
        this.namespace = $.namespace;
        this.policy = $.policy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespacePolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespacePolicyAttachmentState $;

        public Builder() {
            $ = new NamespacePolicyAttachmentState();
        }

        public Builder(NamespacePolicyAttachmentState defaults) {
            $ = new NamespacePolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace The namespace to attach the policy to.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to attach the policy to.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param policy The name of the policy attached to the namespace.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The name of the policy attached to the namespace.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public NamespacePolicyAttachmentState build() {
            return $;
        }
    }

}
