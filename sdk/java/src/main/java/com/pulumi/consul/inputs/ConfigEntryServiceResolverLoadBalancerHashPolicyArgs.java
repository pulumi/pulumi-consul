// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEntryServiceResolverLoadBalancerHashPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigEntryServiceResolverLoadBalancerHashPolicyArgs Empty = new ConfigEntryServiceResolverLoadBalancerHashPolicyArgs();

    /**
     * Specifies additional configuration options for the cookie hash policy type.
     * 
     */
    @Import(name="cookieConfigs")
    private @Nullable Output<List<ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs>> cookieConfigs;

    /**
     * @return Specifies additional configuration options for the cookie hash policy type.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs>>> cookieConfigs() {
        return Optional.ofNullable(this.cookieConfigs);
    }

    /**
     * Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
     * 
     */
    @Import(name="field")
    private @Nullable Output<String> field;

    /**
     * @return Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
     * 
     */
    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    /**
     * Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
     * 
     */
    @Import(name="fieldValue")
    private @Nullable Output<String> fieldValue;

    /**
     * @return Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
     * 
     */
    public Optional<Output<String>> fieldValue() {
        return Optional.ofNullable(this.fieldValue);
    }

    /**
     * Determines if the hash type should be source IP address.
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<Boolean> sourceIp;

    /**
     * @return Determines if the hash type should be source IP address.
     * 
     */
    public Optional<Output<Boolean>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    /**
     * Determines if Consul should stop computing the hash when multiple hash policies are present.
     * 
     */
    @Import(name="terminal")
    private @Nullable Output<Boolean> terminal;

    /**
     * @return Determines if Consul should stop computing the hash when multiple hash policies are present.
     * 
     */
    public Optional<Output<Boolean>> terminal() {
        return Optional.ofNullable(this.terminal);
    }

    private ConfigEntryServiceResolverLoadBalancerHashPolicyArgs() {}

    private ConfigEntryServiceResolverLoadBalancerHashPolicyArgs(ConfigEntryServiceResolverLoadBalancerHashPolicyArgs $) {
        this.cookieConfigs = $.cookieConfigs;
        this.field = $.field;
        this.fieldValue = $.fieldValue;
        this.sourceIp = $.sourceIp;
        this.terminal = $.terminal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigEntryServiceResolverLoadBalancerHashPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigEntryServiceResolverLoadBalancerHashPolicyArgs $;

        public Builder() {
            $ = new ConfigEntryServiceResolverLoadBalancerHashPolicyArgs();
        }

        public Builder(ConfigEntryServiceResolverLoadBalancerHashPolicyArgs defaults) {
            $ = new ConfigEntryServiceResolverLoadBalancerHashPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookieConfigs Specifies additional configuration options for the cookie hash policy type.
         * 
         * @return builder
         * 
         */
        public Builder cookieConfigs(@Nullable Output<List<ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs>> cookieConfigs) {
            $.cookieConfigs = cookieConfigs;
            return this;
        }

        /**
         * @param cookieConfigs Specifies additional configuration options for the cookie hash policy type.
         * 
         * @return builder
         * 
         */
        public Builder cookieConfigs(List<ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs> cookieConfigs) {
            return cookieConfigs(Output.of(cookieConfigs));
        }

        /**
         * @param cookieConfigs Specifies additional configuration options for the cookie hash policy type.
         * 
         * @return builder
         * 
         */
        public Builder cookieConfigs(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs... cookieConfigs) {
            return cookieConfigs(List.of(cookieConfigs));
        }

        /**
         * @param field Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
         * 
         * @return builder
         * 
         */
        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param fieldValue Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
         * 
         * @return builder
         * 
         */
        public Builder fieldValue(@Nullable Output<String> fieldValue) {
            $.fieldValue = fieldValue;
            return this;
        }

        /**
         * @param fieldValue Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
         * 
         * @return builder
         * 
         */
        public Builder fieldValue(String fieldValue) {
            return fieldValue(Output.of(fieldValue));
        }

        /**
         * @param sourceIp Determines if the hash type should be source IP address.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<Boolean> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp Determines if the hash type should be source IP address.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(Boolean sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        /**
         * @param terminal Determines if Consul should stop computing the hash when multiple hash policies are present.
         * 
         * @return builder
         * 
         */
        public Builder terminal(@Nullable Output<Boolean> terminal) {
            $.terminal = terminal;
            return this;
        }

        /**
         * @param terminal Determines if Consul should stop computing the hash when multiple hash policies are present.
         * 
         * @return builder
         * 
         */
        public Builder terminal(Boolean terminal) {
            return terminal(Output.of(terminal));
        }

        public ConfigEntryServiceResolverLoadBalancerHashPolicyArgs build() {
            return $;
        }
    }

}
