// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.GetAclTokenNodeIdentity;
import com.pulumi.consul.outputs.GetAclTokenPolicy;
import com.pulumi.consul.outputs.GetAclTokenRole;
import com.pulumi.consul.outputs.GetAclTokenServiceIdentity;
import com.pulumi.consul.outputs.GetAclTokenTemplatedPolicy;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAclTokenResult {
    /**
     * @return The accessor ID of the ACL token.
     * 
     */
    private String accessorId;
    /**
     * @return The description of the ACL token.
     * 
     */
    private String description;
    /**
     * @return If set this represents the point after which a token should be considered revoked and is eligible for destruction.
     * 
     */
    private String expirationTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether the ACL token is local to the datacenter it was created within.
     * 
     */
    private Boolean local;
    /**
     * @return The namespace to lookup the ACL token.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The list of node identities attached to the token.
     * 
     */
    private List<GetAclTokenNodeIdentity> nodeIdentities;
    /**
     * @return The partition to lookup the ACL token.
     * 
     */
    private @Nullable String partition;
    /**
     * @return A list of policies associated with the ACL token.
     * 
     */
    private List<GetAclTokenPolicy> policies;
    /**
     * @return List of roles linked to the token
     * 
     */
    private List<GetAclTokenRole> roles;
    /**
     * @return The list of service identities attached to the token.
     * 
     */
    private List<GetAclTokenServiceIdentity> serviceIdentities;
    /**
     * @return The list of templated policies that should be applied to the token.
     * 
     */
    private List<GetAclTokenTemplatedPolicy> templatedPolicies;

    private GetAclTokenResult() {}
    /**
     * @return The accessor ID of the ACL token.
     * 
     */
    public String accessorId() {
        return this.accessorId;
    }
    /**
     * @return The description of the ACL token.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return If set this represents the point after which a token should be considered revoked and is eligible for destruction.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the ACL token is local to the datacenter it was created within.
     * 
     */
    public Boolean local() {
        return this.local;
    }
    /**
     * @return The namespace to lookup the ACL token.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The list of node identities attached to the token.
     * 
     */
    public List<GetAclTokenNodeIdentity> nodeIdentities() {
        return this.nodeIdentities;
    }
    /**
     * @return The partition to lookup the ACL token.
     * 
     */
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }
    /**
     * @return A list of policies associated with the ACL token.
     * 
     */
    public List<GetAclTokenPolicy> policies() {
        return this.policies;
    }
    /**
     * @return List of roles linked to the token
     * 
     */
    public List<GetAclTokenRole> roles() {
        return this.roles;
    }
    /**
     * @return The list of service identities attached to the token.
     * 
     */
    public List<GetAclTokenServiceIdentity> serviceIdentities() {
        return this.serviceIdentities;
    }
    /**
     * @return The list of templated policies that should be applied to the token.
     * 
     */
    public List<GetAclTokenTemplatedPolicy> templatedPolicies() {
        return this.templatedPolicies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAclTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessorId;
        private String description;
        private String expirationTime;
        private String id;
        private Boolean local;
        private @Nullable String namespace;
        private List<GetAclTokenNodeIdentity> nodeIdentities;
        private @Nullable String partition;
        private List<GetAclTokenPolicy> policies;
        private List<GetAclTokenRole> roles;
        private List<GetAclTokenServiceIdentity> serviceIdentities;
        private List<GetAclTokenTemplatedPolicy> templatedPolicies;
        public Builder() {}
        public Builder(GetAclTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessorId = defaults.accessorId;
    	      this.description = defaults.description;
    	      this.expirationTime = defaults.expirationTime;
    	      this.id = defaults.id;
    	      this.local = defaults.local;
    	      this.namespace = defaults.namespace;
    	      this.nodeIdentities = defaults.nodeIdentities;
    	      this.partition = defaults.partition;
    	      this.policies = defaults.policies;
    	      this.roles = defaults.roles;
    	      this.serviceIdentities = defaults.serviceIdentities;
    	      this.templatedPolicies = defaults.templatedPolicies;
        }

        @CustomType.Setter
        public Builder accessorId(String accessorId) {
            if (accessorId == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "accessorId");
            }
            this.accessorId = accessorId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(String expirationTime) {
            if (expirationTime == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "expirationTime");
            }
            this.expirationTime = expirationTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder local(Boolean local) {
            if (local == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "local");
            }
            this.local = local;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder nodeIdentities(List<GetAclTokenNodeIdentity> nodeIdentities) {
            if (nodeIdentities == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "nodeIdentities");
            }
            this.nodeIdentities = nodeIdentities;
            return this;
        }
        public Builder nodeIdentities(GetAclTokenNodeIdentity... nodeIdentities) {
            return nodeIdentities(List.of(nodeIdentities));
        }
        @CustomType.Setter
        public Builder partition(@Nullable String partition) {

            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder policies(List<GetAclTokenPolicy> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(GetAclTokenPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder roles(List<GetAclTokenRole> roles) {
            if (roles == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "roles");
            }
            this.roles = roles;
            return this;
        }
        public Builder roles(GetAclTokenRole... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder serviceIdentities(List<GetAclTokenServiceIdentity> serviceIdentities) {
            if (serviceIdentities == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "serviceIdentities");
            }
            this.serviceIdentities = serviceIdentities;
            return this;
        }
        public Builder serviceIdentities(GetAclTokenServiceIdentity... serviceIdentities) {
            return serviceIdentities(List.of(serviceIdentities));
        }
        @CustomType.Setter
        public Builder templatedPolicies(List<GetAclTokenTemplatedPolicy> templatedPolicies) {
            if (templatedPolicies == null) {
              throw new MissingRequiredPropertyException("GetAclTokenResult", "templatedPolicies");
            }
            this.templatedPolicies = templatedPolicies;
            return this;
        }
        public Builder templatedPolicies(GetAclTokenTemplatedPolicy... templatedPolicies) {
            return templatedPolicies(List.of(templatedPolicies));
        }
        public GetAclTokenResult build() {
            final var _resultValue = new GetAclTokenResult();
            _resultValue.accessorId = accessorId;
            _resultValue.description = description;
            _resultValue.expirationTime = expirationTime;
            _resultValue.id = id;
            _resultValue.local = local;
            _resultValue.namespace = namespace;
            _resultValue.nodeIdentities = nodeIdentities;
            _resultValue.partition = partition;
            _resultValue.policies = policies;
            _resultValue.roles = roles;
            _resultValue.serviceIdentities = serviceIdentities;
            _resultValue.templatedPolicies = templatedPolicies;
            return _resultValue;
        }
    }
}
