// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConfigEntryV2ExportedServicesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
     * 
     */
    private String kind;
    /**
     * @return The name of the config entry to read.
     * 
     */
    private String name;
    /**
     * @return The namespace the config entry is associated with.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The partition the config entry is associated with.
     * 
     */
    private @Nullable String partition;
    /**
     * @return The exported service partition consumers.
     * 
     */
    private @Nullable List<String> partitionConsumers;
    /**
     * @return The exported service peer consumers.
     * 
     */
    private @Nullable List<String> peerConsumers;
    /**
     * @return The exported service sameness group consumers.
     * 
     */
    private @Nullable List<String> samenessGroupConsumers;
    /**
     * @return The exported services.
     * 
     */
    private @Nullable List<String> services;

    private GetConfigEntryV2ExportedServicesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of the config entry to read.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The namespace the config entry is associated with.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The partition the config entry is associated with.
     * 
     */
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }
    /**
     * @return The exported service partition consumers.
     * 
     */
    public List<String> partitionConsumers() {
        return this.partitionConsumers == null ? List.of() : this.partitionConsumers;
    }
    /**
     * @return The exported service peer consumers.
     * 
     */
    public List<String> peerConsumers() {
        return this.peerConsumers == null ? List.of() : this.peerConsumers;
    }
    /**
     * @return The exported service sameness group consumers.
     * 
     */
    public List<String> samenessGroupConsumers() {
        return this.samenessGroupConsumers == null ? List.of() : this.samenessGroupConsumers;
    }
    /**
     * @return The exported services.
     * 
     */
    public List<String> services() {
        return this.services == null ? List.of() : this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigEntryV2ExportedServicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String kind;
        private String name;
        private @Nullable String namespace;
        private @Nullable String partition;
        private @Nullable List<String> partitionConsumers;
        private @Nullable List<String> peerConsumers;
        private @Nullable List<String> samenessGroupConsumers;
        private @Nullable List<String> services;
        public Builder() {}
        public Builder(GetConfigEntryV2ExportedServicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.partition = defaults.partition;
    	      this.partitionConsumers = defaults.partitionConsumers;
    	      this.peerConsumers = defaults.peerConsumers;
    	      this.samenessGroupConsumers = defaults.samenessGroupConsumers;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigEntryV2ExportedServicesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetConfigEntryV2ExportedServicesResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetConfigEntryV2ExportedServicesResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder partition(@Nullable String partition) {

            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder partitionConsumers(@Nullable List<String> partitionConsumers) {

            this.partitionConsumers = partitionConsumers;
            return this;
        }
        public Builder partitionConsumers(String... partitionConsumers) {
            return partitionConsumers(List.of(partitionConsumers));
        }
        @CustomType.Setter
        public Builder peerConsumers(@Nullable List<String> peerConsumers) {

            this.peerConsumers = peerConsumers;
            return this;
        }
        public Builder peerConsumers(String... peerConsumers) {
            return peerConsumers(List.of(peerConsumers));
        }
        @CustomType.Setter
        public Builder samenessGroupConsumers(@Nullable List<String> samenessGroupConsumers) {

            this.samenessGroupConsumers = samenessGroupConsumers;
            return this;
        }
        public Builder samenessGroupConsumers(String... samenessGroupConsumers) {
            return samenessGroupConsumers(List.of(samenessGroupConsumers));
        }
        @CustomType.Setter
        public Builder services(@Nullable List<String> services) {

            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        public GetConfigEntryV2ExportedServicesResult build() {
            final var _resultValue = new GetConfigEntryV2ExportedServicesResult();
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.partition = partition;
            _resultValue.partitionConsumers = partitionConsumers;
            _resultValue.peerConsumers = peerConsumers;
            _resultValue.samenessGroupConsumers = samenessGroupConsumers;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
