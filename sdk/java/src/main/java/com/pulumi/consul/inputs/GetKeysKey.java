// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKeysKey extends com.pulumi.resources.InvokeArgs {

    public static final GetKeysKey Empty = new GetKeysKey();

    /**
     * This is the default value to set for `var.&lt;name&gt;`
     * if the key does not exist in Consul. Defaults to an empty string.
     * 
     */
    @Import(name="default")
    private @Nullable String default_;

    /**
     * @return This is the default value to set for `var.&lt;name&gt;`
     * if the key does not exist in Consul. Defaults to an empty string.
     * 
     */
    public Optional<String> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * This is the name of the key. This value of the
     * key is exposed as `var.&lt;name&gt;`. This is not the path of the key
     * in Consul.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return This is the name of the key. This value of the
     * key is exposed as `var.&lt;name&gt;`. This is not the path of the key
     * in Consul.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * This is the path in Consul that should be read
     * or written to.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    /**
     * @return This is the path in Consul that should be read
     * or written to.
     * 
     */
    public String path() {
        return this.path;
    }

    private GetKeysKey() {}

    private GetKeysKey(GetKeysKey $) {
        this.default_ = $.default_;
        this.name = $.name;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKeysKey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKeysKey $;

        public Builder() {
            $ = new GetKeysKey();
        }

        public Builder(GetKeysKey defaults) {
            $ = new GetKeysKey(Objects.requireNonNull(defaults));
        }

        /**
         * @param default_ This is the default value to set for `var.&lt;name&gt;`
         * if the key does not exist in Consul. Defaults to an empty string.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable String default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param name This is the name of the key. This value of the
         * key is exposed as `var.&lt;name&gt;`. This is not the path of the key
         * in Consul.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param path This is the path in Consul that should be read
         * or written to.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public GetKeysKey build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
