// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AclRoleNodeIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclRoleNodeIdentityArgs Empty = new AclRoleNodeIdentityArgs();

    /**
     * Specifies the node&#39;s datacenter.
     * 
     */
    @Import(name="datacenter", required=true)
    private Output<String> datacenter;

    /**
     * @return Specifies the node&#39;s datacenter.
     * 
     */
    public Output<String> datacenter() {
        return this.datacenter;
    }

    /**
     * The name of the node.
     * 
     */
    @Import(name="nodeName", required=true)
    private Output<String> nodeName;

    /**
     * @return The name of the node.
     * 
     */
    public Output<String> nodeName() {
        return this.nodeName;
    }

    private AclRoleNodeIdentityArgs() {}

    private AclRoleNodeIdentityArgs(AclRoleNodeIdentityArgs $) {
        this.datacenter = $.datacenter;
        this.nodeName = $.nodeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRoleNodeIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRoleNodeIdentityArgs $;

        public Builder() {
            $ = new AclRoleNodeIdentityArgs();
        }

        public Builder(AclRoleNodeIdentityArgs defaults) {
            $ = new AclRoleNodeIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenter Specifies the node&#39;s datacenter.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        /**
         * @param datacenter Specifies the node&#39;s datacenter.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        /**
         * @param nodeName The name of the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName The name of the node.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        public AclRoleNodeIdentityArgs build() {
            if ($.datacenter == null) {
                throw new MissingRequiredPropertyException("AclRoleNodeIdentityArgs", "datacenter");
            }
            if ($.nodeName == null) {
                throw new MissingRequiredPropertyException("AclRoleNodeIdentityArgs", "nodeName");
            }
            return $;
        }
    }

}
