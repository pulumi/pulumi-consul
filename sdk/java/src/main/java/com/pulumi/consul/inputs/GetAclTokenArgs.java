// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAclTokenArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAclTokenArgs Empty = new GetAclTokenArgs();

    /**
     * The accessor ID of the ACL token.
     * 
     */
    @Import(name="accessorId", required=true)
    private Output<String> accessorId;

    /**
     * @return The accessor ID of the ACL token.
     * 
     */
    public Output<String> accessorId() {
        return this.accessorId;
    }

    /**
     * The namespace to lookup the ACL token.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The namespace to lookup the ACL token.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The partition to lookup the ACL token.
     * 
     */
    @Import(name="partition")
    private @Nullable Output<String> partition;

    /**
     * @return The partition to lookup the ACL token.
     * 
     */
    public Optional<Output<String>> partition() {
        return Optional.ofNullable(this.partition);
    }

    private GetAclTokenArgs() {}

    private GetAclTokenArgs(GetAclTokenArgs $) {
        this.accessorId = $.accessorId;
        this.namespace = $.namespace;
        this.partition = $.partition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAclTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAclTokenArgs $;

        public Builder() {
            $ = new GetAclTokenArgs();
        }

        public Builder(GetAclTokenArgs defaults) {
            $ = new GetAclTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessorId The accessor ID of the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder accessorId(Output<String> accessorId) {
            $.accessorId = accessorId;
            return this;
        }

        /**
         * @param accessorId The accessor ID of the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder accessorId(String accessorId) {
            return accessorId(Output.of(accessorId));
        }

        /**
         * @param namespace The namespace to lookup the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The namespace to lookup the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param partition The partition to lookup the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder partition(@Nullable Output<String> partition) {
            $.partition = partition;
            return this;
        }

        /**
         * @param partition The partition to lookup the ACL token.
         * 
         * @return builder
         * 
         */
        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        public GetAclTokenArgs build() {
            if ($.accessorId == null) {
                throw new MissingRequiredPropertyException("GetAclTokenArgs", "accessorId");
            }
            return $;
        }
    }

}
