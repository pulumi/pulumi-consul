// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.GetCatalogServiceQueryOptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogServiceArgs Empty = new GetCatalogServiceArgs();

    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    @Import(name="filter")
    private @Nullable Output<String> filter;

    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="queryOptions")
    private @Nullable Output<List<GetCatalogServiceQueryOptionArgs>> queryOptions;

    public Optional<Output<List<GetCatalogServiceQueryOptionArgs>>> queryOptions() {
        return Optional.ofNullable(this.queryOptions);
    }

    @Import(name="tag")
    private @Nullable Output<String> tag;

    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private GetCatalogServiceArgs() {}

    private GetCatalogServiceArgs(GetCatalogServiceArgs $) {
        this.datacenter = $.datacenter;
        this.filter = $.filter;
        this.name = $.name;
        this.queryOptions = $.queryOptions;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogServiceArgs $;

        public Builder() {
            $ = new GetCatalogServiceArgs();
        }

        public Builder(GetCatalogServiceArgs defaults) {
            $ = new GetCatalogServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder queryOptions(@Nullable Output<List<GetCatalogServiceQueryOptionArgs>> queryOptions) {
            $.queryOptions = queryOptions;
            return this;
        }

        public Builder queryOptions(List<GetCatalogServiceQueryOptionArgs> queryOptions) {
            return queryOptions(Output.of(queryOptions));
        }

        public Builder queryOptions(GetCatalogServiceQueryOptionArgs... queryOptions) {
            return queryOptions(List.of(queryOptions));
        }

        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public GetCatalogServiceArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
