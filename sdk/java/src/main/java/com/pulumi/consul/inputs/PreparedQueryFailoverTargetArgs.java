// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreparedQueryFailoverTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreparedQueryFailoverTargetArgs Empty = new PreparedQueryFailoverTargetArgs();

    /**
     * Specifies a WAN federated datacenter to forward the query to.
     * 
     */
    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    /**
     * @return Specifies a WAN federated datacenter to forward the query to.
     * 
     */
    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    /**
     * Specifies a cluster peer to use for failover.
     * 
     */
    @Import(name="peer")
    private @Nullable Output<String> peer;

    /**
     * @return Specifies a cluster peer to use for failover.
     * 
     */
    public Optional<Output<String>> peer() {
        return Optional.ofNullable(this.peer);
    }

    private PreparedQueryFailoverTargetArgs() {}

    private PreparedQueryFailoverTargetArgs(PreparedQueryFailoverTargetArgs $) {
        this.datacenter = $.datacenter;
        this.peer = $.peer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreparedQueryFailoverTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreparedQueryFailoverTargetArgs $;

        public Builder() {
            $ = new PreparedQueryFailoverTargetArgs();
        }

        public Builder(PreparedQueryFailoverTargetArgs defaults) {
            $ = new PreparedQueryFailoverTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenter Specifies a WAN federated datacenter to forward the query to.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        /**
         * @param datacenter Specifies a WAN federated datacenter to forward the query to.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        /**
         * @param peer Specifies a cluster peer to use for failover.
         * 
         * @return builder
         * 
         */
        public Builder peer(@Nullable Output<String> peer) {
            $.peer = peer;
            return this;
        }

        /**
         * @param peer Specifies a cluster peer to use for failover.
         * 
         * @return builder
         * 
         */
        public Builder peer(String peer) {
            return peer(Output.of(peer));
        }

        public PreparedQueryFailoverTargetArgs build() {
            return $;
        }
    }

}
