// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeysKey {
    /**
     * @return This is the default value to set for `var.&lt;name&gt;` if the key does not exist in Consul. Defaults to an empty string.
     * 
     */
    private @Nullable String default_;
    /**
     * @return This is the name of the key. This value of the key is exposed as `var.&lt;name&gt;`. This is not the path of the key in Consul.
     * 
     */
    private String name;
    /**
     * @return This is the path in Consul that should be read or written to.
     * 
     */
    private String path;

    private GetKeysKey() {}
    /**
     * @return This is the default value to set for `var.&lt;name&gt;` if the key does not exist in Consul. Defaults to an empty string.
     * 
     */
    public Optional<String> default_() {
        return Optional.ofNullable(this.default_);
    }
    /**
     * @return This is the name of the key. This value of the key is exposed as `var.&lt;name&gt;`. This is not the path of the key in Consul.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return This is the path in Consul that should be read or written to.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeysKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String default_;
        private String name;
        private String path;
        public Builder() {}
        public Builder(GetKeysKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
        }

        @CustomType.Setter("default")
        public Builder default_(@Nullable String default_) {

            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetKeysKey", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetKeysKey", "path");
            }
            this.path = path;
            return this;
        }
        public GetKeysKey build() {
            final var _resultValue = new GetKeysKey();
            _resultValue.default_ = default_;
            _resultValue.name = name;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
