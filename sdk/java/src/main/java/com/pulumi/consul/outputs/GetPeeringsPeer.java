// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPeeringsPeer {
    private String deletedAt;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    private Map<String,String> meta;
    private String name;
    private String partition;
    private List<String> peerCaPems;
    private String peerId;
    private List<String> peerServerAddresses;
    private String peerServerName;
    private String state;

    private GetPeeringsPeer() {}
    public String deletedAt() {
        return this.deletedAt;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Map<String,String> meta() {
        return this.meta;
    }
    public String name() {
        return this.name;
    }
    public String partition() {
        return this.partition;
    }
    public List<String> peerCaPems() {
        return this.peerCaPems;
    }
    public String peerId() {
        return this.peerId;
    }
    public List<String> peerServerAddresses() {
        return this.peerServerAddresses;
    }
    public String peerServerName() {
        return this.peerServerName;
    }
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeeringsPeer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deletedAt;
        private String id;
        private Map<String,String> meta;
        private String name;
        private String partition;
        private List<String> peerCaPems;
        private String peerId;
        private List<String> peerServerAddresses;
        private String peerServerName;
        private String state;
        public Builder() {}
        public Builder(GetPeeringsPeer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deletedAt = defaults.deletedAt;
    	      this.id = defaults.id;
    	      this.meta = defaults.meta;
    	      this.name = defaults.name;
    	      this.partition = defaults.partition;
    	      this.peerCaPems = defaults.peerCaPems;
    	      this.peerId = defaults.peerId;
    	      this.peerServerAddresses = defaults.peerServerAddresses;
    	      this.peerServerName = defaults.peerServerName;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder deletedAt(String deletedAt) {
            this.deletedAt = Objects.requireNonNull(deletedAt);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder meta(Map<String,String> meta) {
            this.meta = Objects.requireNonNull(meta);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder partition(String partition) {
            this.partition = Objects.requireNonNull(partition);
            return this;
        }
        @CustomType.Setter
        public Builder peerCaPems(List<String> peerCaPems) {
            this.peerCaPems = Objects.requireNonNull(peerCaPems);
            return this;
        }
        public Builder peerCaPems(String... peerCaPems) {
            return peerCaPems(List.of(peerCaPems));
        }
        @CustomType.Setter
        public Builder peerId(String peerId) {
            this.peerId = Objects.requireNonNull(peerId);
            return this;
        }
        @CustomType.Setter
        public Builder peerServerAddresses(List<String> peerServerAddresses) {
            this.peerServerAddresses = Objects.requireNonNull(peerServerAddresses);
            return this;
        }
        public Builder peerServerAddresses(String... peerServerAddresses) {
            return peerServerAddresses(List.of(peerServerAddresses));
        }
        @CustomType.Setter
        public Builder peerServerName(String peerServerName) {
            this.peerServerName = Objects.requireNonNull(peerServerName);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetPeeringsPeer build() {
            final var o = new GetPeeringsPeer();
            o.deletedAt = deletedAt;
            o.id = id;
            o.meta = meta;
            o.name = name;
            o.partition = partition;
            o.peerCaPems = peerCaPems;
            o.peerId = peerId;
            o.peerServerAddresses = peerServerAddresses;
            o.peerServerName = peerServerName;
            o.state = state;
            return o;
        }
    }
}
