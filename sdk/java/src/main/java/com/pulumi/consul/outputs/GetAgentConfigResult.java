// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAgentConfigResult {
    /**
     * @return The datacenter the agent is running in
     * 
     */
    private String datacenter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the node the agent is running on
     * 
     */
    private String nodeId;
    /**
     * @return The name of the node the agent is running on
     * 
     */
    private String nodeName;
    /**
     * @return The first 9 characters of the VCS revision of the build of Consul that is running
     * 
     */
    private String revision;
    /**
     * @return Boolean if the agent is a server or not
     * 
     */
    private Boolean server;
    /**
     * @return The version of the build of Consul that is running
     * 
     */
    private String version;

    private GetAgentConfigResult() {}
    /**
     * @return The datacenter the agent is running in
     * 
     */
    public String datacenter() {
        return this.datacenter;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the node the agent is running on
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return The name of the node the agent is running on
     * 
     */
    public String nodeName() {
        return this.nodeName;
    }
    /**
     * @return The first 9 characters of the VCS revision of the build of Consul that is running
     * 
     */
    public String revision() {
        return this.revision;
    }
    /**
     * @return Boolean if the agent is a server or not
     * 
     */
    public Boolean server() {
        return this.server;
    }
    /**
     * @return The version of the build of Consul that is running
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAgentConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenter;
        private String id;
        private String nodeId;
        private String nodeName;
        private String revision;
        private Boolean server;
        private String version;
        public Builder() {}
        public Builder(GetAgentConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenter = defaults.datacenter;
    	      this.id = defaults.id;
    	      this.nodeId = defaults.nodeId;
    	      this.nodeName = defaults.nodeName;
    	      this.revision = defaults.revision;
    	      this.server = defaults.server;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder datacenter(String datacenter) {
            if (datacenter == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "datacenter");
            }
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            if (nodeId == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "nodeId");
            }
            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeName(String nodeName) {
            if (nodeName == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "nodeName");
            }
            this.nodeName = nodeName;
            return this;
        }
        @CustomType.Setter
        public Builder revision(String revision) {
            if (revision == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "revision");
            }
            this.revision = revision;
            return this;
        }
        @CustomType.Setter
        public Builder server(Boolean server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "server");
            }
            this.server = server;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetAgentConfigResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetAgentConfigResult build() {
            final var _resultValue = new GetAgentConfigResult();
            _resultValue.datacenter = datacenter;
            _resultValue.id = id;
            _resultValue.nodeId = nodeId;
            _resultValue.nodeName = nodeName;
            _resultValue.revision = revision;
            _resultValue.server = server;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
