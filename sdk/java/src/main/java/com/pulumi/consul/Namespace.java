// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.NamespaceArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.NamespaceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **NOTE:** This feature requires Consul Enterprise.
 * 
 * The `consul.Namespace` resource provides isolated [Consul Enterprise Namespaces](https://www.consul.io/docs/enterprise/namespaces/index.html).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.Namespace;
 * import com.pulumi.consul.NamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var production = new Namespace(&#34;production&#34;, NamespaceArgs.builder()        
 *             .name(&#34;production&#34;)
 *             .description(&#34;Production namespace&#34;)
 *             .meta(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * `consul_namespace` can be imported. This is useful to manage attributes of the
 * default namespace that is created automatically:
 * 
 * ```sh
 * $ pulumi import consul:index/namespace:Namespace default default
 * ```
 * 
 */
@ResourceType(type="consul:index/namespace:Namespace")
public class Namespace extends com.pulumi.resources.CustomResource {
    /**
     * Free form namespace description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Free form namespace description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies arbitrary KV metadata to associate with the namespace.
     * 
     */
    @Export(name="meta", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> meta;

    /**
     * @return Specifies arbitrary KV metadata to associate with the namespace.
     * 
     */
    public Output<Optional<Map<String,String>>> meta() {
        return Codegen.optional(this.meta);
    }
    /**
     * The namespace name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The namespace name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The partition to create the namespace within.
     * 
     */
    @Export(name="partition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partition;

    /**
     * @return The partition to create the namespace within.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * The list of default policies that should be applied to all tokens created in this namespace.
     * 
     */
    @Export(name="policyDefaults", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policyDefaults;

    /**
     * @return The list of default policies that should be applied to all tokens created in this namespace.
     * 
     */
    public Output<Optional<List<String>>> policyDefaults() {
        return Codegen.optional(this.policyDefaults);
    }
    /**
     * The list of default roles that should be applied to all tokens created in this namespace.
     * 
     */
    @Export(name="roleDefaults", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> roleDefaults;

    /**
     * @return The list of default roles that should be applied to all tokens created in this namespace.
     * 
     */
    public Output<Optional<List<String>>> roleDefaults() {
        return Codegen.optional(this.roleDefaults);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Namespace(String name) {
        this(name, NamespaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Namespace(String name, @Nullable NamespaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Namespace(String name, @Nullable NamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/namespace:Namespace", name, args == null ? NamespaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Namespace(String name, Output<String> id, @Nullable NamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/namespace:Namespace", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Namespace get(String name, Output<String> id, @Nullable NamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Namespace(name, id, state, options);
    }
}
