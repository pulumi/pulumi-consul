// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.GetServiceHealthResultCheck;
import com.pulumi.consul.outputs.GetServiceHealthResultNode;
import com.pulumi.consul.outputs.GetServiceHealthResultService;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceHealthResult {
    private List<GetServiceHealthResultCheck> checks;
    /**
     * @return The name of the node associated with this health-check.
     * 
     */
    private List<GetServiceHealthResultNode> nodes;
    private List<GetServiceHealthResultService> services;

    private GetServiceHealthResult() {}
    public List<GetServiceHealthResultCheck> checks() {
        return this.checks;
    }
    /**
     * @return The name of the node associated with this health-check.
     * 
     */
    public List<GetServiceHealthResultNode> nodes() {
        return this.nodes;
    }
    public List<GetServiceHealthResultService> services() {
        return this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHealthResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceHealthResultCheck> checks;
        private List<GetServiceHealthResultNode> nodes;
        private List<GetServiceHealthResultService> services;
        public Builder() {}
        public Builder(GetServiceHealthResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checks = defaults.checks;
    	      this.nodes = defaults.nodes;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder checks(List<GetServiceHealthResultCheck> checks) {
            if (checks == null) {
              throw new MissingRequiredPropertyException("GetServiceHealthResult", "checks");
            }
            this.checks = checks;
            return this;
        }
        public Builder checks(GetServiceHealthResultCheck... checks) {
            return checks(List.of(checks));
        }
        @CustomType.Setter
        public Builder nodes(List<GetServiceHealthResultNode> nodes) {
            if (nodes == null) {
              throw new MissingRequiredPropertyException("GetServiceHealthResult", "nodes");
            }
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(GetServiceHealthResultNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder services(List<GetServiceHealthResultService> services) {
            if (services == null) {
              throw new MissingRequiredPropertyException("GetServiceHealthResult", "services");
            }
            this.services = services;
            return this;
        }
        public Builder services(GetServiceHealthResultService... services) {
            return services(List.of(services));
        }
        public GetServiceHealthResult build() {
            final var _resultValue = new GetServiceHealthResult();
            _resultValue.checks = checks;
            _resultValue.nodes = nodes;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
