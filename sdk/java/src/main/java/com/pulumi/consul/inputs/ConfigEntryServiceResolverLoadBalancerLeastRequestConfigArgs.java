// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs Empty = new ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs();

    @Import(name="choiceCount")
    private @Nullable Output<Integer> choiceCount;

    public Optional<Output<Integer>> choiceCount() {
        return Optional.ofNullable(this.choiceCount);
    }

    private ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs() {}

    private ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs $) {
        this.choiceCount = $.choiceCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs $;

        public Builder() {
            $ = new ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs();
        }

        public Builder(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs defaults) {
            $ = new ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder choiceCount(@Nullable Output<Integer> choiceCount) {
            $.choiceCount = choiceCount;
            return this;
        }

        public Builder choiceCount(Integer choiceCount) {
            return choiceCount(Output.of(choiceCount));
        }

        public ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs build() {
            return $;
        }
    }

}
