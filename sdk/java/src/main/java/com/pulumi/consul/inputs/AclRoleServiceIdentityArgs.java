// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclRoleServiceIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclRoleServiceIdentityArgs Empty = new AclRoleServiceIdentityArgs();

    /**
     * The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
     * 
     */
    @Import(name="datacenters")
    private @Nullable Output<List<String>> datacenters;

    /**
     * @return The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
     * 
     */
    public Optional<Output<List<String>>> datacenters() {
        return Optional.ofNullable(this.datacenters);
    }

    /**
     * The name of the service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private AclRoleServiceIdentityArgs() {}

    private AclRoleServiceIdentityArgs(AclRoleServiceIdentityArgs $) {
        this.datacenters = $.datacenters;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRoleServiceIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRoleServiceIdentityArgs $;

        public Builder() {
            $ = new AclRoleServiceIdentityArgs();
        }

        public Builder(AclRoleServiceIdentityArgs defaults) {
            $ = new AclRoleServiceIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenters The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(@Nullable Output<List<String>> datacenters) {
            $.datacenters = datacenters;
            return this;
        }

        /**
         * @param datacenters The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(List<String> datacenters) {
            return datacenters(Output.of(datacenters));
        }

        /**
         * @param datacenters The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(String... datacenters) {
            return datacenters(List.of(datacenters));
        }

        /**
         * @param serviceName The name of the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public AclRoleServiceIdentityArgs build() {
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("AclRoleServiceIdentityArgs", "serviceName");
            }
            return $;
        }
    }

}
