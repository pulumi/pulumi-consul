// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AclRolePolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclRolePolicyAttachmentArgs Empty = new AclRolePolicyAttachmentArgs();

    /**
     * The policy name.
     * 
     */
    @Import(name="policy", required=true)
    private Output<String> policy;

    /**
     * @return The policy name.
     * 
     */
    public Output<String> policy() {
        return this.policy;
    }

    /**
     * The id of the role.
     * 
     */
    @Import(name="roleId", required=true)
    private Output<String> roleId;

    /**
     * @return The id of the role.
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }

    private AclRolePolicyAttachmentArgs() {}

    private AclRolePolicyAttachmentArgs(AclRolePolicyAttachmentArgs $) {
        this.policy = $.policy;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclRolePolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclRolePolicyAttachmentArgs $;

        public Builder() {
            $ = new AclRolePolicyAttachmentArgs();
        }

        public Builder(AclRolePolicyAttachmentArgs defaults) {
            $ = new AclRolePolicyAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy The policy name.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The policy name.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param roleId The id of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The id of the role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public AclRolePolicyAttachmentArgs build() {
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            $.roleId = Objects.requireNonNull($.roleId, "expected parameter 'roleId' to be non-null");
            return $;
        }
    }

}
