// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.AutopilotConfigArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.AutopilotConfigState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides access to the [Autopilot Configuration](https://www.consul.io/docs/guides/autopilot.html)
 * of Consul to automatically manage Consul servers.
 * 
 * It includes to automatically cleanup dead servers, monitor the status of the Raft
 * cluster and stable server introduction.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.consul.AutopilotConfig;
 * import com.pulumi.consul.AutopilotConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var config = new AutopilotConfig(&#34;config&#34;, AutopilotConfigArgs.builder()        
 *             .cleanupDeadServers(false)
 *             .lastContactThreshold(&#34;1s&#34;)
 *             .maxTrailingLogs(500)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="consul:index/autopilotConfig:AutopilotConfig")
public class AutopilotConfig extends com.pulumi.resources.CustomResource {
    /**
     * Whether to remove failing servers when a
     * replacement comes online. Defaults to true.
     * 
     */
    @Export(name="cleanupDeadServers", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cleanupDeadServers;

    /**
     * @return Whether to remove failing servers when a
     * replacement comes online. Defaults to true.
     * 
     */
    public Output<Optional<Boolean>> cleanupDeadServers() {
        return Codegen.optional(this.cleanupDeadServers);
    }
    /**
     * The datacenter to use. This overrides the agent&#39;s
     * default datacenter and the datacenter in the provider setup.
     * 
     */
    @Export(name="datacenter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> datacenter;

    /**
     * @return The datacenter to use. This overrides the agent&#39;s
     * default datacenter and the datacenter in the provider setup.
     * 
     */
    public Output<Optional<String>> datacenter() {
        return Codegen.optional(this.datacenter);
    }
    /**
     * Whether to disable [upgrade migrations](https://www.consul.io/docs/guides/autopilot.html#redundancy-zones).
     * Defaults to false.
     * 
     */
    @Export(name="disableUpgradeMigration", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableUpgradeMigration;

    /**
     * @return Whether to disable [upgrade migrations](https://www.consul.io/docs/guides/autopilot.html#redundancy-zones).
     * Defaults to false.
     * 
     */
    public Output<Optional<Boolean>> disableUpgradeMigration() {
        return Codegen.optional(this.disableUpgradeMigration);
    }
    /**
     * The time after which a server is
     * considered as unhealthy and will be removed. Defaults to `&#34;200ms&#34;`.
     * 
     */
    @Export(name="lastContactThreshold", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lastContactThreshold;

    /**
     * @return The time after which a server is
     * considered as unhealthy and will be removed. Defaults to `&#34;200ms&#34;`.
     * 
     */
    public Output<Optional<String>> lastContactThreshold() {
        return Codegen.optional(this.lastContactThreshold);
    }
    /**
     * The maximum number of Raft log entries a
     * server can trail the leader. Defaults to 250.
     * 
     */
    @Export(name="maxTrailingLogs", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxTrailingLogs;

    /**
     * @return The maximum number of Raft log entries a
     * server can trail the leader. Defaults to 250.
     * 
     */
    public Output<Optional<Integer>> maxTrailingLogs() {
        return Codegen.optional(this.maxTrailingLogs);
    }
    /**
     * The [redundancy zone](https://www.consul.io/docs/guides/autopilot.html#redundancy-zones)
     * tag to use. Consul will try to keep one voting server by zone to take advantage
     * of isolated failure domains. Defaults to an empty string.
     * 
     */
    @Export(name="redundancyZoneTag", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redundancyZoneTag;

    /**
     * @return The [redundancy zone](https://www.consul.io/docs/guides/autopilot.html#redundancy-zones)
     * tag to use. Consul will try to keep one voting server by zone to take advantage
     * of isolated failure domains. Defaults to an empty string.
     * 
     */
    public Output<Optional<String>> redundancyZoneTag() {
        return Codegen.optional(this.redundancyZoneTag);
    }
    /**
     * The period to wait for a server to be
     * healthy and stable before being promoted to a full, voting member. Defaults to
     * `&#34;10s&#34;`.
     * 
     */
    @Export(name="serverStabilizationTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serverStabilizationTime;

    /**
     * @return The period to wait for a server to be
     * healthy and stable before being promoted to a full, voting member. Defaults to
     * `&#34;10s&#34;`.
     * 
     */
    public Output<Optional<String>> serverStabilizationTime() {
        return Codegen.optional(this.serverStabilizationTime);
    }
    /**
     * The tag to override the version information
     * used during a migration. Defaults to an empty string.
     * 
     */
    @Export(name="upgradeVersionTag", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> upgradeVersionTag;

    /**
     * @return The tag to override the version information
     * used during a migration. Defaults to an empty string.
     * 
     */
    public Output<Optional<String>> upgradeVersionTag() {
        return Codegen.optional(this.upgradeVersionTag);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AutopilotConfig(String name) {
        this(name, AutopilotConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AutopilotConfig(String name, @Nullable AutopilotConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AutopilotConfig(String name, @Nullable AutopilotConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/autopilotConfig:AutopilotConfig", name, args == null ? AutopilotConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AutopilotConfig(String name, Output<String> id, @Nullable AutopilotConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/autopilotConfig:AutopilotConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AutopilotConfig get(String name, Output<String> id, @Nullable AutopilotConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AutopilotConfig(name, id, state, options);
    }
}
