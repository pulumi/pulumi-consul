// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclTokenServiceIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclTokenServiceIdentityArgs Empty = new AclTokenServiceIdentityArgs();

    /**
     * Specifies the datacenters the effective policy is valid within.
     * 
     */
    @Import(name="datacenters")
    private @Nullable Output<List<String>> datacenters;

    /**
     * @return Specifies the datacenters the effective policy is valid within.
     * 
     */
    public Optional<Output<List<String>>> datacenters() {
        return Optional.ofNullable(this.datacenters);
    }

    /**
     * The name of the service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private AclTokenServiceIdentityArgs() {}

    private AclTokenServiceIdentityArgs(AclTokenServiceIdentityArgs $) {
        this.datacenters = $.datacenters;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclTokenServiceIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclTokenServiceIdentityArgs $;

        public Builder() {
            $ = new AclTokenServiceIdentityArgs();
        }

        public Builder(AclTokenServiceIdentityArgs defaults) {
            $ = new AclTokenServiceIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(@Nullable Output<List<String>> datacenters) {
            $.datacenters = datacenters;
            return this;
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(List<String> datacenters) {
            return datacenters(Output.of(datacenters));
        }

        /**
         * @param datacenters Specifies the datacenters the effective policy is valid within.
         * 
         * @return builder
         * 
         */
        public Builder datacenters(String... datacenters) {
            return datacenters(List.of(datacenters));
        }

        /**
         * @param serviceName The name of the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public AclTokenServiceIdentityArgs build() {
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("AclTokenServiceIdentityArgs", "serviceName");
            }
            return $;
        }
    }

}
