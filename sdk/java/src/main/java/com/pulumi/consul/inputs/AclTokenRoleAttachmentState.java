// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclTokenRoleAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final AclTokenRoleAttachmentState Empty = new AclTokenRoleAttachmentState();

    /**
     * The role name.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The role name.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * The id of the token.
     * 
     */
    @Import(name="tokenId")
    private @Nullable Output<String> tokenId;

    /**
     * @return The id of the token.
     * 
     */
    public Optional<Output<String>> tokenId() {
        return Optional.ofNullable(this.tokenId);
    }

    private AclTokenRoleAttachmentState() {}

    private AclTokenRoleAttachmentState(AclTokenRoleAttachmentState $) {
        this.role = $.role;
        this.tokenId = $.tokenId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclTokenRoleAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclTokenRoleAttachmentState $;

        public Builder() {
            $ = new AclTokenRoleAttachmentState();
        }

        public Builder(AclTokenRoleAttachmentState defaults) {
            $ = new AclTokenRoleAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param role The role name.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role name.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param tokenId The id of the token.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(@Nullable Output<String> tokenId) {
            $.tokenId = tokenId;
            return this;
        }

        /**
         * @param tokenId The id of the token.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(String tokenId) {
            return tokenId(Output.of(tokenId));
        }

        public AclTokenRoleAttachmentState build() {
            return $;
        }
    }

}
