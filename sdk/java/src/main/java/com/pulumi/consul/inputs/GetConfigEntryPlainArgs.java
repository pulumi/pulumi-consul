// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigEntryPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigEntryPlainArgs Empty = new GetConfigEntryPlainArgs();

    /**
     * The kind of config entry to read.
     * 
     */
    @Import(name="kind", required=true)
    private String kind;

    /**
     * @return The kind of config entry to read.
     * 
     */
    public String kind() {
        return this.kind;
    }

    /**
     * The name of the config entry to read.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the config entry to read.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The namespace the config entry is associated with.
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return The namespace the config entry is associated with.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The partition the config entry is associated with.
     * 
     */
    @Import(name="partition")
    private @Nullable String partition;

    /**
     * @return The partition the config entry is associated with.
     * 
     */
    public Optional<String> partition() {
        return Optional.ofNullable(this.partition);
    }

    private GetConfigEntryPlainArgs() {}

    private GetConfigEntryPlainArgs(GetConfigEntryPlainArgs $) {
        this.kind = $.kind;
        this.name = $.name;
        this.namespace = $.namespace;
        this.partition = $.partition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigEntryPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigEntryPlainArgs $;

        public Builder() {
            $ = new GetConfigEntryPlainArgs();
        }

        public Builder(GetConfigEntryPlainArgs defaults) {
            $ = new GetConfigEntryPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind The kind of config entry to read.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param name The name of the config entry to read.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param namespace The namespace the config entry is associated with.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param partition The partition the config entry is associated with.
         * 
         * @return builder
         * 
         */
        public Builder partition(@Nullable String partition) {
            $.partition = partition;
            return this;
        }

        public GetConfigEntryPlainArgs build() {
            if ($.kind == null) {
                throw new MissingRequiredPropertyException("GetConfigEntryPlainArgs", "kind");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetConfigEntryPlainArgs", "name");
            }
            return $;
        }
    }

}
