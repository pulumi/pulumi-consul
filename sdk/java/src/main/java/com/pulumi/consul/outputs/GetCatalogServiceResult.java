// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.outputs;

import com.pulumi.consul.outputs.GetCatalogServiceQueryOption;
import com.pulumi.consul.outputs.GetCatalogServiceService;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCatalogServiceResult {
    private @Nullable String datacenter;
    private @Nullable String filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private @Nullable List<GetCatalogServiceQueryOption> queryOptions;
    private List<GetCatalogServiceService> services;
    private @Nullable String tag;

    private GetCatalogServiceResult() {}
    public Optional<String> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public List<GetCatalogServiceQueryOption> queryOptions() {
        return this.queryOptions == null ? List.of() : this.queryOptions;
    }
    public List<GetCatalogServiceService> services() {
        return this.services;
    }
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String datacenter;
        private @Nullable String filter;
        private String id;
        private String name;
        private @Nullable List<GetCatalogServiceQueryOption> queryOptions;
        private List<GetCatalogServiceService> services;
        private @Nullable String tag;
        public Builder() {}
        public Builder(GetCatalogServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenter = defaults.datacenter;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.queryOptions = defaults.queryOptions;
    	      this.services = defaults.services;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder datacenter(@Nullable String datacenter) {
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder queryOptions(@Nullable List<GetCatalogServiceQueryOption> queryOptions) {
            this.queryOptions = queryOptions;
            return this;
        }
        public Builder queryOptions(GetCatalogServiceQueryOption... queryOptions) {
            return queryOptions(List.of(queryOptions));
        }
        @CustomType.Setter
        public Builder services(List<GetCatalogServiceService> services) {
            this.services = Objects.requireNonNull(services);
            return this;
        }
        public Builder services(GetCatalogServiceService... services) {
            return services(List.of(services));
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }
        public GetCatalogServiceResult build() {
            final var o = new GetCatalogServiceResult();
            o.datacenter = datacenter;
            o.filter = filter;
            o.id = id;
            o.name = name;
            o.queryOptions = queryOptions;
            o.services = services;
            o.tag = tag;
            return o;
        }
    }
}
