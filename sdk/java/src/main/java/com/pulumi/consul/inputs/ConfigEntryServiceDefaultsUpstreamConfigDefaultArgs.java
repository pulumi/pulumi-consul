// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul.inputs;

import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs;
import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs;
import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs Empty = new ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs();

    /**
     * Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
     * 
     */
    @Import(name="balanceOutboundConnections")
    private @Nullable Output<String> balanceOutboundConnections;

    /**
     * @return Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
     * 
     */
    public Optional<Output<String>> balanceOutboundConnections() {
        return Optional.ofNullable(this.balanceOutboundConnections);
    }

    @Import(name="connectTimeoutMs")
    private @Nullable Output<Integer> connectTimeoutMs;

    public Optional<Output<Integer>> connectTimeoutMs() {
        return Optional.ofNullable(this.connectTimeoutMs);
    }

    /**
     * Map that specifies a set of limits to apply to when connecting upstream services.
     * 
     */
    @Import(name="limits")
    private @Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs>> limits;

    /**
     * @return Map that specifies a set of limits to apply to when connecting upstream services.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs>>> limits() {
        return Optional.ofNullable(this.limits);
    }

    /**
     * Specifies the default mesh gateway mode field for all upstreams.
     * 
     */
    @Import(name="meshGateways")
    private @Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs>> meshGateways;

    /**
     * @return Specifies the default mesh gateway mode field for all upstreams.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs>>> meshGateways() {
        return Optional.ofNullable(this.meshGateways);
    }

    /**
     * Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
     * 
     */
    @Import(name="passiveHealthChecks")
    private @Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs>> passiveHealthChecks;

    /**
     * @return Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
     * 
     */
    public Optional<Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs>>> passiveHealthChecks() {
        return Optional.ofNullable(this.passiveHealthChecks);
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs() {}

    private ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs(ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs $) {
        this.balanceOutboundConnections = $.balanceOutboundConnections;
        this.connectTimeoutMs = $.connectTimeoutMs;
        this.limits = $.limits;
        this.meshGateways = $.meshGateways;
        this.passiveHealthChecks = $.passiveHealthChecks;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs $;

        public Builder() {
            $ = new ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs();
        }

        public Builder(ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs defaults) {
            $ = new ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param balanceOutboundConnections Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
         * 
         * @return builder
         * 
         */
        public Builder balanceOutboundConnections(@Nullable Output<String> balanceOutboundConnections) {
            $.balanceOutboundConnections = balanceOutboundConnections;
            return this;
        }

        /**
         * @param balanceOutboundConnections Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
         * 
         * @return builder
         * 
         */
        public Builder balanceOutboundConnections(String balanceOutboundConnections) {
            return balanceOutboundConnections(Output.of(balanceOutboundConnections));
        }

        public Builder connectTimeoutMs(@Nullable Output<Integer> connectTimeoutMs) {
            $.connectTimeoutMs = connectTimeoutMs;
            return this;
        }

        public Builder connectTimeoutMs(Integer connectTimeoutMs) {
            return connectTimeoutMs(Output.of(connectTimeoutMs));
        }

        /**
         * @param limits Map that specifies a set of limits to apply to when connecting upstream services.
         * 
         * @return builder
         * 
         */
        public Builder limits(@Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs>> limits) {
            $.limits = limits;
            return this;
        }

        /**
         * @param limits Map that specifies a set of limits to apply to when connecting upstream services.
         * 
         * @return builder
         * 
         */
        public Builder limits(List<ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs> limits) {
            return limits(Output.of(limits));
        }

        /**
         * @param limits Map that specifies a set of limits to apply to when connecting upstream services.
         * 
         * @return builder
         * 
         */
        public Builder limits(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs... limits) {
            return limits(List.of(limits));
        }

        /**
         * @param meshGateways Specifies the default mesh gateway mode field for all upstreams.
         * 
         * @return builder
         * 
         */
        public Builder meshGateways(@Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs>> meshGateways) {
            $.meshGateways = meshGateways;
            return this;
        }

        /**
         * @param meshGateways Specifies the default mesh gateway mode field for all upstreams.
         * 
         * @return builder
         * 
         */
        public Builder meshGateways(List<ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs> meshGateways) {
            return meshGateways(Output.of(meshGateways));
        }

        /**
         * @param meshGateways Specifies the default mesh gateway mode field for all upstreams.
         * 
         * @return builder
         * 
         */
        public Builder meshGateways(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs... meshGateways) {
            return meshGateways(List.of(meshGateways));
        }

        /**
         * @param passiveHealthChecks Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
         * 
         * @return builder
         * 
         */
        public Builder passiveHealthChecks(@Nullable Output<List<ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs>> passiveHealthChecks) {
            $.passiveHealthChecks = passiveHealthChecks;
            return this;
        }

        /**
         * @param passiveHealthChecks Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
         * 
         * @return builder
         * 
         */
        public Builder passiveHealthChecks(List<ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs> passiveHealthChecks) {
            return passiveHealthChecks(Output.of(passiveHealthChecks));
        }

        /**
         * @param passiveHealthChecks Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
         * 
         * @return builder
         * 
         */
        public Builder passiveHealthChecks(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs... passiveHealthChecks) {
            return passiveHealthChecks(List.of(passiveHealthChecks));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs build() {
            return $;
        }
    }

}
