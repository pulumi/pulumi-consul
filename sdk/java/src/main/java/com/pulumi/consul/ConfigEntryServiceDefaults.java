// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.consul;

import com.pulumi.consul.ConfigEntryServiceDefaultsArgs;
import com.pulumi.consul.Utilities;
import com.pulumi.consul.inputs.ConfigEntryServiceDefaultsState;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsDestination;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsEnvoyExtension;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsExpose;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsMeshGateway;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsTransparentProxy;
import com.pulumi.consul.outputs.ConfigEntryServiceDefaultsUpstreamConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="consul:index/configEntryServiceDefaults:ConfigEntryServiceDefaults")
public class ConfigEntryServiceDefaults extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the strategy for allocating inbound connections to the service across Envoy proxy threads.
     * 
     */
    @Export(name="balanceInboundConnections", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> balanceInboundConnections;

    /**
     * @return Specifies the strategy for allocating inbound connections to the service across Envoy proxy threads.
     * 
     */
    public Output<Optional<String>> balanceInboundConnections() {
        return Codegen.optional(this.balanceInboundConnections);
    }
    /**
     * Configures the destination for service traffic through terminating gateways.
     * 
     */
    @Export(name="destinations", refs={List.class,ConfigEntryServiceDefaultsDestination.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceDefaultsDestination>> destinations;

    /**
     * @return Configures the destination for service traffic through terminating gateways.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceDefaultsDestination>>> destinations() {
        return Codegen.optional(this.destinations);
    }
    /**
     * List of extensions to modify Envoy proxy configuration.
     * 
     */
    @Export(name="envoyExtensions", refs={List.class,ConfigEntryServiceDefaultsEnvoyExtension.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceDefaultsEnvoyExtension>> envoyExtensions;

    /**
     * @return List of extensions to modify Envoy proxy configuration.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceDefaultsEnvoyExtension>>> envoyExtensions() {
        return Codegen.optional(this.envoyExtensions);
    }
    /**
     * Specifies default configurations for exposing HTTP paths through Envoy.
     * 
     */
    @Export(name="exposes", refs={List.class,ConfigEntryServiceDefaultsExpose.class}, tree="[0,1]")
    private Output<List<ConfigEntryServiceDefaultsExpose>> exposes;

    /**
     * @return Specifies default configurations for exposing HTTP paths through Envoy.
     * 
     */
    public Output<List<ConfigEntryServiceDefaultsExpose>> exposes() {
        return this.exposes;
    }
    /**
     * Specifies the TLS server name indication (SNI) when federating with an external system.
     * 
     */
    @Export(name="externalSni", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalSni;

    /**
     * @return Specifies the TLS server name indication (SNI) when federating with an external system.
     * 
     */
    public Output<Optional<String>> externalSni() {
        return Codegen.optional(this.externalSni);
    }
    /**
     * Specifies the number of milliseconds allowed for establishing connections to the local application instance before timing out.
     * 
     */
    @Export(name="localConnectTimeoutMs", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> localConnectTimeoutMs;

    /**
     * @return Specifies the number of milliseconds allowed for establishing connections to the local application instance before timing out.
     * 
     */
    public Output<Optional<Integer>> localConnectTimeoutMs() {
        return Codegen.optional(this.localConnectTimeoutMs);
    }
    /**
     * Specifies the timeout for HTTP requests to the local application instance.
     * 
     */
    @Export(name="localRequestTimeoutMs", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> localRequestTimeoutMs;

    /**
     * @return Specifies the timeout for HTTP requests to the local application instance.
     * 
     */
    public Output<Optional<Integer>> localRequestTimeoutMs() {
        return Codegen.optional(this.localRequestTimeoutMs);
    }
    /**
     * Specifies the maximum number of concurrent inbound connections to each service instance.
     * 
     */
    @Export(name="maxInboundConnections", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxInboundConnections;

    /**
     * @return Specifies the maximum number of concurrent inbound connections to each service instance.
     * 
     */
    public Output<Optional<Integer>> maxInboundConnections() {
        return Codegen.optional(this.maxInboundConnections);
    }
    /**
     * Specifies the default mesh gateway mode field for the service.
     * 
     */
    @Export(name="meshGateways", refs={List.class,ConfigEntryServiceDefaultsMeshGateway.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceDefaultsMeshGateway>> meshGateways;

    /**
     * @return Specifies the default mesh gateway mode field for the service.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceDefaultsMeshGateway>>> meshGateways() {
        return Codegen.optional(this.meshGateways);
    }
    /**
     * Specifies a set of custom key-value pairs to add to the Consul KV store.
     * 
     */
    @Export(name="meta", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> meta;

    /**
     * @return Specifies a set of custom key-value pairs to add to the Consul KV store.
     * 
     */
    public Output<Optional<Map<String,String>>> meta() {
        return Codegen.optional(this.meta);
    }
    /**
     * Specifies a mode for how the service directs inbound and outbound traffic.
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mode;

    /**
     * @return Specifies a mode for how the service directs inbound and outbound traffic.
     * 
     */
    public Output<Optional<String>> mode() {
        return Codegen.optional(this.mode);
    }
    /**
     * Controls whether mutual TLS is required for incoming connections to this service. This setting is only supported for services with transparent proxy enabled.
     * 
     */
    @Export(name="mutualTlsMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mutualTlsMode;

    /**
     * @return Controls whether mutual TLS is required for incoming connections to this service. This setting is only supported for services with transparent proxy enabled.
     * 
     */
    public Output<Optional<String>> mutualTlsMode() {
        return Codegen.optional(this.mutualTlsMode);
    }
    /**
     * Specifies the name of the service you are setting the defaults for.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the service you are setting the defaults for.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the Consul namespace that the configuration entry applies to.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return Specifies the Consul namespace that the configuration entry applies to.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * Specifies the name of the name of the Consul admin partition that the configuration entry applies to. Refer to Admin Partitions for additional information.
     * 
     */
    @Export(name="partition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partition;

    /**
     * @return Specifies the name of the name of the Consul admin partition that the configuration entry applies to. Refer to Admin Partitions for additional information.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * Specifies the default protocol for the service.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return Specifies the default protocol for the service.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * Controls configurations specific to proxies in transparent mode. Refer to Transparent Proxy Mode for additional information.
     * 
     */
    @Export(name="transparentProxies", refs={List.class,ConfigEntryServiceDefaultsTransparentProxy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceDefaultsTransparentProxy>> transparentProxies;

    /**
     * @return Controls configurations specific to proxies in transparent mode. Refer to Transparent Proxy Mode for additional information.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceDefaultsTransparentProxy>>> transparentProxies() {
        return Codegen.optional(this.transparentProxies);
    }
    /**
     * Controls default upstream connection settings and custom overrides for individual upstream services.
     * 
     */
    @Export(name="upstreamConfigs", refs={List.class,ConfigEntryServiceDefaultsUpstreamConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigEntryServiceDefaultsUpstreamConfig>> upstreamConfigs;

    /**
     * @return Controls default upstream connection settings and custom overrides for individual upstream services.
     * 
     */
    public Output<Optional<List<ConfigEntryServiceDefaultsUpstreamConfig>>> upstreamConfigs() {
        return Codegen.optional(this.upstreamConfigs);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigEntryServiceDefaults(java.lang.String name) {
        this(name, ConfigEntryServiceDefaultsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigEntryServiceDefaults(java.lang.String name, ConfigEntryServiceDefaultsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigEntryServiceDefaults(java.lang.String name, ConfigEntryServiceDefaultsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/configEntryServiceDefaults:ConfigEntryServiceDefaults", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ConfigEntryServiceDefaults(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigEntryServiceDefaultsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("consul:index/configEntryServiceDefaults:ConfigEntryServiceDefaults", name, state, makeResourceOptions(options, id), false);
    }

    private static ConfigEntryServiceDefaultsArgs makeArgs(ConfigEntryServiceDefaultsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConfigEntryServiceDefaultsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigEntryServiceDefaults get(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigEntryServiceDefaultsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigEntryServiceDefaults(name, id, state, options);
    }
}
