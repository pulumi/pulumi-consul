// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AclAuthMethodNamespaceRule struct {
	// If the namespace rule's `selector` matches then this is used to control the namespace where the token is created.
	BindNamespace string `pulumi:"bindNamespace"`
	// Specifies the expression used to match this namespace rule against valid identities returned from an auth method validation.
	Selector *string `pulumi:"selector"`
}

// AclAuthMethodNamespaceRuleInput is an input type that accepts AclAuthMethodNamespaceRuleArgs and AclAuthMethodNamespaceRuleOutput values.
// You can construct a concrete instance of `AclAuthMethodNamespaceRuleInput` via:
//
//	AclAuthMethodNamespaceRuleArgs{...}
type AclAuthMethodNamespaceRuleInput interface {
	pulumi.Input

	ToAclAuthMethodNamespaceRuleOutput() AclAuthMethodNamespaceRuleOutput
	ToAclAuthMethodNamespaceRuleOutputWithContext(context.Context) AclAuthMethodNamespaceRuleOutput
}

type AclAuthMethodNamespaceRuleArgs struct {
	// If the namespace rule's `selector` matches then this is used to control the namespace where the token is created.
	BindNamespace pulumi.StringInput `pulumi:"bindNamespace"`
	// Specifies the expression used to match this namespace rule against valid identities returned from an auth method validation.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
}

func (AclAuthMethodNamespaceRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAuthMethodNamespaceRule)(nil)).Elem()
}

func (i AclAuthMethodNamespaceRuleArgs) ToAclAuthMethodNamespaceRuleOutput() AclAuthMethodNamespaceRuleOutput {
	return i.ToAclAuthMethodNamespaceRuleOutputWithContext(context.Background())
}

func (i AclAuthMethodNamespaceRuleArgs) ToAclAuthMethodNamespaceRuleOutputWithContext(ctx context.Context) AclAuthMethodNamespaceRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAuthMethodNamespaceRuleOutput)
}

// AclAuthMethodNamespaceRuleArrayInput is an input type that accepts AclAuthMethodNamespaceRuleArray and AclAuthMethodNamespaceRuleArrayOutput values.
// You can construct a concrete instance of `AclAuthMethodNamespaceRuleArrayInput` via:
//
//	AclAuthMethodNamespaceRuleArray{ AclAuthMethodNamespaceRuleArgs{...} }
type AclAuthMethodNamespaceRuleArrayInput interface {
	pulumi.Input

	ToAclAuthMethodNamespaceRuleArrayOutput() AclAuthMethodNamespaceRuleArrayOutput
	ToAclAuthMethodNamespaceRuleArrayOutputWithContext(context.Context) AclAuthMethodNamespaceRuleArrayOutput
}

type AclAuthMethodNamespaceRuleArray []AclAuthMethodNamespaceRuleInput

func (AclAuthMethodNamespaceRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAuthMethodNamespaceRule)(nil)).Elem()
}

func (i AclAuthMethodNamespaceRuleArray) ToAclAuthMethodNamespaceRuleArrayOutput() AclAuthMethodNamespaceRuleArrayOutput {
	return i.ToAclAuthMethodNamespaceRuleArrayOutputWithContext(context.Background())
}

func (i AclAuthMethodNamespaceRuleArray) ToAclAuthMethodNamespaceRuleArrayOutputWithContext(ctx context.Context) AclAuthMethodNamespaceRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAuthMethodNamespaceRuleArrayOutput)
}

type AclAuthMethodNamespaceRuleOutput struct{ *pulumi.OutputState }

func (AclAuthMethodNamespaceRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAuthMethodNamespaceRule)(nil)).Elem()
}

func (o AclAuthMethodNamespaceRuleOutput) ToAclAuthMethodNamespaceRuleOutput() AclAuthMethodNamespaceRuleOutput {
	return o
}

func (o AclAuthMethodNamespaceRuleOutput) ToAclAuthMethodNamespaceRuleOutputWithContext(ctx context.Context) AclAuthMethodNamespaceRuleOutput {
	return o
}

// If the namespace rule's `selector` matches then this is used to control the namespace where the token is created.
func (o AclAuthMethodNamespaceRuleOutput) BindNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v AclAuthMethodNamespaceRule) string { return v.BindNamespace }).(pulumi.StringOutput)
}

// Specifies the expression used to match this namespace rule against valid identities returned from an auth method validation.
func (o AclAuthMethodNamespaceRuleOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAuthMethodNamespaceRule) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

type AclAuthMethodNamespaceRuleArrayOutput struct{ *pulumi.OutputState }

func (AclAuthMethodNamespaceRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAuthMethodNamespaceRule)(nil)).Elem()
}

func (o AclAuthMethodNamespaceRuleArrayOutput) ToAclAuthMethodNamespaceRuleArrayOutput() AclAuthMethodNamespaceRuleArrayOutput {
	return o
}

func (o AclAuthMethodNamespaceRuleArrayOutput) ToAclAuthMethodNamespaceRuleArrayOutputWithContext(ctx context.Context) AclAuthMethodNamespaceRuleArrayOutput {
	return o
}

func (o AclAuthMethodNamespaceRuleArrayOutput) Index(i pulumi.IntInput) AclAuthMethodNamespaceRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclAuthMethodNamespaceRule {
		return vs[0].([]AclAuthMethodNamespaceRule)[vs[1].(int)]
	}).(AclAuthMethodNamespaceRuleOutput)
}

type AclBindingRuleBindVars struct {
	// The name of node, workload identity or service.
	Name *string `pulumi:"name"`
}

// AclBindingRuleBindVarsInput is an input type that accepts AclBindingRuleBindVarsArgs and AclBindingRuleBindVarsOutput values.
// You can construct a concrete instance of `AclBindingRuleBindVarsInput` via:
//
//	AclBindingRuleBindVarsArgs{...}
type AclBindingRuleBindVarsInput interface {
	pulumi.Input

	ToAclBindingRuleBindVarsOutput() AclBindingRuleBindVarsOutput
	ToAclBindingRuleBindVarsOutputWithContext(context.Context) AclBindingRuleBindVarsOutput
}

type AclBindingRuleBindVarsArgs struct {
	// The name of node, workload identity or service.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AclBindingRuleBindVarsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclBindingRuleBindVars)(nil)).Elem()
}

func (i AclBindingRuleBindVarsArgs) ToAclBindingRuleBindVarsOutput() AclBindingRuleBindVarsOutput {
	return i.ToAclBindingRuleBindVarsOutputWithContext(context.Background())
}

func (i AclBindingRuleBindVarsArgs) ToAclBindingRuleBindVarsOutputWithContext(ctx context.Context) AclBindingRuleBindVarsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclBindingRuleBindVarsOutput)
}

func (i AclBindingRuleBindVarsArgs) ToAclBindingRuleBindVarsPtrOutput() AclBindingRuleBindVarsPtrOutput {
	return i.ToAclBindingRuleBindVarsPtrOutputWithContext(context.Background())
}

func (i AclBindingRuleBindVarsArgs) ToAclBindingRuleBindVarsPtrOutputWithContext(ctx context.Context) AclBindingRuleBindVarsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclBindingRuleBindVarsOutput).ToAclBindingRuleBindVarsPtrOutputWithContext(ctx)
}

// AclBindingRuleBindVarsPtrInput is an input type that accepts AclBindingRuleBindVarsArgs, AclBindingRuleBindVarsPtr and AclBindingRuleBindVarsPtrOutput values.
// You can construct a concrete instance of `AclBindingRuleBindVarsPtrInput` via:
//
//	        AclBindingRuleBindVarsArgs{...}
//
//	or:
//
//	        nil
type AclBindingRuleBindVarsPtrInput interface {
	pulumi.Input

	ToAclBindingRuleBindVarsPtrOutput() AclBindingRuleBindVarsPtrOutput
	ToAclBindingRuleBindVarsPtrOutputWithContext(context.Context) AclBindingRuleBindVarsPtrOutput
}

type aclBindingRuleBindVarsPtrType AclBindingRuleBindVarsArgs

func AclBindingRuleBindVarsPtr(v *AclBindingRuleBindVarsArgs) AclBindingRuleBindVarsPtrInput {
	return (*aclBindingRuleBindVarsPtrType)(v)
}

func (*aclBindingRuleBindVarsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclBindingRuleBindVars)(nil)).Elem()
}

func (i *aclBindingRuleBindVarsPtrType) ToAclBindingRuleBindVarsPtrOutput() AclBindingRuleBindVarsPtrOutput {
	return i.ToAclBindingRuleBindVarsPtrOutputWithContext(context.Background())
}

func (i *aclBindingRuleBindVarsPtrType) ToAclBindingRuleBindVarsPtrOutputWithContext(ctx context.Context) AclBindingRuleBindVarsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclBindingRuleBindVarsPtrOutput)
}

type AclBindingRuleBindVarsOutput struct{ *pulumi.OutputState }

func (AclBindingRuleBindVarsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclBindingRuleBindVars)(nil)).Elem()
}

func (o AclBindingRuleBindVarsOutput) ToAclBindingRuleBindVarsOutput() AclBindingRuleBindVarsOutput {
	return o
}

func (o AclBindingRuleBindVarsOutput) ToAclBindingRuleBindVarsOutputWithContext(ctx context.Context) AclBindingRuleBindVarsOutput {
	return o
}

func (o AclBindingRuleBindVarsOutput) ToAclBindingRuleBindVarsPtrOutput() AclBindingRuleBindVarsPtrOutput {
	return o.ToAclBindingRuleBindVarsPtrOutputWithContext(context.Background())
}

func (o AclBindingRuleBindVarsOutput) ToAclBindingRuleBindVarsPtrOutputWithContext(ctx context.Context) AclBindingRuleBindVarsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclBindingRuleBindVars) *AclBindingRuleBindVars {
		return &v
	}).(AclBindingRuleBindVarsPtrOutput)
}

// The name of node, workload identity or service.
func (o AclBindingRuleBindVarsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclBindingRuleBindVars) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AclBindingRuleBindVarsPtrOutput struct{ *pulumi.OutputState }

func (AclBindingRuleBindVarsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclBindingRuleBindVars)(nil)).Elem()
}

func (o AclBindingRuleBindVarsPtrOutput) ToAclBindingRuleBindVarsPtrOutput() AclBindingRuleBindVarsPtrOutput {
	return o
}

func (o AclBindingRuleBindVarsPtrOutput) ToAclBindingRuleBindVarsPtrOutputWithContext(ctx context.Context) AclBindingRuleBindVarsPtrOutput {
	return o
}

func (o AclBindingRuleBindVarsPtrOutput) Elem() AclBindingRuleBindVarsOutput {
	return o.ApplyT(func(v *AclBindingRuleBindVars) AclBindingRuleBindVars {
		if v != nil {
			return *v
		}
		var ret AclBindingRuleBindVars
		return ret
	}).(AclBindingRuleBindVarsOutput)
}

// The name of node, workload identity or service.
func (o AclBindingRuleBindVarsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AclBindingRuleBindVars) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type AclRoleNodeIdentity struct {
	// Specifies the node's datacenter.
	Datacenter string `pulumi:"datacenter"`
	// The name of the node.
	NodeName string `pulumi:"nodeName"`
}

// AclRoleNodeIdentityInput is an input type that accepts AclRoleNodeIdentityArgs and AclRoleNodeIdentityOutput values.
// You can construct a concrete instance of `AclRoleNodeIdentityInput` via:
//
//	AclRoleNodeIdentityArgs{...}
type AclRoleNodeIdentityInput interface {
	pulumi.Input

	ToAclRoleNodeIdentityOutput() AclRoleNodeIdentityOutput
	ToAclRoleNodeIdentityOutputWithContext(context.Context) AclRoleNodeIdentityOutput
}

type AclRoleNodeIdentityArgs struct {
	// Specifies the node's datacenter.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The name of the node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (AclRoleNodeIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleNodeIdentity)(nil)).Elem()
}

func (i AclRoleNodeIdentityArgs) ToAclRoleNodeIdentityOutput() AclRoleNodeIdentityOutput {
	return i.ToAclRoleNodeIdentityOutputWithContext(context.Background())
}

func (i AclRoleNodeIdentityArgs) ToAclRoleNodeIdentityOutputWithContext(ctx context.Context) AclRoleNodeIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleNodeIdentityOutput)
}

// AclRoleNodeIdentityArrayInput is an input type that accepts AclRoleNodeIdentityArray and AclRoleNodeIdentityArrayOutput values.
// You can construct a concrete instance of `AclRoleNodeIdentityArrayInput` via:
//
//	AclRoleNodeIdentityArray{ AclRoleNodeIdentityArgs{...} }
type AclRoleNodeIdentityArrayInput interface {
	pulumi.Input

	ToAclRoleNodeIdentityArrayOutput() AclRoleNodeIdentityArrayOutput
	ToAclRoleNodeIdentityArrayOutputWithContext(context.Context) AclRoleNodeIdentityArrayOutput
}

type AclRoleNodeIdentityArray []AclRoleNodeIdentityInput

func (AclRoleNodeIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleNodeIdentity)(nil)).Elem()
}

func (i AclRoleNodeIdentityArray) ToAclRoleNodeIdentityArrayOutput() AclRoleNodeIdentityArrayOutput {
	return i.ToAclRoleNodeIdentityArrayOutputWithContext(context.Background())
}

func (i AclRoleNodeIdentityArray) ToAclRoleNodeIdentityArrayOutputWithContext(ctx context.Context) AclRoleNodeIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleNodeIdentityArrayOutput)
}

type AclRoleNodeIdentityOutput struct{ *pulumi.OutputState }

func (AclRoleNodeIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleNodeIdentity)(nil)).Elem()
}

func (o AclRoleNodeIdentityOutput) ToAclRoleNodeIdentityOutput() AclRoleNodeIdentityOutput {
	return o
}

func (o AclRoleNodeIdentityOutput) ToAclRoleNodeIdentityOutputWithContext(ctx context.Context) AclRoleNodeIdentityOutput {
	return o
}

// Specifies the node's datacenter.
func (o AclRoleNodeIdentityOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v AclRoleNodeIdentity) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The name of the node.
func (o AclRoleNodeIdentityOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v AclRoleNodeIdentity) string { return v.NodeName }).(pulumi.StringOutput)
}

type AclRoleNodeIdentityArrayOutput struct{ *pulumi.OutputState }

func (AclRoleNodeIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleNodeIdentity)(nil)).Elem()
}

func (o AclRoleNodeIdentityArrayOutput) ToAclRoleNodeIdentityArrayOutput() AclRoleNodeIdentityArrayOutput {
	return o
}

func (o AclRoleNodeIdentityArrayOutput) ToAclRoleNodeIdentityArrayOutputWithContext(ctx context.Context) AclRoleNodeIdentityArrayOutput {
	return o
}

func (o AclRoleNodeIdentityArrayOutput) Index(i pulumi.IntInput) AclRoleNodeIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRoleNodeIdentity {
		return vs[0].([]AclRoleNodeIdentity)[vs[1].(int)]
	}).(AclRoleNodeIdentityOutput)
}

type AclRoleServiceIdentity struct {
	// The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// AclRoleServiceIdentityInput is an input type that accepts AclRoleServiceIdentityArgs and AclRoleServiceIdentityOutput values.
// You can construct a concrete instance of `AclRoleServiceIdentityInput` via:
//
//	AclRoleServiceIdentityArgs{...}
type AclRoleServiceIdentityInput interface {
	pulumi.Input

	ToAclRoleServiceIdentityOutput() AclRoleServiceIdentityOutput
	ToAclRoleServiceIdentityOutputWithContext(context.Context) AclRoleServiceIdentityOutput
}

type AclRoleServiceIdentityArgs struct {
	// The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (AclRoleServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleServiceIdentity)(nil)).Elem()
}

func (i AclRoleServiceIdentityArgs) ToAclRoleServiceIdentityOutput() AclRoleServiceIdentityOutput {
	return i.ToAclRoleServiceIdentityOutputWithContext(context.Background())
}

func (i AclRoleServiceIdentityArgs) ToAclRoleServiceIdentityOutputWithContext(ctx context.Context) AclRoleServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleServiceIdentityOutput)
}

// AclRoleServiceIdentityArrayInput is an input type that accepts AclRoleServiceIdentityArray and AclRoleServiceIdentityArrayOutput values.
// You can construct a concrete instance of `AclRoleServiceIdentityArrayInput` via:
//
//	AclRoleServiceIdentityArray{ AclRoleServiceIdentityArgs{...} }
type AclRoleServiceIdentityArrayInput interface {
	pulumi.Input

	ToAclRoleServiceIdentityArrayOutput() AclRoleServiceIdentityArrayOutput
	ToAclRoleServiceIdentityArrayOutputWithContext(context.Context) AclRoleServiceIdentityArrayOutput
}

type AclRoleServiceIdentityArray []AclRoleServiceIdentityInput

func (AclRoleServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleServiceIdentity)(nil)).Elem()
}

func (i AclRoleServiceIdentityArray) ToAclRoleServiceIdentityArrayOutput() AclRoleServiceIdentityArrayOutput {
	return i.ToAclRoleServiceIdentityArrayOutputWithContext(context.Background())
}

func (i AclRoleServiceIdentityArray) ToAclRoleServiceIdentityArrayOutputWithContext(ctx context.Context) AclRoleServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleServiceIdentityArrayOutput)
}

type AclRoleServiceIdentityOutput struct{ *pulumi.OutputState }

func (AclRoleServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleServiceIdentity)(nil)).Elem()
}

func (o AclRoleServiceIdentityOutput) ToAclRoleServiceIdentityOutput() AclRoleServiceIdentityOutput {
	return o
}

func (o AclRoleServiceIdentityOutput) ToAclRoleServiceIdentityOutputWithContext(ctx context.Context) AclRoleServiceIdentityOutput {
	return o
}

// The datacenters the effective policy is valid within. When no datacenters are provided the effective policy is valid in all datacenters including those which do not yet exist but may in the future.
func (o AclRoleServiceIdentityOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclRoleServiceIdentity) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the service.
func (o AclRoleServiceIdentityOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v AclRoleServiceIdentity) string { return v.ServiceName }).(pulumi.StringOutput)
}

type AclRoleServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (AclRoleServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleServiceIdentity)(nil)).Elem()
}

func (o AclRoleServiceIdentityArrayOutput) ToAclRoleServiceIdentityArrayOutput() AclRoleServiceIdentityArrayOutput {
	return o
}

func (o AclRoleServiceIdentityArrayOutput) ToAclRoleServiceIdentityArrayOutputWithContext(ctx context.Context) AclRoleServiceIdentityArrayOutput {
	return o
}

func (o AclRoleServiceIdentityArrayOutput) Index(i pulumi.IntInput) AclRoleServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRoleServiceIdentity {
		return vs[0].([]AclRoleServiceIdentity)[vs[1].(int)]
	}).(AclRoleServiceIdentityOutput)
}

type AclRoleTemplatedPolicy struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName string `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables *AclRoleTemplatedPolicyTemplateVariables `pulumi:"templateVariables"`
}

// AclRoleTemplatedPolicyInput is an input type that accepts AclRoleTemplatedPolicyArgs and AclRoleTemplatedPolicyOutput values.
// You can construct a concrete instance of `AclRoleTemplatedPolicyInput` via:
//
//	AclRoleTemplatedPolicyArgs{...}
type AclRoleTemplatedPolicyInput interface {
	pulumi.Input

	ToAclRoleTemplatedPolicyOutput() AclRoleTemplatedPolicyOutput
	ToAclRoleTemplatedPolicyOutputWithContext(context.Context) AclRoleTemplatedPolicyOutput
}

type AclRoleTemplatedPolicyArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables AclRoleTemplatedPolicyTemplateVariablesPtrInput `pulumi:"templateVariables"`
}

func (AclRoleTemplatedPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleTemplatedPolicy)(nil)).Elem()
}

func (i AclRoleTemplatedPolicyArgs) ToAclRoleTemplatedPolicyOutput() AclRoleTemplatedPolicyOutput {
	return i.ToAclRoleTemplatedPolicyOutputWithContext(context.Background())
}

func (i AclRoleTemplatedPolicyArgs) ToAclRoleTemplatedPolicyOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleTemplatedPolicyOutput)
}

// AclRoleTemplatedPolicyArrayInput is an input type that accepts AclRoleTemplatedPolicyArray and AclRoleTemplatedPolicyArrayOutput values.
// You can construct a concrete instance of `AclRoleTemplatedPolicyArrayInput` via:
//
//	AclRoleTemplatedPolicyArray{ AclRoleTemplatedPolicyArgs{...} }
type AclRoleTemplatedPolicyArrayInput interface {
	pulumi.Input

	ToAclRoleTemplatedPolicyArrayOutput() AclRoleTemplatedPolicyArrayOutput
	ToAclRoleTemplatedPolicyArrayOutputWithContext(context.Context) AclRoleTemplatedPolicyArrayOutput
}

type AclRoleTemplatedPolicyArray []AclRoleTemplatedPolicyInput

func (AclRoleTemplatedPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleTemplatedPolicy)(nil)).Elem()
}

func (i AclRoleTemplatedPolicyArray) ToAclRoleTemplatedPolicyArrayOutput() AclRoleTemplatedPolicyArrayOutput {
	return i.ToAclRoleTemplatedPolicyArrayOutputWithContext(context.Background())
}

func (i AclRoleTemplatedPolicyArray) ToAclRoleTemplatedPolicyArrayOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleTemplatedPolicyArrayOutput)
}

type AclRoleTemplatedPolicyOutput struct{ *pulumi.OutputState }

func (AclRoleTemplatedPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleTemplatedPolicy)(nil)).Elem()
}

func (o AclRoleTemplatedPolicyOutput) ToAclRoleTemplatedPolicyOutput() AclRoleTemplatedPolicyOutput {
	return o
}

func (o AclRoleTemplatedPolicyOutput) ToAclRoleTemplatedPolicyOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o AclRoleTemplatedPolicyOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclRoleTemplatedPolicy) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the templated policies.
func (o AclRoleTemplatedPolicyOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v AclRoleTemplatedPolicy) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The templated policy variables.
func (o AclRoleTemplatedPolicyOutput) TemplateVariables() AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ApplyT(func(v AclRoleTemplatedPolicy) *AclRoleTemplatedPolicyTemplateVariables { return v.TemplateVariables }).(AclRoleTemplatedPolicyTemplateVariablesPtrOutput)
}

type AclRoleTemplatedPolicyArrayOutput struct{ *pulumi.OutputState }

func (AclRoleTemplatedPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRoleTemplatedPolicy)(nil)).Elem()
}

func (o AclRoleTemplatedPolicyArrayOutput) ToAclRoleTemplatedPolicyArrayOutput() AclRoleTemplatedPolicyArrayOutput {
	return o
}

func (o AclRoleTemplatedPolicyArrayOutput) ToAclRoleTemplatedPolicyArrayOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyArrayOutput {
	return o
}

func (o AclRoleTemplatedPolicyArrayOutput) Index(i pulumi.IntInput) AclRoleTemplatedPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRoleTemplatedPolicy {
		return vs[0].([]AclRoleTemplatedPolicy)[vs[1].(int)]
	}).(AclRoleTemplatedPolicyOutput)
}

type AclRoleTemplatedPolicyTemplateVariables struct {
	// The name of node, workload identity or service.
	Name *string `pulumi:"name"`
}

// AclRoleTemplatedPolicyTemplateVariablesInput is an input type that accepts AclRoleTemplatedPolicyTemplateVariablesArgs and AclRoleTemplatedPolicyTemplateVariablesOutput values.
// You can construct a concrete instance of `AclRoleTemplatedPolicyTemplateVariablesInput` via:
//
//	AclRoleTemplatedPolicyTemplateVariablesArgs{...}
type AclRoleTemplatedPolicyTemplateVariablesInput interface {
	pulumi.Input

	ToAclRoleTemplatedPolicyTemplateVariablesOutput() AclRoleTemplatedPolicyTemplateVariablesOutput
	ToAclRoleTemplatedPolicyTemplateVariablesOutputWithContext(context.Context) AclRoleTemplatedPolicyTemplateVariablesOutput
}

type AclRoleTemplatedPolicyTemplateVariablesArgs struct {
	// The name of node, workload identity or service.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AclRoleTemplatedPolicyTemplateVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (i AclRoleTemplatedPolicyTemplateVariablesArgs) ToAclRoleTemplatedPolicyTemplateVariablesOutput() AclRoleTemplatedPolicyTemplateVariablesOutput {
	return i.ToAclRoleTemplatedPolicyTemplateVariablesOutputWithContext(context.Background())
}

func (i AclRoleTemplatedPolicyTemplateVariablesArgs) ToAclRoleTemplatedPolicyTemplateVariablesOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleTemplatedPolicyTemplateVariablesOutput)
}

func (i AclRoleTemplatedPolicyTemplateVariablesArgs) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutput() AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return i.ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (i AclRoleTemplatedPolicyTemplateVariablesArgs) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleTemplatedPolicyTemplateVariablesOutput).ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx)
}

// AclRoleTemplatedPolicyTemplateVariablesPtrInput is an input type that accepts AclRoleTemplatedPolicyTemplateVariablesArgs, AclRoleTemplatedPolicyTemplateVariablesPtr and AclRoleTemplatedPolicyTemplateVariablesPtrOutput values.
// You can construct a concrete instance of `AclRoleTemplatedPolicyTemplateVariablesPtrInput` via:
//
//	        AclRoleTemplatedPolicyTemplateVariablesArgs{...}
//
//	or:
//
//	        nil
type AclRoleTemplatedPolicyTemplateVariablesPtrInput interface {
	pulumi.Input

	ToAclRoleTemplatedPolicyTemplateVariablesPtrOutput() AclRoleTemplatedPolicyTemplateVariablesPtrOutput
	ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Context) AclRoleTemplatedPolicyTemplateVariablesPtrOutput
}

type aclRoleTemplatedPolicyTemplateVariablesPtrType AclRoleTemplatedPolicyTemplateVariablesArgs

func AclRoleTemplatedPolicyTemplateVariablesPtr(v *AclRoleTemplatedPolicyTemplateVariablesArgs) AclRoleTemplatedPolicyTemplateVariablesPtrInput {
	return (*aclRoleTemplatedPolicyTemplateVariablesPtrType)(v)
}

func (*aclRoleTemplatedPolicyTemplateVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRoleTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (i *aclRoleTemplatedPolicyTemplateVariablesPtrType) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutput() AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return i.ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (i *aclRoleTemplatedPolicyTemplateVariablesPtrType) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRoleTemplatedPolicyTemplateVariablesPtrOutput)
}

type AclRoleTemplatedPolicyTemplateVariablesOutput struct{ *pulumi.OutputState }

func (AclRoleTemplatedPolicyTemplateVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRoleTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (o AclRoleTemplatedPolicyTemplateVariablesOutput) ToAclRoleTemplatedPolicyTemplateVariablesOutput() AclRoleTemplatedPolicyTemplateVariablesOutput {
	return o
}

func (o AclRoleTemplatedPolicyTemplateVariablesOutput) ToAclRoleTemplatedPolicyTemplateVariablesOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesOutput {
	return o
}

func (o AclRoleTemplatedPolicyTemplateVariablesOutput) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutput() AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (o AclRoleTemplatedPolicyTemplateVariablesOutput) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclRoleTemplatedPolicyTemplateVariables) *AclRoleTemplatedPolicyTemplateVariables {
		return &v
	}).(AclRoleTemplatedPolicyTemplateVariablesPtrOutput)
}

// The name of node, workload identity or service.
func (o AclRoleTemplatedPolicyTemplateVariablesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRoleTemplatedPolicyTemplateVariables) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AclRoleTemplatedPolicyTemplateVariablesPtrOutput struct{ *pulumi.OutputState }

func (AclRoleTemplatedPolicyTemplateVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRoleTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (o AclRoleTemplatedPolicyTemplateVariablesPtrOutput) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutput() AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return o
}

func (o AclRoleTemplatedPolicyTemplateVariablesPtrOutput) ToAclRoleTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclRoleTemplatedPolicyTemplateVariablesPtrOutput {
	return o
}

func (o AclRoleTemplatedPolicyTemplateVariablesPtrOutput) Elem() AclRoleTemplatedPolicyTemplateVariablesOutput {
	return o.ApplyT(func(v *AclRoleTemplatedPolicyTemplateVariables) AclRoleTemplatedPolicyTemplateVariables {
		if v != nil {
			return *v
		}
		var ret AclRoleTemplatedPolicyTemplateVariables
		return ret
	}).(AclRoleTemplatedPolicyTemplateVariablesOutput)
}

// The name of node, workload identity or service.
func (o AclRoleTemplatedPolicyTemplateVariablesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AclRoleTemplatedPolicyTemplateVariables) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type AclTokenNodeIdentity struct {
	// The datacenter of the node.
	Datacenter string `pulumi:"datacenter"`
	// The name of the node.
	NodeName string `pulumi:"nodeName"`
}

// AclTokenNodeIdentityInput is an input type that accepts AclTokenNodeIdentityArgs and AclTokenNodeIdentityOutput values.
// You can construct a concrete instance of `AclTokenNodeIdentityInput` via:
//
//	AclTokenNodeIdentityArgs{...}
type AclTokenNodeIdentityInput interface {
	pulumi.Input

	ToAclTokenNodeIdentityOutput() AclTokenNodeIdentityOutput
	ToAclTokenNodeIdentityOutputWithContext(context.Context) AclTokenNodeIdentityOutput
}

type AclTokenNodeIdentityArgs struct {
	// The datacenter of the node.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The name of the node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (AclTokenNodeIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenNodeIdentity)(nil)).Elem()
}

func (i AclTokenNodeIdentityArgs) ToAclTokenNodeIdentityOutput() AclTokenNodeIdentityOutput {
	return i.ToAclTokenNodeIdentityOutputWithContext(context.Background())
}

func (i AclTokenNodeIdentityArgs) ToAclTokenNodeIdentityOutputWithContext(ctx context.Context) AclTokenNodeIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenNodeIdentityOutput)
}

// AclTokenNodeIdentityArrayInput is an input type that accepts AclTokenNodeIdentityArray and AclTokenNodeIdentityArrayOutput values.
// You can construct a concrete instance of `AclTokenNodeIdentityArrayInput` via:
//
//	AclTokenNodeIdentityArray{ AclTokenNodeIdentityArgs{...} }
type AclTokenNodeIdentityArrayInput interface {
	pulumi.Input

	ToAclTokenNodeIdentityArrayOutput() AclTokenNodeIdentityArrayOutput
	ToAclTokenNodeIdentityArrayOutputWithContext(context.Context) AclTokenNodeIdentityArrayOutput
}

type AclTokenNodeIdentityArray []AclTokenNodeIdentityInput

func (AclTokenNodeIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenNodeIdentity)(nil)).Elem()
}

func (i AclTokenNodeIdentityArray) ToAclTokenNodeIdentityArrayOutput() AclTokenNodeIdentityArrayOutput {
	return i.ToAclTokenNodeIdentityArrayOutputWithContext(context.Background())
}

func (i AclTokenNodeIdentityArray) ToAclTokenNodeIdentityArrayOutputWithContext(ctx context.Context) AclTokenNodeIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenNodeIdentityArrayOutput)
}

type AclTokenNodeIdentityOutput struct{ *pulumi.OutputState }

func (AclTokenNodeIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenNodeIdentity)(nil)).Elem()
}

func (o AclTokenNodeIdentityOutput) ToAclTokenNodeIdentityOutput() AclTokenNodeIdentityOutput {
	return o
}

func (o AclTokenNodeIdentityOutput) ToAclTokenNodeIdentityOutputWithContext(ctx context.Context) AclTokenNodeIdentityOutput {
	return o
}

// The datacenter of the node.
func (o AclTokenNodeIdentityOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v AclTokenNodeIdentity) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The name of the node.
func (o AclTokenNodeIdentityOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v AclTokenNodeIdentity) string { return v.NodeName }).(pulumi.StringOutput)
}

type AclTokenNodeIdentityArrayOutput struct{ *pulumi.OutputState }

func (AclTokenNodeIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenNodeIdentity)(nil)).Elem()
}

func (o AclTokenNodeIdentityArrayOutput) ToAclTokenNodeIdentityArrayOutput() AclTokenNodeIdentityArrayOutput {
	return o
}

func (o AclTokenNodeIdentityArrayOutput) ToAclTokenNodeIdentityArrayOutputWithContext(ctx context.Context) AclTokenNodeIdentityArrayOutput {
	return o
}

func (o AclTokenNodeIdentityArrayOutput) Index(i pulumi.IntInput) AclTokenNodeIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclTokenNodeIdentity {
		return vs[0].([]AclTokenNodeIdentity)[vs[1].(int)]
	}).(AclTokenNodeIdentityOutput)
}

type AclTokenServiceIdentity struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// AclTokenServiceIdentityInput is an input type that accepts AclTokenServiceIdentityArgs and AclTokenServiceIdentityOutput values.
// You can construct a concrete instance of `AclTokenServiceIdentityInput` via:
//
//	AclTokenServiceIdentityArgs{...}
type AclTokenServiceIdentityInput interface {
	pulumi.Input

	ToAclTokenServiceIdentityOutput() AclTokenServiceIdentityOutput
	ToAclTokenServiceIdentityOutputWithContext(context.Context) AclTokenServiceIdentityOutput
}

type AclTokenServiceIdentityArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (AclTokenServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenServiceIdentity)(nil)).Elem()
}

func (i AclTokenServiceIdentityArgs) ToAclTokenServiceIdentityOutput() AclTokenServiceIdentityOutput {
	return i.ToAclTokenServiceIdentityOutputWithContext(context.Background())
}

func (i AclTokenServiceIdentityArgs) ToAclTokenServiceIdentityOutputWithContext(ctx context.Context) AclTokenServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenServiceIdentityOutput)
}

// AclTokenServiceIdentityArrayInput is an input type that accepts AclTokenServiceIdentityArray and AclTokenServiceIdentityArrayOutput values.
// You can construct a concrete instance of `AclTokenServiceIdentityArrayInput` via:
//
//	AclTokenServiceIdentityArray{ AclTokenServiceIdentityArgs{...} }
type AclTokenServiceIdentityArrayInput interface {
	pulumi.Input

	ToAclTokenServiceIdentityArrayOutput() AclTokenServiceIdentityArrayOutput
	ToAclTokenServiceIdentityArrayOutputWithContext(context.Context) AclTokenServiceIdentityArrayOutput
}

type AclTokenServiceIdentityArray []AclTokenServiceIdentityInput

func (AclTokenServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenServiceIdentity)(nil)).Elem()
}

func (i AclTokenServiceIdentityArray) ToAclTokenServiceIdentityArrayOutput() AclTokenServiceIdentityArrayOutput {
	return i.ToAclTokenServiceIdentityArrayOutputWithContext(context.Background())
}

func (i AclTokenServiceIdentityArray) ToAclTokenServiceIdentityArrayOutputWithContext(ctx context.Context) AclTokenServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenServiceIdentityArrayOutput)
}

type AclTokenServiceIdentityOutput struct{ *pulumi.OutputState }

func (AclTokenServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenServiceIdentity)(nil)).Elem()
}

func (o AclTokenServiceIdentityOutput) ToAclTokenServiceIdentityOutput() AclTokenServiceIdentityOutput {
	return o
}

func (o AclTokenServiceIdentityOutput) ToAclTokenServiceIdentityOutputWithContext(ctx context.Context) AclTokenServiceIdentityOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o AclTokenServiceIdentityOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclTokenServiceIdentity) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the service.
func (o AclTokenServiceIdentityOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v AclTokenServiceIdentity) string { return v.ServiceName }).(pulumi.StringOutput)
}

type AclTokenServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (AclTokenServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenServiceIdentity)(nil)).Elem()
}

func (o AclTokenServiceIdentityArrayOutput) ToAclTokenServiceIdentityArrayOutput() AclTokenServiceIdentityArrayOutput {
	return o
}

func (o AclTokenServiceIdentityArrayOutput) ToAclTokenServiceIdentityArrayOutputWithContext(ctx context.Context) AclTokenServiceIdentityArrayOutput {
	return o
}

func (o AclTokenServiceIdentityArrayOutput) Index(i pulumi.IntInput) AclTokenServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclTokenServiceIdentity {
		return vs[0].([]AclTokenServiceIdentity)[vs[1].(int)]
	}).(AclTokenServiceIdentityOutput)
}

type AclTokenTemplatedPolicy struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName string `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables *AclTokenTemplatedPolicyTemplateVariables `pulumi:"templateVariables"`
}

// AclTokenTemplatedPolicyInput is an input type that accepts AclTokenTemplatedPolicyArgs and AclTokenTemplatedPolicyOutput values.
// You can construct a concrete instance of `AclTokenTemplatedPolicyInput` via:
//
//	AclTokenTemplatedPolicyArgs{...}
type AclTokenTemplatedPolicyInput interface {
	pulumi.Input

	ToAclTokenTemplatedPolicyOutput() AclTokenTemplatedPolicyOutput
	ToAclTokenTemplatedPolicyOutputWithContext(context.Context) AclTokenTemplatedPolicyOutput
}

type AclTokenTemplatedPolicyArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables AclTokenTemplatedPolicyTemplateVariablesPtrInput `pulumi:"templateVariables"`
}

func (AclTokenTemplatedPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenTemplatedPolicy)(nil)).Elem()
}

func (i AclTokenTemplatedPolicyArgs) ToAclTokenTemplatedPolicyOutput() AclTokenTemplatedPolicyOutput {
	return i.ToAclTokenTemplatedPolicyOutputWithContext(context.Background())
}

func (i AclTokenTemplatedPolicyArgs) ToAclTokenTemplatedPolicyOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenTemplatedPolicyOutput)
}

// AclTokenTemplatedPolicyArrayInput is an input type that accepts AclTokenTemplatedPolicyArray and AclTokenTemplatedPolicyArrayOutput values.
// You can construct a concrete instance of `AclTokenTemplatedPolicyArrayInput` via:
//
//	AclTokenTemplatedPolicyArray{ AclTokenTemplatedPolicyArgs{...} }
type AclTokenTemplatedPolicyArrayInput interface {
	pulumi.Input

	ToAclTokenTemplatedPolicyArrayOutput() AclTokenTemplatedPolicyArrayOutput
	ToAclTokenTemplatedPolicyArrayOutputWithContext(context.Context) AclTokenTemplatedPolicyArrayOutput
}

type AclTokenTemplatedPolicyArray []AclTokenTemplatedPolicyInput

func (AclTokenTemplatedPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenTemplatedPolicy)(nil)).Elem()
}

func (i AclTokenTemplatedPolicyArray) ToAclTokenTemplatedPolicyArrayOutput() AclTokenTemplatedPolicyArrayOutput {
	return i.ToAclTokenTemplatedPolicyArrayOutputWithContext(context.Background())
}

func (i AclTokenTemplatedPolicyArray) ToAclTokenTemplatedPolicyArrayOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenTemplatedPolicyArrayOutput)
}

type AclTokenTemplatedPolicyOutput struct{ *pulumi.OutputState }

func (AclTokenTemplatedPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenTemplatedPolicy)(nil)).Elem()
}

func (o AclTokenTemplatedPolicyOutput) ToAclTokenTemplatedPolicyOutput() AclTokenTemplatedPolicyOutput {
	return o
}

func (o AclTokenTemplatedPolicyOutput) ToAclTokenTemplatedPolicyOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o AclTokenTemplatedPolicyOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclTokenTemplatedPolicy) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the templated policies.
func (o AclTokenTemplatedPolicyOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v AclTokenTemplatedPolicy) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The templated policy variables.
func (o AclTokenTemplatedPolicyOutput) TemplateVariables() AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ApplyT(func(v AclTokenTemplatedPolicy) *AclTokenTemplatedPolicyTemplateVariables { return v.TemplateVariables }).(AclTokenTemplatedPolicyTemplateVariablesPtrOutput)
}

type AclTokenTemplatedPolicyArrayOutput struct{ *pulumi.OutputState }

func (AclTokenTemplatedPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclTokenTemplatedPolicy)(nil)).Elem()
}

func (o AclTokenTemplatedPolicyArrayOutput) ToAclTokenTemplatedPolicyArrayOutput() AclTokenTemplatedPolicyArrayOutput {
	return o
}

func (o AclTokenTemplatedPolicyArrayOutput) ToAclTokenTemplatedPolicyArrayOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyArrayOutput {
	return o
}

func (o AclTokenTemplatedPolicyArrayOutput) Index(i pulumi.IntInput) AclTokenTemplatedPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclTokenTemplatedPolicy {
		return vs[0].([]AclTokenTemplatedPolicy)[vs[1].(int)]
	}).(AclTokenTemplatedPolicyOutput)
}

type AclTokenTemplatedPolicyTemplateVariables struct {
	// The name of node, workload identity or service.
	Name *string `pulumi:"name"`
}

// AclTokenTemplatedPolicyTemplateVariablesInput is an input type that accepts AclTokenTemplatedPolicyTemplateVariablesArgs and AclTokenTemplatedPolicyTemplateVariablesOutput values.
// You can construct a concrete instance of `AclTokenTemplatedPolicyTemplateVariablesInput` via:
//
//	AclTokenTemplatedPolicyTemplateVariablesArgs{...}
type AclTokenTemplatedPolicyTemplateVariablesInput interface {
	pulumi.Input

	ToAclTokenTemplatedPolicyTemplateVariablesOutput() AclTokenTemplatedPolicyTemplateVariablesOutput
	ToAclTokenTemplatedPolicyTemplateVariablesOutputWithContext(context.Context) AclTokenTemplatedPolicyTemplateVariablesOutput
}

type AclTokenTemplatedPolicyTemplateVariablesArgs struct {
	// The name of node, workload identity or service.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AclTokenTemplatedPolicyTemplateVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (i AclTokenTemplatedPolicyTemplateVariablesArgs) ToAclTokenTemplatedPolicyTemplateVariablesOutput() AclTokenTemplatedPolicyTemplateVariablesOutput {
	return i.ToAclTokenTemplatedPolicyTemplateVariablesOutputWithContext(context.Background())
}

func (i AclTokenTemplatedPolicyTemplateVariablesArgs) ToAclTokenTemplatedPolicyTemplateVariablesOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenTemplatedPolicyTemplateVariablesOutput)
}

func (i AclTokenTemplatedPolicyTemplateVariablesArgs) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutput() AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return i.ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (i AclTokenTemplatedPolicyTemplateVariablesArgs) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenTemplatedPolicyTemplateVariablesOutput).ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx)
}

// AclTokenTemplatedPolicyTemplateVariablesPtrInput is an input type that accepts AclTokenTemplatedPolicyTemplateVariablesArgs, AclTokenTemplatedPolicyTemplateVariablesPtr and AclTokenTemplatedPolicyTemplateVariablesPtrOutput values.
// You can construct a concrete instance of `AclTokenTemplatedPolicyTemplateVariablesPtrInput` via:
//
//	        AclTokenTemplatedPolicyTemplateVariablesArgs{...}
//
//	or:
//
//	        nil
type AclTokenTemplatedPolicyTemplateVariablesPtrInput interface {
	pulumi.Input

	ToAclTokenTemplatedPolicyTemplateVariablesPtrOutput() AclTokenTemplatedPolicyTemplateVariablesPtrOutput
	ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Context) AclTokenTemplatedPolicyTemplateVariablesPtrOutput
}

type aclTokenTemplatedPolicyTemplateVariablesPtrType AclTokenTemplatedPolicyTemplateVariablesArgs

func AclTokenTemplatedPolicyTemplateVariablesPtr(v *AclTokenTemplatedPolicyTemplateVariablesArgs) AclTokenTemplatedPolicyTemplateVariablesPtrInput {
	return (*aclTokenTemplatedPolicyTemplateVariablesPtrType)(v)
}

func (*aclTokenTemplatedPolicyTemplateVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclTokenTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (i *aclTokenTemplatedPolicyTemplateVariablesPtrType) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutput() AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return i.ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (i *aclTokenTemplatedPolicyTemplateVariablesPtrType) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenTemplatedPolicyTemplateVariablesPtrOutput)
}

type AclTokenTemplatedPolicyTemplateVariablesOutput struct{ *pulumi.OutputState }

func (AclTokenTemplatedPolicyTemplateVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclTokenTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (o AclTokenTemplatedPolicyTemplateVariablesOutput) ToAclTokenTemplatedPolicyTemplateVariablesOutput() AclTokenTemplatedPolicyTemplateVariablesOutput {
	return o
}

func (o AclTokenTemplatedPolicyTemplateVariablesOutput) ToAclTokenTemplatedPolicyTemplateVariablesOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesOutput {
	return o
}

func (o AclTokenTemplatedPolicyTemplateVariablesOutput) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutput() AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(context.Background())
}

func (o AclTokenTemplatedPolicyTemplateVariablesOutput) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclTokenTemplatedPolicyTemplateVariables) *AclTokenTemplatedPolicyTemplateVariables {
		return &v
	}).(AclTokenTemplatedPolicyTemplateVariablesPtrOutput)
}

// The name of node, workload identity or service.
func (o AclTokenTemplatedPolicyTemplateVariablesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclTokenTemplatedPolicyTemplateVariables) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AclTokenTemplatedPolicyTemplateVariablesPtrOutput struct{ *pulumi.OutputState }

func (AclTokenTemplatedPolicyTemplateVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclTokenTemplatedPolicyTemplateVariables)(nil)).Elem()
}

func (o AclTokenTemplatedPolicyTemplateVariablesPtrOutput) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutput() AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return o
}

func (o AclTokenTemplatedPolicyTemplateVariablesPtrOutput) ToAclTokenTemplatedPolicyTemplateVariablesPtrOutputWithContext(ctx context.Context) AclTokenTemplatedPolicyTemplateVariablesPtrOutput {
	return o
}

func (o AclTokenTemplatedPolicyTemplateVariablesPtrOutput) Elem() AclTokenTemplatedPolicyTemplateVariablesOutput {
	return o.ApplyT(func(v *AclTokenTemplatedPolicyTemplateVariables) AclTokenTemplatedPolicyTemplateVariables {
		if v != nil {
			return *v
		}
		var ret AclTokenTemplatedPolicyTemplateVariables
		return ret
	}).(AclTokenTemplatedPolicyTemplateVariablesOutput)
}

// The name of node, workload identity or service.
func (o AclTokenTemplatedPolicyTemplateVariablesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AclTokenTemplatedPolicyTemplateVariables) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type CatalogEntryService struct {
	// The address of the service. Defaults to the
	// node address.
	Address *string `pulumi:"address"`
	// The ID of the service. Defaults to the `name`.
	Id *string `pulumi:"id"`
	// The name of the service
	Name string `pulumi:"name"`
	// The port of the service.
	Port *int `pulumi:"port"`
	// A list of values that are opaque to Consul,
	// but can be used to distinguish between services or nodes.
	Tags []string `pulumi:"tags"`
}

// CatalogEntryServiceInput is an input type that accepts CatalogEntryServiceArgs and CatalogEntryServiceOutput values.
// You can construct a concrete instance of `CatalogEntryServiceInput` via:
//
//	CatalogEntryServiceArgs{...}
type CatalogEntryServiceInput interface {
	pulumi.Input

	ToCatalogEntryServiceOutput() CatalogEntryServiceOutput
	ToCatalogEntryServiceOutputWithContext(context.Context) CatalogEntryServiceOutput
}

type CatalogEntryServiceArgs struct {
	// The address of the service. Defaults to the
	// node address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the service. Defaults to the `name`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the service
	Name pulumi.StringInput `pulumi:"name"`
	// The port of the service.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// A list of values that are opaque to Consul,
	// but can be used to distinguish between services or nodes.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (CatalogEntryServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntryService)(nil)).Elem()
}

func (i CatalogEntryServiceArgs) ToCatalogEntryServiceOutput() CatalogEntryServiceOutput {
	return i.ToCatalogEntryServiceOutputWithContext(context.Background())
}

func (i CatalogEntryServiceArgs) ToCatalogEntryServiceOutputWithContext(ctx context.Context) CatalogEntryServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntryServiceOutput)
}

// CatalogEntryServiceArrayInput is an input type that accepts CatalogEntryServiceArray and CatalogEntryServiceArrayOutput values.
// You can construct a concrete instance of `CatalogEntryServiceArrayInput` via:
//
//	CatalogEntryServiceArray{ CatalogEntryServiceArgs{...} }
type CatalogEntryServiceArrayInput interface {
	pulumi.Input

	ToCatalogEntryServiceArrayOutput() CatalogEntryServiceArrayOutput
	ToCatalogEntryServiceArrayOutputWithContext(context.Context) CatalogEntryServiceArrayOutput
}

type CatalogEntryServiceArray []CatalogEntryServiceInput

func (CatalogEntryServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogEntryService)(nil)).Elem()
}

func (i CatalogEntryServiceArray) ToCatalogEntryServiceArrayOutput() CatalogEntryServiceArrayOutput {
	return i.ToCatalogEntryServiceArrayOutputWithContext(context.Background())
}

func (i CatalogEntryServiceArray) ToCatalogEntryServiceArrayOutputWithContext(ctx context.Context) CatalogEntryServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntryServiceArrayOutput)
}

type CatalogEntryServiceOutput struct{ *pulumi.OutputState }

func (CatalogEntryServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntryService)(nil)).Elem()
}

func (o CatalogEntryServiceOutput) ToCatalogEntryServiceOutput() CatalogEntryServiceOutput {
	return o
}

func (o CatalogEntryServiceOutput) ToCatalogEntryServiceOutputWithContext(ctx context.Context) CatalogEntryServiceOutput {
	return o
}

// The address of the service. Defaults to the
// node address.
func (o CatalogEntryServiceOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogEntryService) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the service. Defaults to the `name`.
func (o CatalogEntryServiceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogEntryService) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the service
func (o CatalogEntryServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogEntryService) string { return v.Name }).(pulumi.StringOutput)
}

// The port of the service.
func (o CatalogEntryServiceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CatalogEntryService) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A list of values that are opaque to Consul,
// but can be used to distinguish between services or nodes.
func (o CatalogEntryServiceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CatalogEntryService) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type CatalogEntryServiceArrayOutput struct{ *pulumi.OutputState }

func (CatalogEntryServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogEntryService)(nil)).Elem()
}

func (o CatalogEntryServiceArrayOutput) ToCatalogEntryServiceArrayOutput() CatalogEntryServiceArrayOutput {
	return o
}

func (o CatalogEntryServiceArrayOutput) ToCatalogEntryServiceArrayOutputWithContext(ctx context.Context) CatalogEntryServiceArrayOutput {
	return o
}

func (o CatalogEntryServiceArrayOutput) Index(i pulumi.IntInput) CatalogEntryServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogEntryService {
		return vs[0].([]CatalogEntryService)[vs[1].(int)]
	}).(CatalogEntryServiceOutput)
}

type ConfigEntryServiceDefaultsDestination struct {
	Addresses []string `pulumi:"addresses"`
	Port      int      `pulumi:"port"`
}

// ConfigEntryServiceDefaultsDestinationInput is an input type that accepts ConfigEntryServiceDefaultsDestinationArgs and ConfigEntryServiceDefaultsDestinationOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsDestinationInput` via:
//
//	ConfigEntryServiceDefaultsDestinationArgs{...}
type ConfigEntryServiceDefaultsDestinationInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsDestinationOutput() ConfigEntryServiceDefaultsDestinationOutput
	ToConfigEntryServiceDefaultsDestinationOutputWithContext(context.Context) ConfigEntryServiceDefaultsDestinationOutput
}

type ConfigEntryServiceDefaultsDestinationArgs struct {
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	Port      pulumi.IntInput         `pulumi:"port"`
}

func (ConfigEntryServiceDefaultsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsDestination)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsDestinationArgs) ToConfigEntryServiceDefaultsDestinationOutput() ConfigEntryServiceDefaultsDestinationOutput {
	return i.ToConfigEntryServiceDefaultsDestinationOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsDestinationArgs) ToConfigEntryServiceDefaultsDestinationOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsDestinationOutput)
}

// ConfigEntryServiceDefaultsDestinationArrayInput is an input type that accepts ConfigEntryServiceDefaultsDestinationArray and ConfigEntryServiceDefaultsDestinationArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsDestinationArrayInput` via:
//
//	ConfigEntryServiceDefaultsDestinationArray{ ConfigEntryServiceDefaultsDestinationArgs{...} }
type ConfigEntryServiceDefaultsDestinationArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsDestinationArrayOutput() ConfigEntryServiceDefaultsDestinationArrayOutput
	ToConfigEntryServiceDefaultsDestinationArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsDestinationArrayOutput
}

type ConfigEntryServiceDefaultsDestinationArray []ConfigEntryServiceDefaultsDestinationInput

func (ConfigEntryServiceDefaultsDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsDestination)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsDestinationArray) ToConfigEntryServiceDefaultsDestinationArrayOutput() ConfigEntryServiceDefaultsDestinationArrayOutput {
	return i.ToConfigEntryServiceDefaultsDestinationArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsDestinationArray) ToConfigEntryServiceDefaultsDestinationArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsDestinationArrayOutput)
}

type ConfigEntryServiceDefaultsDestinationOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsDestination)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsDestinationOutput) ToConfigEntryServiceDefaultsDestinationOutput() ConfigEntryServiceDefaultsDestinationOutput {
	return o
}

func (o ConfigEntryServiceDefaultsDestinationOutput) ToConfigEntryServiceDefaultsDestinationOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsDestinationOutput {
	return o
}

func (o ConfigEntryServiceDefaultsDestinationOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsDestination) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

func (o ConfigEntryServiceDefaultsDestinationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsDestination) int { return v.Port }).(pulumi.IntOutput)
}

type ConfigEntryServiceDefaultsDestinationArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsDestination)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsDestinationArrayOutput) ToConfigEntryServiceDefaultsDestinationArrayOutput() ConfigEntryServiceDefaultsDestinationArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsDestinationArrayOutput) ToConfigEntryServiceDefaultsDestinationArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsDestinationArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsDestinationArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsDestination {
		return vs[0].([]ConfigEntryServiceDefaultsDestination)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsDestinationOutput)
}

type ConfigEntryServiceDefaultsEnvoyExtension struct {
	Arguments     map[string]string `pulumi:"arguments"`
	ConsulVersion *string           `pulumi:"consulVersion"`
	EnvoyVersion  *string           `pulumi:"envoyVersion"`
	Name          *string           `pulumi:"name"`
	Required      *bool             `pulumi:"required"`
}

// ConfigEntryServiceDefaultsEnvoyExtensionInput is an input type that accepts ConfigEntryServiceDefaultsEnvoyExtensionArgs and ConfigEntryServiceDefaultsEnvoyExtensionOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsEnvoyExtensionInput` via:
//
//	ConfigEntryServiceDefaultsEnvoyExtensionArgs{...}
type ConfigEntryServiceDefaultsEnvoyExtensionInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsEnvoyExtensionOutput() ConfigEntryServiceDefaultsEnvoyExtensionOutput
	ToConfigEntryServiceDefaultsEnvoyExtensionOutputWithContext(context.Context) ConfigEntryServiceDefaultsEnvoyExtensionOutput
}

type ConfigEntryServiceDefaultsEnvoyExtensionArgs struct {
	Arguments     pulumi.StringMapInput `pulumi:"arguments"`
	ConsulVersion pulumi.StringPtrInput `pulumi:"consulVersion"`
	EnvoyVersion  pulumi.StringPtrInput `pulumi:"envoyVersion"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	Required      pulumi.BoolPtrInput   `pulumi:"required"`
}

func (ConfigEntryServiceDefaultsEnvoyExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsEnvoyExtension)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsEnvoyExtensionArgs) ToConfigEntryServiceDefaultsEnvoyExtensionOutput() ConfigEntryServiceDefaultsEnvoyExtensionOutput {
	return i.ToConfigEntryServiceDefaultsEnvoyExtensionOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsEnvoyExtensionArgs) ToConfigEntryServiceDefaultsEnvoyExtensionOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsEnvoyExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsEnvoyExtensionOutput)
}

// ConfigEntryServiceDefaultsEnvoyExtensionArrayInput is an input type that accepts ConfigEntryServiceDefaultsEnvoyExtensionArray and ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsEnvoyExtensionArrayInput` via:
//
//	ConfigEntryServiceDefaultsEnvoyExtensionArray{ ConfigEntryServiceDefaultsEnvoyExtensionArgs{...} }
type ConfigEntryServiceDefaultsEnvoyExtensionArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutput() ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput
	ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput
}

type ConfigEntryServiceDefaultsEnvoyExtensionArray []ConfigEntryServiceDefaultsEnvoyExtensionInput

func (ConfigEntryServiceDefaultsEnvoyExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsEnvoyExtension)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsEnvoyExtensionArray) ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutput() ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput {
	return i.ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsEnvoyExtensionArray) ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput)
}

type ConfigEntryServiceDefaultsEnvoyExtensionOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsEnvoyExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsEnvoyExtension)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) ToConfigEntryServiceDefaultsEnvoyExtensionOutput() ConfigEntryServiceDefaultsEnvoyExtensionOutput {
	return o
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) ToConfigEntryServiceDefaultsEnvoyExtensionOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsEnvoyExtensionOutput {
	return o
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) Arguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsEnvoyExtension) map[string]string { return v.Arguments }).(pulumi.StringMapOutput)
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) ConsulVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsEnvoyExtension) *string { return v.ConsulVersion }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) EnvoyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsEnvoyExtension) *string { return v.EnvoyVersion }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsEnvoyExtension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsEnvoyExtension) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsEnvoyExtension)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput) ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutput() ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput) ToConfigEntryServiceDefaultsEnvoyExtensionArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsEnvoyExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsEnvoyExtension {
		return vs[0].([]ConfigEntryServiceDefaultsEnvoyExtension)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsEnvoyExtensionOutput)
}

type ConfigEntryServiceDefaultsExpose struct {
	Checks *bool                                  `pulumi:"checks"`
	Paths  []ConfigEntryServiceDefaultsExposePath `pulumi:"paths"`
}

// ConfigEntryServiceDefaultsExposeInput is an input type that accepts ConfigEntryServiceDefaultsExposeArgs and ConfigEntryServiceDefaultsExposeOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsExposeInput` via:
//
//	ConfigEntryServiceDefaultsExposeArgs{...}
type ConfigEntryServiceDefaultsExposeInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsExposeOutput() ConfigEntryServiceDefaultsExposeOutput
	ToConfigEntryServiceDefaultsExposeOutputWithContext(context.Context) ConfigEntryServiceDefaultsExposeOutput
}

type ConfigEntryServiceDefaultsExposeArgs struct {
	Checks pulumi.BoolPtrInput                            `pulumi:"checks"`
	Paths  ConfigEntryServiceDefaultsExposePathArrayInput `pulumi:"paths"`
}

func (ConfigEntryServiceDefaultsExposeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsExpose)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsExposeArgs) ToConfigEntryServiceDefaultsExposeOutput() ConfigEntryServiceDefaultsExposeOutput {
	return i.ToConfigEntryServiceDefaultsExposeOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsExposeArgs) ToConfigEntryServiceDefaultsExposeOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsExposeOutput)
}

// ConfigEntryServiceDefaultsExposeArrayInput is an input type that accepts ConfigEntryServiceDefaultsExposeArray and ConfigEntryServiceDefaultsExposeArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsExposeArrayInput` via:
//
//	ConfigEntryServiceDefaultsExposeArray{ ConfigEntryServiceDefaultsExposeArgs{...} }
type ConfigEntryServiceDefaultsExposeArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsExposeArrayOutput() ConfigEntryServiceDefaultsExposeArrayOutput
	ToConfigEntryServiceDefaultsExposeArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsExposeArrayOutput
}

type ConfigEntryServiceDefaultsExposeArray []ConfigEntryServiceDefaultsExposeInput

func (ConfigEntryServiceDefaultsExposeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsExpose)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsExposeArray) ToConfigEntryServiceDefaultsExposeArrayOutput() ConfigEntryServiceDefaultsExposeArrayOutput {
	return i.ToConfigEntryServiceDefaultsExposeArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsExposeArray) ToConfigEntryServiceDefaultsExposeArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsExposeArrayOutput)
}

type ConfigEntryServiceDefaultsExposeOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsExposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsExpose)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsExposeOutput) ToConfigEntryServiceDefaultsExposeOutput() ConfigEntryServiceDefaultsExposeOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposeOutput) ToConfigEntryServiceDefaultsExposeOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposeOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposeOutput) Checks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExpose) *bool { return v.Checks }).(pulumi.BoolPtrOutput)
}

func (o ConfigEntryServiceDefaultsExposeOutput) Paths() ConfigEntryServiceDefaultsExposePathArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExpose) []ConfigEntryServiceDefaultsExposePath { return v.Paths }).(ConfigEntryServiceDefaultsExposePathArrayOutput)
}

type ConfigEntryServiceDefaultsExposeArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsExposeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsExpose)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsExposeArrayOutput) ToConfigEntryServiceDefaultsExposeArrayOutput() ConfigEntryServiceDefaultsExposeArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposeArrayOutput) ToConfigEntryServiceDefaultsExposeArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposeArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposeArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsExposeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsExpose {
		return vs[0].([]ConfigEntryServiceDefaultsExpose)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsExposeOutput)
}

type ConfigEntryServiceDefaultsExposePath struct {
	ListenerPort  *int    `pulumi:"listenerPort"`
	LocalPathPort *int    `pulumi:"localPathPort"`
	Path          *string `pulumi:"path"`
	Protocol      *string `pulumi:"protocol"`
}

// ConfigEntryServiceDefaultsExposePathInput is an input type that accepts ConfigEntryServiceDefaultsExposePathArgs and ConfigEntryServiceDefaultsExposePathOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsExposePathInput` via:
//
//	ConfigEntryServiceDefaultsExposePathArgs{...}
type ConfigEntryServiceDefaultsExposePathInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsExposePathOutput() ConfigEntryServiceDefaultsExposePathOutput
	ToConfigEntryServiceDefaultsExposePathOutputWithContext(context.Context) ConfigEntryServiceDefaultsExposePathOutput
}

type ConfigEntryServiceDefaultsExposePathArgs struct {
	ListenerPort  pulumi.IntPtrInput    `pulumi:"listenerPort"`
	LocalPathPort pulumi.IntPtrInput    `pulumi:"localPathPort"`
	Path          pulumi.StringPtrInput `pulumi:"path"`
	Protocol      pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ConfigEntryServiceDefaultsExposePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsExposePath)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsExposePathArgs) ToConfigEntryServiceDefaultsExposePathOutput() ConfigEntryServiceDefaultsExposePathOutput {
	return i.ToConfigEntryServiceDefaultsExposePathOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsExposePathArgs) ToConfigEntryServiceDefaultsExposePathOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsExposePathOutput)
}

// ConfigEntryServiceDefaultsExposePathArrayInput is an input type that accepts ConfigEntryServiceDefaultsExposePathArray and ConfigEntryServiceDefaultsExposePathArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsExposePathArrayInput` via:
//
//	ConfigEntryServiceDefaultsExposePathArray{ ConfigEntryServiceDefaultsExposePathArgs{...} }
type ConfigEntryServiceDefaultsExposePathArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsExposePathArrayOutput() ConfigEntryServiceDefaultsExposePathArrayOutput
	ToConfigEntryServiceDefaultsExposePathArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsExposePathArrayOutput
}

type ConfigEntryServiceDefaultsExposePathArray []ConfigEntryServiceDefaultsExposePathInput

func (ConfigEntryServiceDefaultsExposePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsExposePath)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsExposePathArray) ToConfigEntryServiceDefaultsExposePathArrayOutput() ConfigEntryServiceDefaultsExposePathArrayOutput {
	return i.ToConfigEntryServiceDefaultsExposePathArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsExposePathArray) ToConfigEntryServiceDefaultsExposePathArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsExposePathArrayOutput)
}

type ConfigEntryServiceDefaultsExposePathOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsExposePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsExposePath)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsExposePathOutput) ToConfigEntryServiceDefaultsExposePathOutput() ConfigEntryServiceDefaultsExposePathOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposePathOutput) ToConfigEntryServiceDefaultsExposePathOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposePathOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposePathOutput) ListenerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExposePath) *int { return v.ListenerPort }).(pulumi.IntPtrOutput)
}

func (o ConfigEntryServiceDefaultsExposePathOutput) LocalPathPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExposePath) *int { return v.LocalPathPort }).(pulumi.IntPtrOutput)
}

func (o ConfigEntryServiceDefaultsExposePathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExposePath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsExposePathOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsExposePath) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceDefaultsExposePathArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsExposePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsExposePath)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsExposePathArrayOutput) ToConfigEntryServiceDefaultsExposePathArrayOutput() ConfigEntryServiceDefaultsExposePathArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposePathArrayOutput) ToConfigEntryServiceDefaultsExposePathArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsExposePathArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsExposePathArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsExposePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsExposePath {
		return vs[0].([]ConfigEntryServiceDefaultsExposePath)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsExposePathOutput)
}

type ConfigEntryServiceDefaultsMeshGateway struct {
	Mode string `pulumi:"mode"`
}

// ConfigEntryServiceDefaultsMeshGatewayInput is an input type that accepts ConfigEntryServiceDefaultsMeshGatewayArgs and ConfigEntryServiceDefaultsMeshGatewayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsMeshGatewayInput` via:
//
//	ConfigEntryServiceDefaultsMeshGatewayArgs{...}
type ConfigEntryServiceDefaultsMeshGatewayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsMeshGatewayOutput() ConfigEntryServiceDefaultsMeshGatewayOutput
	ToConfigEntryServiceDefaultsMeshGatewayOutputWithContext(context.Context) ConfigEntryServiceDefaultsMeshGatewayOutput
}

type ConfigEntryServiceDefaultsMeshGatewayArgs struct {
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (ConfigEntryServiceDefaultsMeshGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsMeshGatewayArgs) ToConfigEntryServiceDefaultsMeshGatewayOutput() ConfigEntryServiceDefaultsMeshGatewayOutput {
	return i.ToConfigEntryServiceDefaultsMeshGatewayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsMeshGatewayArgs) ToConfigEntryServiceDefaultsMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsMeshGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsMeshGatewayOutput)
}

// ConfigEntryServiceDefaultsMeshGatewayArrayInput is an input type that accepts ConfigEntryServiceDefaultsMeshGatewayArray and ConfigEntryServiceDefaultsMeshGatewayArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsMeshGatewayArrayInput` via:
//
//	ConfigEntryServiceDefaultsMeshGatewayArray{ ConfigEntryServiceDefaultsMeshGatewayArgs{...} }
type ConfigEntryServiceDefaultsMeshGatewayArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsMeshGatewayArrayOutput() ConfigEntryServiceDefaultsMeshGatewayArrayOutput
	ToConfigEntryServiceDefaultsMeshGatewayArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsMeshGatewayArrayOutput
}

type ConfigEntryServiceDefaultsMeshGatewayArray []ConfigEntryServiceDefaultsMeshGatewayInput

func (ConfigEntryServiceDefaultsMeshGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsMeshGatewayArray) ToConfigEntryServiceDefaultsMeshGatewayArrayOutput() ConfigEntryServiceDefaultsMeshGatewayArrayOutput {
	return i.ToConfigEntryServiceDefaultsMeshGatewayArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsMeshGatewayArray) ToConfigEntryServiceDefaultsMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsMeshGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsMeshGatewayArrayOutput)
}

type ConfigEntryServiceDefaultsMeshGatewayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsMeshGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsMeshGatewayOutput) ToConfigEntryServiceDefaultsMeshGatewayOutput() ConfigEntryServiceDefaultsMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsMeshGatewayOutput) ToConfigEntryServiceDefaultsMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsMeshGatewayOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsMeshGateway) string { return v.Mode }).(pulumi.StringOutput)
}

type ConfigEntryServiceDefaultsMeshGatewayArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsMeshGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsMeshGatewayArrayOutput() ConfigEntryServiceDefaultsMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsMeshGatewayArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsMeshGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsMeshGateway {
		return vs[0].([]ConfigEntryServiceDefaultsMeshGateway)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsMeshGatewayOutput)
}

type ConfigEntryServiceDefaultsTransparentProxy struct {
	DialedDirectly       bool `pulumi:"dialedDirectly"`
	OutboundListenerPort int  `pulumi:"outboundListenerPort"`
}

// ConfigEntryServiceDefaultsTransparentProxyInput is an input type that accepts ConfigEntryServiceDefaultsTransparentProxyArgs and ConfigEntryServiceDefaultsTransparentProxyOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsTransparentProxyInput` via:
//
//	ConfigEntryServiceDefaultsTransparentProxyArgs{...}
type ConfigEntryServiceDefaultsTransparentProxyInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsTransparentProxyOutput() ConfigEntryServiceDefaultsTransparentProxyOutput
	ToConfigEntryServiceDefaultsTransparentProxyOutputWithContext(context.Context) ConfigEntryServiceDefaultsTransparentProxyOutput
}

type ConfigEntryServiceDefaultsTransparentProxyArgs struct {
	DialedDirectly       pulumi.BoolInput `pulumi:"dialedDirectly"`
	OutboundListenerPort pulumi.IntInput  `pulumi:"outboundListenerPort"`
}

func (ConfigEntryServiceDefaultsTransparentProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsTransparentProxy)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsTransparentProxyArgs) ToConfigEntryServiceDefaultsTransparentProxyOutput() ConfigEntryServiceDefaultsTransparentProxyOutput {
	return i.ToConfigEntryServiceDefaultsTransparentProxyOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsTransparentProxyArgs) ToConfigEntryServiceDefaultsTransparentProxyOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsTransparentProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsTransparentProxyOutput)
}

// ConfigEntryServiceDefaultsTransparentProxyArrayInput is an input type that accepts ConfigEntryServiceDefaultsTransparentProxyArray and ConfigEntryServiceDefaultsTransparentProxyArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsTransparentProxyArrayInput` via:
//
//	ConfigEntryServiceDefaultsTransparentProxyArray{ ConfigEntryServiceDefaultsTransparentProxyArgs{...} }
type ConfigEntryServiceDefaultsTransparentProxyArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsTransparentProxyArrayOutput() ConfigEntryServiceDefaultsTransparentProxyArrayOutput
	ToConfigEntryServiceDefaultsTransparentProxyArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsTransparentProxyArrayOutput
}

type ConfigEntryServiceDefaultsTransparentProxyArray []ConfigEntryServiceDefaultsTransparentProxyInput

func (ConfigEntryServiceDefaultsTransparentProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsTransparentProxy)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsTransparentProxyArray) ToConfigEntryServiceDefaultsTransparentProxyArrayOutput() ConfigEntryServiceDefaultsTransparentProxyArrayOutput {
	return i.ToConfigEntryServiceDefaultsTransparentProxyArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsTransparentProxyArray) ToConfigEntryServiceDefaultsTransparentProxyArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsTransparentProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsTransparentProxyArrayOutput)
}

type ConfigEntryServiceDefaultsTransparentProxyOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsTransparentProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsTransparentProxy)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsTransparentProxyOutput) ToConfigEntryServiceDefaultsTransparentProxyOutput() ConfigEntryServiceDefaultsTransparentProxyOutput {
	return o
}

func (o ConfigEntryServiceDefaultsTransparentProxyOutput) ToConfigEntryServiceDefaultsTransparentProxyOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsTransparentProxyOutput {
	return o
}

func (o ConfigEntryServiceDefaultsTransparentProxyOutput) DialedDirectly() pulumi.BoolOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsTransparentProxy) bool { return v.DialedDirectly }).(pulumi.BoolOutput)
}

func (o ConfigEntryServiceDefaultsTransparentProxyOutput) OutboundListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsTransparentProxy) int { return v.OutboundListenerPort }).(pulumi.IntOutput)
}

type ConfigEntryServiceDefaultsTransparentProxyArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsTransparentProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsTransparentProxy)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsTransparentProxyArrayOutput) ToConfigEntryServiceDefaultsTransparentProxyArrayOutput() ConfigEntryServiceDefaultsTransparentProxyArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsTransparentProxyArrayOutput) ToConfigEntryServiceDefaultsTransparentProxyArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsTransparentProxyArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsTransparentProxyArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsTransparentProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsTransparentProxy {
		return vs[0].([]ConfigEntryServiceDefaultsTransparentProxy)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsTransparentProxyOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfig struct {
	// Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
	Defaults []ConfigEntryServiceDefaultsUpstreamConfigDefault `pulumi:"defaults"`
	// Specifies options that override the default upstream configurations for individual upstreams.
	Overrides []ConfigEntryServiceDefaultsUpstreamConfigOverride `pulumi:"overrides"`
}

// ConfigEntryServiceDefaultsUpstreamConfigInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigArgs and ConfigEntryServiceDefaultsUpstreamConfigOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOutput() ConfigEntryServiceDefaultsUpstreamConfigOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigArgs struct {
	// Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
	Defaults ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayInput `pulumi:"defaults"`
	// Specifies options that override the default upstream configurations for individual upstreams.
	Overrides ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayInput `pulumi:"overrides"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfig)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigArgs) ToConfigEntryServiceDefaultsUpstreamConfigOutput() ConfigEntryServiceDefaultsUpstreamConfigOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigArgs) ToConfigEntryServiceDefaultsUpstreamConfigOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigArray and ConfigEntryServiceDefaultsUpstreamConfigArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigArray{ ConfigEntryServiceDefaultsUpstreamConfigArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigArray []ConfigEntryServiceDefaultsUpstreamConfigInput

func (ConfigEntryServiceDefaultsUpstreamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfig)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigArray) ToConfigEntryServiceDefaultsUpstreamConfigArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigArray) ToConfigEntryServiceDefaultsUpstreamConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfig)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOutput) ToConfigEntryServiceDefaultsUpstreamConfigOutput() ConfigEntryServiceDefaultsUpstreamConfigOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOutput) ToConfigEntryServiceDefaultsUpstreamConfigOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOutput {
	return o
}

// Specifies configurations that set default upstream settings. For information about overriding the default configurations for in for individual upstreams, refer to UpstreamConfig.Overrides.
func (o ConfigEntryServiceDefaultsUpstreamConfigOutput) Defaults() ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfig) []ConfigEntryServiceDefaultsUpstreamConfigDefault {
		return v.Defaults
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput)
}

// Specifies options that override the default upstream configurations for individual upstreams.
func (o ConfigEntryServiceDefaultsUpstreamConfigOutput) Overrides() ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfig) []ConfigEntryServiceDefaultsUpstreamConfigOverride {
		return v.Overrides
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfig)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfig {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfig)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefault struct {
	// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
	BalanceOutboundConnections *string `pulumi:"balanceOutboundConnections"`
	ConnectTimeoutMs           *int    `pulumi:"connectTimeoutMs"`
	// Map that specifies a set of limits to apply to when connecting upstream services.
	Limits []ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit `pulumi:"limits"`
	// Specifies the default mesh gateway mode field for all upstreams.
	MeshGateways []ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway `pulumi:"meshGateways"`
	// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
	PassiveHealthChecks []ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck `pulumi:"passiveHealthChecks"`
	// Specifies the default protocol for the service.
	Protocol *string `pulumi:"protocol"`
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs and ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigDefaultInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs struct {
	// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
	BalanceOutboundConnections pulumi.StringPtrInput `pulumi:"balanceOutboundConnections"`
	ConnectTimeoutMs           pulumi.IntPtrInput    `pulumi:"connectTimeoutMs"`
	// Map that specifies a set of limits to apply to when connecting upstream services.
	Limits ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayInput `pulumi:"limits"`
	// Specifies the default mesh gateway mode field for all upstreams.
	MeshGateways ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayInput `pulumi:"meshGateways"`
	// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
	PassiveHealthChecks ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayInput `pulumi:"passiveHealthChecks"`
	// Specifies the default protocol for the service.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefault)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultArray and ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultArray{ ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultArray []ConfigEntryServiceDefaultsUpstreamConfigDefaultInput

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefault)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefault)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput {
	return o
}

// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) BalanceOutboundConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) *string { return v.BalanceOutboundConnections }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) ConnectTimeoutMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) *int { return v.ConnectTimeoutMs }).(pulumi.IntPtrOutput)
}

// Map that specifies a set of limits to apply to when connecting upstream services.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) Limits() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) []ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit {
		return v.Limits
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput)
}

// Specifies the default mesh gateway mode field for all upstreams.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) MeshGateways() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) []ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway {
		return v.MeshGateways
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput)
}

// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) PassiveHealthChecks() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) []ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck {
		return v.PassiveHealthChecks
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput)
}

// Specifies the default protocol for the service.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefault) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefault)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigDefault {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigDefault)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit struct {
	// Specifies the maximum number of concurrent requests.
	MaxConcurrentRequests *int `pulumi:"maxConcurrentRequests"`
	// Specifies the maximum number of connections a service instance can establish against the upstream.
	MaxConnections *int `pulumi:"maxConnections"`
	// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs and ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs struct {
	// Specifies the maximum number of concurrent requests.
	MaxConcurrentRequests pulumi.IntPtrInput `pulumi:"maxConcurrentRequests"`
	// Specifies the maximum number of connections a service instance can establish against the upstream.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray and ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray{ ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray []ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitInput

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput {
	return o
}

// Specifies the maximum number of concurrent requests.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) MaxConcurrentRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit) *int { return v.MaxConcurrentRequests }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of connections a service instance can establish against the upstream.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigDefaultLimit)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway struct {
	Mode *string `pulumi:"mode"`
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs and ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs struct {
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray and ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray{ ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray []ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayInput

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGateway)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck struct {
	// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
	EnforcingConsecutive5xx *int `pulumi:"enforcingConsecutive5xx"`
	// Specifies the time between checks.
	Interval *string `pulumi:"interval"`
	// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
	MaxFailures *int `pulumi:"maxFailures"`
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs and ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs struct {
	// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
	EnforcingConsecutive5xx pulumi.IntPtrInput `pulumi:"enforcingConsecutive5xx"`
	// Specifies the time between checks.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
	MaxFailures pulumi.IntPtrInput `pulumi:"maxFailures"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray and ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray{ ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray []ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckInput

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput {
	return o
}

// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) EnforcingConsecutive5xx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck) *int {
		return v.EnforcingConsecutive5xx
	}).(pulumi.IntPtrOutput)
}

// Specifies the time between checks.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput) MaxFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck) *int { return v.MaxFailures }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheck)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverride struct {
	// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
	BalanceOutboundConnections *string `pulumi:"balanceOutboundConnections"`
	ConnectTimeoutMs           *int    `pulumi:"connectTimeoutMs"`
	EnvoyListenerJson          *string `pulumi:"envoyListenerJson"`
	// Map that specifies a set of limits to apply to when connecting upstream services.
	Limits []ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit `pulumi:"limits"`
	// Specifies the default mesh gateway mode field for all upstreams.
	MeshGateways []ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway `pulumi:"meshGateways"`
	// Specifies the name of the service you are setting the defaults for.
	Name *string `pulumi:"name"`
	// Specifies the namespace containing the upstream service that the configuration applies to.
	Namespace *string `pulumi:"namespace"`
	// Specifies the name of the name of the Consul admin partition that the configuration entry applies to.
	Partition *string `pulumi:"partition"`
	// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
	PassiveHealthChecks []ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck `pulumi:"passiveHealthChecks"`
	// Specifies the peer name of the upstream service that the configuration applies to.
	Peer *string `pulumi:"peer"`
	// Specifies the default protocol for the service.
	Protocol *string `pulumi:"protocol"`
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs and ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigOverrideInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs struct {
	// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
	BalanceOutboundConnections pulumi.StringPtrInput `pulumi:"balanceOutboundConnections"`
	ConnectTimeoutMs           pulumi.IntPtrInput    `pulumi:"connectTimeoutMs"`
	EnvoyListenerJson          pulumi.StringPtrInput `pulumi:"envoyListenerJson"`
	// Map that specifies a set of limits to apply to when connecting upstream services.
	Limits ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayInput `pulumi:"limits"`
	// Specifies the default mesh gateway mode field for all upstreams.
	MeshGateways ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayInput `pulumi:"meshGateways"`
	// Specifies the name of the service you are setting the defaults for.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the namespace containing the upstream service that the configuration applies to.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the name of the name of the Consul admin partition that the configuration entry applies to.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
	PassiveHealthChecks ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayInput `pulumi:"passiveHealthChecks"`
	// Specifies the peer name of the upstream service that the configuration applies to.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Specifies the default protocol for the service.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverride)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideArray and ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideArray{ ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideArray []ConfigEntryServiceDefaultsUpstreamConfigOverrideInput

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverride)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverride)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput {
	return o
}

// Sets the strategy for allocating outbound connections from upstreams across Envoy proxy threads.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) BalanceOutboundConnections() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.BalanceOutboundConnections }).(pulumi.StringPtrOutput)
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) ConnectTimeoutMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *int { return v.ConnectTimeoutMs }).(pulumi.IntPtrOutput)
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) EnvoyListenerJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.EnvoyListenerJson }).(pulumi.StringPtrOutput)
}

// Map that specifies a set of limits to apply to when connecting upstream services.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Limits() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) []ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit {
		return v.Limits
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput)
}

// Specifies the default mesh gateway mode field for all upstreams.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) MeshGateways() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) []ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway {
		return v.MeshGateways
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput)
}

// Specifies the name of the service you are setting the defaults for.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the namespace containing the upstream service that the configuration applies to.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the name of the name of the Consul admin partition that the configuration entry applies to.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Map that specifies a set of rules that enable Consul to remove hosts from the upstream cluster that are unreachable or that return errors.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) PassiveHealthChecks() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) []ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck {
		return v.PassiveHealthChecks
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput)
}

// Specifies the peer name of the upstream service that the configuration applies to.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Specifies the default protocol for the service.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverride) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverride)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigOverride {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigOverride)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit struct {
	// Specifies the maximum number of concurrent requests.
	MaxConcurrentRequests *int `pulumi:"maxConcurrentRequests"`
	// Specifies the maximum number of connections a service instance can establish against the upstream.
	MaxConnections *int `pulumi:"maxConnections"`
	// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs and ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs struct {
	// Specifies the maximum number of concurrent requests.
	MaxConcurrentRequests pulumi.IntPtrInput `pulumi:"maxConcurrentRequests"`
	// Specifies the maximum number of connections a service instance can establish against the upstream.
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray and ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray{ ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray []ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitInput

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput {
	return o
}

// Specifies the maximum number of concurrent requests.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) MaxConcurrentRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit) *int { return v.MaxConcurrentRequests }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of connections a service instance can establish against the upstream.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of requests that are queued while waiting for a connection to establish.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigOverrideLimit)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway struct {
	Mode *string `pulumi:"mode"`
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs and ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs struct {
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray and ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray{ ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray []ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayInput

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGateway)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck struct {
	// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
	BaseEjectionTime *string `pulumi:"baseEjectionTime"`
	// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
	EnforcingConsecutive5xx *int `pulumi:"enforcingConsecutive5xx"`
	// Specifies the time between checks.
	Interval *string `pulumi:"interval"`
	// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
	MaxEjectionPercent *int `pulumi:"maxEjectionPercent"`
	// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
	MaxFailures *int `pulumi:"maxFailures"`
}

// ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs and ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs{...}
type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs struct {
	// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
	BaseEjectionTime pulumi.StringPtrInput `pulumi:"baseEjectionTime"`
	// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
	EnforcingConsecutive5xx pulumi.IntPtrInput `pulumi:"enforcingConsecutive5xx"`
	// Specifies the time between checks.
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
	MaxEjectionPercent pulumi.IntPtrInput `pulumi:"maxEjectionPercent"`
	// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
	MaxFailures pulumi.IntPtrInput `pulumi:"maxFailures"`
}

func (ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput)
}

// ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayInput is an input type that accepts ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray and ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayInput` via:
//
//	ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray{ ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs{...} }
type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput
	ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutputWithContext(context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput
}

type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray []ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckInput

func (ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck)(nil)).Elem()
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput {
	return i.ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput {
	return o
}

// Specifies the minimum amount of time that an ejected host must remain outside the cluster before rejoining.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) BaseEjectionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck) *string {
		return v.BaseEjectionTime
	}).(pulumi.StringPtrOutput)
}

// Specifies a percentage that indicates how many times out of 100 that Consul ejects the host when it detects an outlier status.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) EnforcingConsecutive5xx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck) *int {
		return v.EnforcingConsecutive5xx
	}).(pulumi.IntPtrOutput)
}

// Specifies the time between checks.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Specifies the maximum percentage of an upstream cluster that Consul ejects when the proxy reports an outlier.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) MaxEjectionPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck) *int {
		return v.MaxEjectionPercent
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of consecutive failures allowed per check interval. If exceeded, Consul removes the host from the load balancer.
func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput) MaxFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck) *int { return v.MaxFailures }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck)(nil)).Elem()
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput() ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput) ToConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutputWithContext(ctx context.Context) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput {
	return o
}

func (o ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck {
		return vs[0].([]ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheck)[vs[1].(int)]
	}).(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput)
}

type ConfigEntryServiceIntentionsJwt struct {
	// Specifies the names of one or more previously configured JWT provider configuration entries, which include the information necessary to validate a JSON web token.
	Providers []ConfigEntryServiceIntentionsJwtProvider `pulumi:"providers"`
}

// ConfigEntryServiceIntentionsJwtInput is an input type that accepts ConfigEntryServiceIntentionsJwtArgs and ConfigEntryServiceIntentionsJwtOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtInput` via:
//
//	ConfigEntryServiceIntentionsJwtArgs{...}
type ConfigEntryServiceIntentionsJwtInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtOutput() ConfigEntryServiceIntentionsJwtOutput
	ToConfigEntryServiceIntentionsJwtOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtOutput
}

type ConfigEntryServiceIntentionsJwtArgs struct {
	// Specifies the names of one or more previously configured JWT provider configuration entries, which include the information necessary to validate a JSON web token.
	Providers ConfigEntryServiceIntentionsJwtProviderArrayInput `pulumi:"providers"`
}

func (ConfigEntryServiceIntentionsJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwt)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtArgs) ToConfigEntryServiceIntentionsJwtOutput() ConfigEntryServiceIntentionsJwtOutput {
	return i.ToConfigEntryServiceIntentionsJwtOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtArgs) ToConfigEntryServiceIntentionsJwtOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtOutput)
}

// ConfigEntryServiceIntentionsJwtArrayInput is an input type that accepts ConfigEntryServiceIntentionsJwtArray and ConfigEntryServiceIntentionsJwtArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtArrayInput` via:
//
//	ConfigEntryServiceIntentionsJwtArray{ ConfigEntryServiceIntentionsJwtArgs{...} }
type ConfigEntryServiceIntentionsJwtArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtArrayOutput() ConfigEntryServiceIntentionsJwtArrayOutput
	ToConfigEntryServiceIntentionsJwtArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtArrayOutput
}

type ConfigEntryServiceIntentionsJwtArray []ConfigEntryServiceIntentionsJwtInput

func (ConfigEntryServiceIntentionsJwtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwt)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtArray) ToConfigEntryServiceIntentionsJwtArrayOutput() ConfigEntryServiceIntentionsJwtArrayOutput {
	return i.ToConfigEntryServiceIntentionsJwtArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtArray) ToConfigEntryServiceIntentionsJwtArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtArrayOutput)
}

type ConfigEntryServiceIntentionsJwtOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwt)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtOutput) ToConfigEntryServiceIntentionsJwtOutput() ConfigEntryServiceIntentionsJwtOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtOutput) ToConfigEntryServiceIntentionsJwtOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtOutput {
	return o
}

// Specifies the names of one or more previously configured JWT provider configuration entries, which include the information necessary to validate a JSON web token.
func (o ConfigEntryServiceIntentionsJwtOutput) Providers() ConfigEntryServiceIntentionsJwtProviderArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsJwt) []ConfigEntryServiceIntentionsJwtProvider { return v.Providers }).(ConfigEntryServiceIntentionsJwtProviderArrayOutput)
}

type ConfigEntryServiceIntentionsJwtArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwt)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtArrayOutput) ToConfigEntryServiceIntentionsJwtArrayOutput() ConfigEntryServiceIntentionsJwtArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtArrayOutput) ToConfigEntryServiceIntentionsJwtArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsJwtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsJwt {
		return vs[0].([]ConfigEntryServiceIntentionsJwt)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsJwtOutput)
}

type ConfigEntryServiceIntentionsJwtProvider struct {
	// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
	Name *string `pulumi:"name"`
	// Specifies additional token information to verify beyond what is configured in the JWT provider configuration entry.
	VerifyClaims []ConfigEntryServiceIntentionsJwtProviderVerifyClaim `pulumi:"verifyClaims"`
}

// ConfigEntryServiceIntentionsJwtProviderInput is an input type that accepts ConfigEntryServiceIntentionsJwtProviderArgs and ConfigEntryServiceIntentionsJwtProviderOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtProviderInput` via:
//
//	ConfigEntryServiceIntentionsJwtProviderArgs{...}
type ConfigEntryServiceIntentionsJwtProviderInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtProviderOutput() ConfigEntryServiceIntentionsJwtProviderOutput
	ToConfigEntryServiceIntentionsJwtProviderOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtProviderOutput
}

type ConfigEntryServiceIntentionsJwtProviderArgs struct {
	// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies additional token information to verify beyond what is configured in the JWT provider configuration entry.
	VerifyClaims ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayInput `pulumi:"verifyClaims"`
}

func (ConfigEntryServiceIntentionsJwtProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProvider)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtProviderArgs) ToConfigEntryServiceIntentionsJwtProviderOutput() ConfigEntryServiceIntentionsJwtProviderOutput {
	return i.ToConfigEntryServiceIntentionsJwtProviderOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtProviderArgs) ToConfigEntryServiceIntentionsJwtProviderOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtProviderOutput)
}

// ConfigEntryServiceIntentionsJwtProviderArrayInput is an input type that accepts ConfigEntryServiceIntentionsJwtProviderArray and ConfigEntryServiceIntentionsJwtProviderArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtProviderArrayInput` via:
//
//	ConfigEntryServiceIntentionsJwtProviderArray{ ConfigEntryServiceIntentionsJwtProviderArgs{...} }
type ConfigEntryServiceIntentionsJwtProviderArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtProviderArrayOutput() ConfigEntryServiceIntentionsJwtProviderArrayOutput
	ToConfigEntryServiceIntentionsJwtProviderArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtProviderArrayOutput
}

type ConfigEntryServiceIntentionsJwtProviderArray []ConfigEntryServiceIntentionsJwtProviderInput

func (ConfigEntryServiceIntentionsJwtProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwtProvider)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtProviderArray) ToConfigEntryServiceIntentionsJwtProviderArrayOutput() ConfigEntryServiceIntentionsJwtProviderArrayOutput {
	return i.ToConfigEntryServiceIntentionsJwtProviderArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtProviderArray) ToConfigEntryServiceIntentionsJwtProviderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtProviderArrayOutput)
}

type ConfigEntryServiceIntentionsJwtProviderOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProvider)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtProviderOutput) ToConfigEntryServiceIntentionsJwtProviderOutput() ConfigEntryServiceIntentionsJwtProviderOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderOutput) ToConfigEntryServiceIntentionsJwtProviderOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderOutput {
	return o
}

// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
func (o ConfigEntryServiceIntentionsJwtProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsJwtProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies additional token information to verify beyond what is configured in the JWT provider configuration entry.
func (o ConfigEntryServiceIntentionsJwtProviderOutput) VerifyClaims() ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsJwtProvider) []ConfigEntryServiceIntentionsJwtProviderVerifyClaim {
		return v.VerifyClaims
	}).(ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput)
}

type ConfigEntryServiceIntentionsJwtProviderArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwtProvider)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtProviderArrayOutput) ToConfigEntryServiceIntentionsJwtProviderArrayOutput() ConfigEntryServiceIntentionsJwtProviderArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderArrayOutput) ToConfigEntryServiceIntentionsJwtProviderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsJwtProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsJwtProvider {
		return vs[0].([]ConfigEntryServiceIntentionsJwtProvider)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsJwtProviderOutput)
}

type ConfigEntryServiceIntentionsJwtProviderVerifyClaim struct {
	// Specifies the path to the claim in the JSON web token.
	Paths []string `pulumi:"paths"`
	// Specifies the value to match on when verifying the the claim designated in path.
	Value *string `pulumi:"value"`
}

// ConfigEntryServiceIntentionsJwtProviderVerifyClaimInput is an input type that accepts ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs and ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtProviderVerifyClaimInput` via:
//
//	ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs{...}
type ConfigEntryServiceIntentionsJwtProviderVerifyClaimInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput
	ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput
}

type ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs struct {
	// Specifies the path to the claim in the JSON web token.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Specifies the value to match on when verifying the the claim designated in path.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderVerifyClaim)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput {
	return i.ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput)
}

// ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayInput is an input type that accepts ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray and ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayInput` via:
//
//	ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray{ ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs{...} }
type ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput
	ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput
}

type ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray []ConfigEntryServiceIntentionsJwtProviderVerifyClaimInput

func (ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwtProviderVerifyClaim)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput {
	return i.ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput)
}

type ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderVerifyClaim)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput {
	return o
}

// Specifies the path to the claim in the JSON web token.
func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsJwtProviderVerifyClaim) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Specifies the value to match on when verifying the the claim designated in path.
func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsJwtProviderVerifyClaim) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsJwtProviderVerifyClaim)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput() ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput) ToConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsJwtProviderVerifyClaim {
		return vs[0].([]ConfigEntryServiceIntentionsJwtProviderVerifyClaim)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput)
}

type ConfigEntryServiceIntentionsSource struct {
	// Specifies the action to take when the source sends traffic to the destination service.
	Action *string `pulumi:"action"`
	// Specifies a description of the intention.
	Description *string `pulumi:"description"`
	// Specifies the name of the source that the intention allows or denies traffic from.
	Name *string `pulumi:"name"`
	// Specifies the traffic source namespace that the intention allows or denies traffic from.
	Namespace *string `pulumi:"namespace"`
	// Specifies the name of an admin partition that the intention allows or denies traffic from.
	Partition *string `pulumi:"partition"`
	// Specifies the name of a peered Consul cluster that the intention allows or denies traffic from
	Peer *string `pulumi:"peer"`
	// Specifies a list of permissions for L7 traffic sources. The list contains one or more actions and a set of match criteria for each action.
	Permissions []ConfigEntryServiceIntentionsSourcePermission `pulumi:"permissions"`
	// The Precedence field contains a read-only integer. Consul generates the value based on name configurations for the source and destination services.
	Precedence *int `pulumi:"precedence"`
	// Specifies the name of a sameness group that the intention allows or denies traffic from.
	SamenessGroup *string `pulumi:"samenessGroup"`
	// Specifies the type of destination service that the configuration entry applies to.
	Type *string `pulumi:"type"`
}

// ConfigEntryServiceIntentionsSourceInput is an input type that accepts ConfigEntryServiceIntentionsSourceArgs and ConfigEntryServiceIntentionsSourceOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourceInput` via:
//
//	ConfigEntryServiceIntentionsSourceArgs{...}
type ConfigEntryServiceIntentionsSourceInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourceOutput() ConfigEntryServiceIntentionsSourceOutput
	ToConfigEntryServiceIntentionsSourceOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourceOutput
}

type ConfigEntryServiceIntentionsSourceArgs struct {
	// Specifies the action to take when the source sends traffic to the destination service.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies a description of the intention.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of the source that the intention allows or denies traffic from.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the traffic source namespace that the intention allows or denies traffic from.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the name of an admin partition that the intention allows or denies traffic from.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Specifies the name of a peered Consul cluster that the intention allows or denies traffic from
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Specifies a list of permissions for L7 traffic sources. The list contains one or more actions and a set of match criteria for each action.
	Permissions ConfigEntryServiceIntentionsSourcePermissionArrayInput `pulumi:"permissions"`
	// The Precedence field contains a read-only integer. Consul generates the value based on name configurations for the source and destination services.
	Precedence pulumi.IntPtrInput `pulumi:"precedence"`
	// Specifies the name of a sameness group that the intention allows or denies traffic from.
	SamenessGroup pulumi.StringPtrInput `pulumi:"samenessGroup"`
	// Specifies the type of destination service that the configuration entry applies to.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConfigEntryServiceIntentionsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSource)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourceArgs) ToConfigEntryServiceIntentionsSourceOutput() ConfigEntryServiceIntentionsSourceOutput {
	return i.ToConfigEntryServiceIntentionsSourceOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourceArgs) ToConfigEntryServiceIntentionsSourceOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourceOutput)
}

// ConfigEntryServiceIntentionsSourceArrayInput is an input type that accepts ConfigEntryServiceIntentionsSourceArray and ConfigEntryServiceIntentionsSourceArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourceArrayInput` via:
//
//	ConfigEntryServiceIntentionsSourceArray{ ConfigEntryServiceIntentionsSourceArgs{...} }
type ConfigEntryServiceIntentionsSourceArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourceArrayOutput() ConfigEntryServiceIntentionsSourceArrayOutput
	ToConfigEntryServiceIntentionsSourceArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourceArrayOutput
}

type ConfigEntryServiceIntentionsSourceArray []ConfigEntryServiceIntentionsSourceInput

func (ConfigEntryServiceIntentionsSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSource)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourceArray) ToConfigEntryServiceIntentionsSourceArrayOutput() ConfigEntryServiceIntentionsSourceArrayOutput {
	return i.ToConfigEntryServiceIntentionsSourceArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourceArray) ToConfigEntryServiceIntentionsSourceArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourceArrayOutput)
}

type ConfigEntryServiceIntentionsSourceOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSource)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourceOutput) ToConfigEntryServiceIntentionsSourceOutput() ConfigEntryServiceIntentionsSourceOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourceOutput) ToConfigEntryServiceIntentionsSourceOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourceOutput {
	return o
}

// Specifies the action to take when the source sends traffic to the destination service.
func (o ConfigEntryServiceIntentionsSourceOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies a description of the intention.
func (o ConfigEntryServiceIntentionsSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of the source that the intention allows or denies traffic from.
func (o ConfigEntryServiceIntentionsSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the traffic source namespace that the intention allows or denies traffic from.
func (o ConfigEntryServiceIntentionsSourceOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the name of an admin partition that the intention allows or denies traffic from.
func (o ConfigEntryServiceIntentionsSourceOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Specifies the name of a peered Consul cluster that the intention allows or denies traffic from
func (o ConfigEntryServiceIntentionsSourceOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Specifies a list of permissions for L7 traffic sources. The list contains one or more actions and a set of match criteria for each action.
func (o ConfigEntryServiceIntentionsSourceOutput) Permissions() ConfigEntryServiceIntentionsSourcePermissionArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) []ConfigEntryServiceIntentionsSourcePermission {
		return v.Permissions
	}).(ConfigEntryServiceIntentionsSourcePermissionArrayOutput)
}

// The Precedence field contains a read-only integer. Consul generates the value based on name configurations for the source and destination services.
func (o ConfigEntryServiceIntentionsSourceOutput) Precedence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *int { return v.Precedence }).(pulumi.IntPtrOutput)
}

// Specifies the name of a sameness group that the intention allows or denies traffic from.
func (o ConfigEntryServiceIntentionsSourceOutput) SamenessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.SamenessGroup }).(pulumi.StringPtrOutput)
}

// Specifies the type of destination service that the configuration entry applies to.
func (o ConfigEntryServiceIntentionsSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceIntentionsSourceArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSource)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourceArrayOutput) ToConfigEntryServiceIntentionsSourceArrayOutput() ConfigEntryServiceIntentionsSourceArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourceArrayOutput) ToConfigEntryServiceIntentionsSourceArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourceArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourceArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsSource {
		return vs[0].([]ConfigEntryServiceIntentionsSource)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsSourceOutput)
}

type ConfigEntryServiceIntentionsSourcePermission struct {
	// Specifies the action to take when the source sends traffic to the destination service.
	Action string `pulumi:"action"`
	// Specifies a set of HTTP-specific match criteria.
	Https []ConfigEntryServiceIntentionsSourcePermissionHttp `pulumi:"https"`
}

// ConfigEntryServiceIntentionsSourcePermissionInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionArgs and ConfigEntryServiceIntentionsSourcePermissionOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionArgs{...}
type ConfigEntryServiceIntentionsSourcePermissionInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionOutput() ConfigEntryServiceIntentionsSourcePermissionOutput
	ToConfigEntryServiceIntentionsSourcePermissionOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionOutput
}

type ConfigEntryServiceIntentionsSourcePermissionArgs struct {
	// Specifies the action to take when the source sends traffic to the destination service.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies a set of HTTP-specific match criteria.
	Https ConfigEntryServiceIntentionsSourcePermissionHttpArrayInput `pulumi:"https"`
}

func (ConfigEntryServiceIntentionsSourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermission)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionArgs) ToConfigEntryServiceIntentionsSourcePermissionOutput() ConfigEntryServiceIntentionsSourcePermissionOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionArgs) ToConfigEntryServiceIntentionsSourcePermissionOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionOutput)
}

// ConfigEntryServiceIntentionsSourcePermissionArrayInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionArray and ConfigEntryServiceIntentionsSourcePermissionArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionArrayInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionArray{ ConfigEntryServiceIntentionsSourcePermissionArgs{...} }
type ConfigEntryServiceIntentionsSourcePermissionArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionArrayOutput() ConfigEntryServiceIntentionsSourcePermissionArrayOutput
	ToConfigEntryServiceIntentionsSourcePermissionArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionArrayOutput
}

type ConfigEntryServiceIntentionsSourcePermissionArray []ConfigEntryServiceIntentionsSourcePermissionInput

func (ConfigEntryServiceIntentionsSourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermission)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionArray) ToConfigEntryServiceIntentionsSourcePermissionArrayOutput() ConfigEntryServiceIntentionsSourcePermissionArrayOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionArray) ToConfigEntryServiceIntentionsSourcePermissionArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionArrayOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermission)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionOutput) ToConfigEntryServiceIntentionsSourcePermissionOutput() ConfigEntryServiceIntentionsSourcePermissionOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionOutput) ToConfigEntryServiceIntentionsSourcePermissionOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionOutput {
	return o
}

// Specifies the action to take when the source sends traffic to the destination service.
func (o ConfigEntryServiceIntentionsSourcePermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermission) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies a set of HTTP-specific match criteria.
func (o ConfigEntryServiceIntentionsSourcePermissionOutput) Https() ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermission) []ConfigEntryServiceIntentionsSourcePermissionHttp {
		return v.Https
	}).(ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermission)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionArrayOutput() ConfigEntryServiceIntentionsSourcePermissionArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsSourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsSourcePermission {
		return vs[0].([]ConfigEntryServiceIntentionsSourcePermission)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsSourcePermissionOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttp struct {
	// Specifies a header name and matching criteria for HTTP request headers.
	Headers []ConfigEntryServiceIntentionsSourcePermissionHttpHeader `pulumi:"headers"`
	// Specifies a list of HTTP methods.
	Methods []string `pulumi:"methods"`
	// Specifies an exact path to match on the HTTP request path.
	PathExact *string `pulumi:"pathExact"`
	// Specifies a path prefix to match on the HTTP request path.
	PathPrefix *string `pulumi:"pathPrefix"`
	// Defines a regular expression to match on the HTTP request path.
	PathRegex *string `pulumi:"pathRegex"`
}

// ConfigEntryServiceIntentionsSourcePermissionHttpInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionHttpArgs and ConfigEntryServiceIntentionsSourcePermissionHttpOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionHttpInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionHttpArgs{...}
type ConfigEntryServiceIntentionsSourcePermissionHttpInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionHttpOutput() ConfigEntryServiceIntentionsSourcePermissionHttpOutput
	ToConfigEntryServiceIntentionsSourcePermissionHttpOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpOutput
}

type ConfigEntryServiceIntentionsSourcePermissionHttpArgs struct {
	// Specifies a header name and matching criteria for HTTP request headers.
	Headers ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayInput `pulumi:"headers"`
	// Specifies a list of HTTP methods.
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// Specifies an exact path to match on the HTTP request path.
	PathExact pulumi.StringPtrInput `pulumi:"pathExact"`
	// Specifies a path prefix to match on the HTTP request path.
	PathPrefix pulumi.StringPtrInput `pulumi:"pathPrefix"`
	// Defines a regular expression to match on the HTTP request path.
	PathRegex pulumi.StringPtrInput `pulumi:"pathRegex"`
}

func (ConfigEntryServiceIntentionsSourcePermissionHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttp)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpArgs) ToConfigEntryServiceIntentionsSourcePermissionHttpOutput() ConfigEntryServiceIntentionsSourcePermissionHttpOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionHttpOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpArgs) ToConfigEntryServiceIntentionsSourcePermissionHttpOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionHttpOutput)
}

// ConfigEntryServiceIntentionsSourcePermissionHttpArrayInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionHttpArray and ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionHttpArrayInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionHttpArray{ ConfigEntryServiceIntentionsSourcePermissionHttpArgs{...} }
type ConfigEntryServiceIntentionsSourcePermissionHttpArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput
	ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput
}

type ConfigEntryServiceIntentionsSourcePermissionHttpArray []ConfigEntryServiceIntentionsSourcePermissionHttpInput

func (ConfigEntryServiceIntentionsSourcePermissionHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermissionHttp)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpArray) ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpArray) ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttpOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttp)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpOutput() ConfigEntryServiceIntentionsSourcePermissionHttpOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpOutput {
	return o
}

// Specifies a header name and matching criteria for HTTP request headers.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) Headers() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttp) []ConfigEntryServiceIntentionsSourcePermissionHttpHeader {
		return v.Headers
	}).(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput)
}

// Specifies a list of HTTP methods.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttp) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// Specifies an exact path to match on the HTTP request path.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) PathExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttp) *string { return v.PathExact }).(pulumi.StringPtrOutput)
}

// Specifies a path prefix to match on the HTTP request path.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) PathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttp) *string { return v.PathPrefix }).(pulumi.StringPtrOutput)
}

// Defines a regular expression to match on the HTTP request path.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttp) *string { return v.PathRegex }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermissionHttp)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsSourcePermissionHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsSourcePermissionHttp {
		return vs[0].([]ConfigEntryServiceIntentionsSourcePermissionHttp)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsSourcePermissionHttpOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttpHeader struct {
	// Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
	Exact *string `pulumi:"exact"`
	// Inverts the matching logic configured in the Header.
	Invert *bool `pulumi:"invert"`
	// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
	Name string `pulumi:"name"`
	// Specifies a prefix value for the header key set in the Name field.
	Prefix *string `pulumi:"prefix"`
	// Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
	Present *bool `pulumi:"present"`
	// Specifies a regular expression pattern as the value for the header key set in the Name field.
	Regex *string `pulumi:"regex"`
	// Specifies a suffix value for the header key set in the Name field.
	Suffix *string `pulumi:"suffix"`
}

// ConfigEntryServiceIntentionsSourcePermissionHttpHeaderInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs and ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionHttpHeaderInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs{...}
type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput
	ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput
}

type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs struct {
	// Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Inverts the matching logic configured in the Header.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies a prefix value for the header key set in the Name field.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
	Present pulumi.BoolPtrInput `pulumi:"present"`
	// Specifies a regular expression pattern as the value for the header key set in the Name field.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Specifies a suffix value for the header key set in the Name field.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpHeader)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput)
}

// ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayInput is an input type that accepts ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray and ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayInput` via:
//
//	ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray{ ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs{...} }
type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput
	ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutputWithContext(context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput
}

type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray []ConfigEntryServiceIntentionsSourcePermissionHttpHeaderInput

func (ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermissionHttpHeader)(nil)).Elem()
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput {
	return i.ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpHeader)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput {
	return o
}

// Specifies a value for the header key set in the Name field. If the request header value matches the Exact value, Consul applies the permission.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Inverts the matching logic configured in the Header.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Specifies the name of a JWT provider defined in the Name field of the jwt-provider configuration entry.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies a prefix value for the header key set in the Name field.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Enables a match if the header configured in the Name field appears in the request. Consul matches on any value as long as the header key appears in the request.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Present() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *bool { return v.Present }).(pulumi.BoolPtrOutput)
}

// Specifies a regular expression pattern as the value for the header key set in the Name field.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Specifies a suffix value for the header key set in the Name field.
func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceIntentionsSourcePermissionHttpHeader) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceIntentionsSourcePermissionHttpHeader)(nil)).Elem()
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput() ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput) ToConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput {
	return o
}

func (o ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceIntentionsSourcePermissionHttpHeader {
		return vs[0].([]ConfigEntryServiceIntentionsSourcePermissionHttpHeader)[vs[1].(int)]
	}).(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput)
}

type ConfigEntryServiceResolverFailover struct {
	// Specifies an ordered list of datacenters at the failover location to attempt connections to during a failover scenario. When Consul cannot establish a connection with the first datacenter in the list, it proceeds sequentially until establishing a connection with another datacenter.
	Datacenters []string `pulumi:"datacenters"`
	// Specifies the namespace at the failover location where the failover services are deployed.
	Namespace *string `pulumi:"namespace"`
	// Specifies the sameness group at the failover location where the failover services are deployed.
	SamenessGroup *string `pulumi:"samenessGroup"`
	// Specifies the name of the service to resolve at the failover location during a failover scenario.
	Service *string `pulumi:"service"`
	// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
	ServiceSubset *string `pulumi:"serviceSubset"`
	// Name of subset.
	SubsetName string `pulumi:"subsetName"`
	// Specifies a fixed list of failover targets to try during failover. This list can express complicated failover scenarios.
	Targets []ConfigEntryServiceResolverFailoverTarget `pulumi:"targets"`
}

// ConfigEntryServiceResolverFailoverInput is an input type that accepts ConfigEntryServiceResolverFailoverArgs and ConfigEntryServiceResolverFailoverOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverFailoverInput` via:
//
//	ConfigEntryServiceResolverFailoverArgs{...}
type ConfigEntryServiceResolverFailoverInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverFailoverOutput() ConfigEntryServiceResolverFailoverOutput
	ToConfigEntryServiceResolverFailoverOutputWithContext(context.Context) ConfigEntryServiceResolverFailoverOutput
}

type ConfigEntryServiceResolverFailoverArgs struct {
	// Specifies an ordered list of datacenters at the failover location to attempt connections to during a failover scenario. When Consul cannot establish a connection with the first datacenter in the list, it proceeds sequentially until establishing a connection with another datacenter.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// Specifies the namespace at the failover location where the failover services are deployed.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the sameness group at the failover location where the failover services are deployed.
	SamenessGroup pulumi.StringPtrInput `pulumi:"samenessGroup"`
	// Specifies the name of the service to resolve at the failover location during a failover scenario.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
	ServiceSubset pulumi.StringPtrInput `pulumi:"serviceSubset"`
	// Name of subset.
	SubsetName pulumi.StringInput `pulumi:"subsetName"`
	// Specifies a fixed list of failover targets to try during failover. This list can express complicated failover scenarios.
	Targets ConfigEntryServiceResolverFailoverTargetArrayInput `pulumi:"targets"`
}

func (ConfigEntryServiceResolverFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverFailover)(nil)).Elem()
}

func (i ConfigEntryServiceResolverFailoverArgs) ToConfigEntryServiceResolverFailoverOutput() ConfigEntryServiceResolverFailoverOutput {
	return i.ToConfigEntryServiceResolverFailoverOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverFailoverArgs) ToConfigEntryServiceResolverFailoverOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverFailoverOutput)
}

// ConfigEntryServiceResolverFailoverArrayInput is an input type that accepts ConfigEntryServiceResolverFailoverArray and ConfigEntryServiceResolverFailoverArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverFailoverArrayInput` via:
//
//	ConfigEntryServiceResolverFailoverArray{ ConfigEntryServiceResolverFailoverArgs{...} }
type ConfigEntryServiceResolverFailoverArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverFailoverArrayOutput() ConfigEntryServiceResolverFailoverArrayOutput
	ToConfigEntryServiceResolverFailoverArrayOutputWithContext(context.Context) ConfigEntryServiceResolverFailoverArrayOutput
}

type ConfigEntryServiceResolverFailoverArray []ConfigEntryServiceResolverFailoverInput

func (ConfigEntryServiceResolverFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverFailover)(nil)).Elem()
}

func (i ConfigEntryServiceResolverFailoverArray) ToConfigEntryServiceResolverFailoverArrayOutput() ConfigEntryServiceResolverFailoverArrayOutput {
	return i.ToConfigEntryServiceResolverFailoverArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverFailoverArray) ToConfigEntryServiceResolverFailoverArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverFailoverArrayOutput)
}

type ConfigEntryServiceResolverFailoverOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverFailover)(nil)).Elem()
}

func (o ConfigEntryServiceResolverFailoverOutput) ToConfigEntryServiceResolverFailoverOutput() ConfigEntryServiceResolverFailoverOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverOutput) ToConfigEntryServiceResolverFailoverOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverOutput {
	return o
}

// Specifies an ordered list of datacenters at the failover location to attempt connections to during a failover scenario. When Consul cannot establish a connection with the first datacenter in the list, it proceeds sequentially until establishing a connection with another datacenter.
func (o ConfigEntryServiceResolverFailoverOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// Specifies the namespace at the failover location where the failover services are deployed.
func (o ConfigEntryServiceResolverFailoverOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the sameness group at the failover location where the failover services are deployed.
func (o ConfigEntryServiceResolverFailoverOutput) SamenessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) *string { return v.SamenessGroup }).(pulumi.StringPtrOutput)
}

// Specifies the name of the service to resolve at the failover location during a failover scenario.
func (o ConfigEntryServiceResolverFailoverOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
func (o ConfigEntryServiceResolverFailoverOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) *string { return v.ServiceSubset }).(pulumi.StringPtrOutput)
}

// Name of subset.
func (o ConfigEntryServiceResolverFailoverOutput) SubsetName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) string { return v.SubsetName }).(pulumi.StringOutput)
}

// Specifies a fixed list of failover targets to try during failover. This list can express complicated failover scenarios.
func (o ConfigEntryServiceResolverFailoverOutput) Targets() ConfigEntryServiceResolverFailoverTargetArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailover) []ConfigEntryServiceResolverFailoverTarget {
		return v.Targets
	}).(ConfigEntryServiceResolverFailoverTargetArrayOutput)
}

type ConfigEntryServiceResolverFailoverArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverFailover)(nil)).Elem()
}

func (o ConfigEntryServiceResolverFailoverArrayOutput) ToConfigEntryServiceResolverFailoverArrayOutput() ConfigEntryServiceResolverFailoverArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverArrayOutput) ToConfigEntryServiceResolverFailoverArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverFailover {
		return vs[0].([]ConfigEntryServiceResolverFailover)[vs[1].(int)]
	}).(ConfigEntryServiceResolverFailoverOutput)
}

type ConfigEntryServiceResolverFailoverTarget struct {
	// Specifies the WAN federated datacenter to use for the failover target. If empty, the current datacenter is used.
	Datacenter *string `pulumi:"datacenter"`
	// Specifies the namespace at the failover location where the failover services are deployed.
	Namespace *string `pulumi:"namespace"`
	// Specifies the admin partition within the same datacenter to use for the failover target. If empty, the default partition is used.
	Partition *string `pulumi:"partition"`
	// Specifies the destination cluster peer to resolve the target service name from.
	Peer *string `pulumi:"peer"`
	// Specifies the name of the service to resolve at the failover location during a failover scenario.
	Service *string `pulumi:"service"`
	// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
	ServiceSubset *string `pulumi:"serviceSubset"`
}

// ConfigEntryServiceResolverFailoverTargetInput is an input type that accepts ConfigEntryServiceResolverFailoverTargetArgs and ConfigEntryServiceResolverFailoverTargetOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverFailoverTargetInput` via:
//
//	ConfigEntryServiceResolverFailoverTargetArgs{...}
type ConfigEntryServiceResolverFailoverTargetInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverFailoverTargetOutput() ConfigEntryServiceResolverFailoverTargetOutput
	ToConfigEntryServiceResolverFailoverTargetOutputWithContext(context.Context) ConfigEntryServiceResolverFailoverTargetOutput
}

type ConfigEntryServiceResolverFailoverTargetArgs struct {
	// Specifies the WAN federated datacenter to use for the failover target. If empty, the current datacenter is used.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Specifies the namespace at the failover location where the failover services are deployed.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the admin partition within the same datacenter to use for the failover target. If empty, the default partition is used.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Specifies the destination cluster peer to resolve the target service name from.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Specifies the name of the service to resolve at the failover location during a failover scenario.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
	ServiceSubset pulumi.StringPtrInput `pulumi:"serviceSubset"`
}

func (ConfigEntryServiceResolverFailoverTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverFailoverTarget)(nil)).Elem()
}

func (i ConfigEntryServiceResolverFailoverTargetArgs) ToConfigEntryServiceResolverFailoverTargetOutput() ConfigEntryServiceResolverFailoverTargetOutput {
	return i.ToConfigEntryServiceResolverFailoverTargetOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverFailoverTargetArgs) ToConfigEntryServiceResolverFailoverTargetOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverFailoverTargetOutput)
}

// ConfigEntryServiceResolverFailoverTargetArrayInput is an input type that accepts ConfigEntryServiceResolverFailoverTargetArray and ConfigEntryServiceResolverFailoverTargetArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverFailoverTargetArrayInput` via:
//
//	ConfigEntryServiceResolverFailoverTargetArray{ ConfigEntryServiceResolverFailoverTargetArgs{...} }
type ConfigEntryServiceResolverFailoverTargetArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverFailoverTargetArrayOutput() ConfigEntryServiceResolverFailoverTargetArrayOutput
	ToConfigEntryServiceResolverFailoverTargetArrayOutputWithContext(context.Context) ConfigEntryServiceResolverFailoverTargetArrayOutput
}

type ConfigEntryServiceResolverFailoverTargetArray []ConfigEntryServiceResolverFailoverTargetInput

func (ConfigEntryServiceResolverFailoverTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverFailoverTarget)(nil)).Elem()
}

func (i ConfigEntryServiceResolverFailoverTargetArray) ToConfigEntryServiceResolverFailoverTargetArrayOutput() ConfigEntryServiceResolverFailoverTargetArrayOutput {
	return i.ToConfigEntryServiceResolverFailoverTargetArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverFailoverTargetArray) ToConfigEntryServiceResolverFailoverTargetArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverFailoverTargetArrayOutput)
}

type ConfigEntryServiceResolverFailoverTargetOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverFailoverTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverFailoverTarget)(nil)).Elem()
}

func (o ConfigEntryServiceResolverFailoverTargetOutput) ToConfigEntryServiceResolverFailoverTargetOutput() ConfigEntryServiceResolverFailoverTargetOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverTargetOutput) ToConfigEntryServiceResolverFailoverTargetOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverTargetOutput {
	return o
}

// Specifies the WAN federated datacenter to use for the failover target. If empty, the current datacenter is used.
func (o ConfigEntryServiceResolverFailoverTargetOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Specifies the namespace at the failover location where the failover services are deployed.
func (o ConfigEntryServiceResolverFailoverTargetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the admin partition within the same datacenter to use for the failover target. If empty, the default partition is used.
func (o ConfigEntryServiceResolverFailoverTargetOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Specifies the destination cluster peer to resolve the target service name from.
func (o ConfigEntryServiceResolverFailoverTargetOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Specifies the name of the service to resolve at the failover location during a failover scenario.
func (o ConfigEntryServiceResolverFailoverTargetOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Specifies the name of a subset of service instances to resolve at the failover location during a failover scenario.
func (o ConfigEntryServiceResolverFailoverTargetOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverFailoverTarget) *string { return v.ServiceSubset }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceResolverFailoverTargetArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverFailoverTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverFailoverTarget)(nil)).Elem()
}

func (o ConfigEntryServiceResolverFailoverTargetArrayOutput) ToConfigEntryServiceResolverFailoverTargetArrayOutput() ConfigEntryServiceResolverFailoverTargetArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverTargetArrayOutput) ToConfigEntryServiceResolverFailoverTargetArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverFailoverTargetArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverFailoverTargetArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverFailoverTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverFailoverTarget {
		return vs[0].([]ConfigEntryServiceResolverFailoverTarget)[vs[1].(int)]
	}).(ConfigEntryServiceResolverFailoverTargetOutput)
}

type ConfigEntryServiceResolverLoadBalancer struct {
	// Specifies a list of hash policies to use for hashing load balancing algorithms. Consul evaluates hash policies individually and combines them so that identical lists result in the same hash.
	HashPolicies []ConfigEntryServiceResolverLoadBalancerHashPolicy `pulumi:"hashPolicies"`
	// Specifies configuration for the least*request policy type.
	LeastRequestConfigs []ConfigEntryServiceResolverLoadBalancerLeastRequestConfig `pulumi:"leastRequestConfigs"`
	// Specifies the type of load balancing policy for selecting a host.
	Policy *string `pulumi:"policy"`
	// Specifies configuration for the ring*hash policy type.
	RingHashConfigs []ConfigEntryServiceResolverLoadBalancerRingHashConfig `pulumi:"ringHashConfigs"`
}

// ConfigEntryServiceResolverLoadBalancerInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerArgs and ConfigEntryServiceResolverLoadBalancerOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerArgs{...}
type ConfigEntryServiceResolverLoadBalancerInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerOutput() ConfigEntryServiceResolverLoadBalancerOutput
	ToConfigEntryServiceResolverLoadBalancerOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerOutput
}

type ConfigEntryServiceResolverLoadBalancerArgs struct {
	// Specifies a list of hash policies to use for hashing load balancing algorithms. Consul evaluates hash policies individually and combines them so that identical lists result in the same hash.
	HashPolicies ConfigEntryServiceResolverLoadBalancerHashPolicyArrayInput `pulumi:"hashPolicies"`
	// Specifies configuration for the least*request policy type.
	LeastRequestConfigs ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayInput `pulumi:"leastRequestConfigs"`
	// Specifies the type of load balancing policy for selecting a host.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Specifies configuration for the ring*hash policy type.
	RingHashConfigs ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayInput `pulumi:"ringHashConfigs"`
}

func (ConfigEntryServiceResolverLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancer)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerArgs) ToConfigEntryServiceResolverLoadBalancerOutput() ConfigEntryServiceResolverLoadBalancerOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerArgs) ToConfigEntryServiceResolverLoadBalancerOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerOutput)
}

// ConfigEntryServiceResolverLoadBalancerArrayInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerArray and ConfigEntryServiceResolverLoadBalancerArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerArrayInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerArray{ ConfigEntryServiceResolverLoadBalancerArgs{...} }
type ConfigEntryServiceResolverLoadBalancerArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerArrayOutput() ConfigEntryServiceResolverLoadBalancerArrayOutput
	ToConfigEntryServiceResolverLoadBalancerArrayOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerArrayOutput
}

type ConfigEntryServiceResolverLoadBalancerArray []ConfigEntryServiceResolverLoadBalancerInput

func (ConfigEntryServiceResolverLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancer)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerArray) ToConfigEntryServiceResolverLoadBalancerArrayOutput() ConfigEntryServiceResolverLoadBalancerArrayOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerArray) ToConfigEntryServiceResolverLoadBalancerArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancer)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerOutput) ToConfigEntryServiceResolverLoadBalancerOutput() ConfigEntryServiceResolverLoadBalancerOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerOutput) ToConfigEntryServiceResolverLoadBalancerOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerOutput {
	return o
}

// Specifies a list of hash policies to use for hashing load balancing algorithms. Consul evaluates hash policies individually and combines them so that identical lists result in the same hash.
func (o ConfigEntryServiceResolverLoadBalancerOutput) HashPolicies() ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancer) []ConfigEntryServiceResolverLoadBalancerHashPolicy {
		return v.HashPolicies
	}).(ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput)
}

// Specifies configuration for the least*request policy type.
func (o ConfigEntryServiceResolverLoadBalancerOutput) LeastRequestConfigs() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancer) []ConfigEntryServiceResolverLoadBalancerLeastRequestConfig {
		return v.LeastRequestConfigs
	}).(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput)
}

// Specifies the type of load balancing policy for selecting a host.
func (o ConfigEntryServiceResolverLoadBalancerOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancer) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Specifies configuration for the ring*hash policy type.
func (o ConfigEntryServiceResolverLoadBalancerOutput) RingHashConfigs() ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancer) []ConfigEntryServiceResolverLoadBalancerRingHashConfig {
		return v.RingHashConfigs
	}).(ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancer)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerArrayOutput) ToConfigEntryServiceResolverLoadBalancerArrayOutput() ConfigEntryServiceResolverLoadBalancerArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerArrayOutput) ToConfigEntryServiceResolverLoadBalancerArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverLoadBalancer {
		return vs[0].([]ConfigEntryServiceResolverLoadBalancer)[vs[1].(int)]
	}).(ConfigEntryServiceResolverLoadBalancerOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicy struct {
	// Specifies additional configuration options for the cookie hash policy type.
	CookieConfigs []ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig `pulumi:"cookieConfigs"`
	// Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
	Field *string `pulumi:"field"`
	// Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
	FieldValue *string `pulumi:"fieldValue"`
	// Determines if the hash type should be source IP address.
	SourceIp *bool `pulumi:"sourceIp"`
	// Determines if Consul should stop computing the hash when multiple hash policies are present.
	Terminal *bool `pulumi:"terminal"`
}

// ConfigEntryServiceResolverLoadBalancerHashPolicyInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerHashPolicyArgs and ConfigEntryServiceResolverLoadBalancerHashPolicyOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerHashPolicyInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerHashPolicyArgs{...}
type ConfigEntryServiceResolverLoadBalancerHashPolicyInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerHashPolicyOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyOutput
	ToConfigEntryServiceResolverLoadBalancerHashPolicyOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyOutput
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyArgs struct {
	// Specifies additional configuration options for the cookie hash policy type.
	CookieConfigs ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayInput `pulumi:"cookieConfigs"`
	// Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
	FieldValue pulumi.StringPtrInput `pulumi:"fieldValue"`
	// Determines if the hash type should be source IP address.
	SourceIp pulumi.BoolPtrInput `pulumi:"sourceIp"`
	// Determines if Consul should stop computing the hash when multiple hash policies are present.
	Terminal pulumi.BoolPtrInput `pulumi:"terminal"`
}

func (ConfigEntryServiceResolverLoadBalancerHashPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicy)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyArgs) ToConfigEntryServiceResolverLoadBalancerHashPolicyOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerHashPolicyOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyArgs) ToConfigEntryServiceResolverLoadBalancerHashPolicyOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerHashPolicyOutput)
}

// ConfigEntryServiceResolverLoadBalancerHashPolicyArrayInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerHashPolicyArray and ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerHashPolicyArrayInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerHashPolicyArray{ ConfigEntryServiceResolverLoadBalancerHashPolicyArgs{...} }
type ConfigEntryServiceResolverLoadBalancerHashPolicyArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput
	ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyArray []ConfigEntryServiceResolverLoadBalancerHashPolicyInput

func (ConfigEntryServiceResolverLoadBalancerHashPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerHashPolicy)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyArray) ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyArray) ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicy)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyOutput {
	return o
}

// Specifies additional configuration options for the cookie hash policy type.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) CookieConfigs() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicy) []ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig {
		return v.CookieConfigs
	}).(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput)
}

// Specifies the attribute type to hash on. You cannot specify the Field parameter if SourceIP is also configured.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Specifies the value to hash, such as a header name, cookie name, or a URL query parameter name.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicy) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

// Determines if the hash type should be source IP address.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) SourceIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicy) *bool { return v.SourceIp }).(pulumi.BoolPtrOutput)
}

// Determines if Consul should stop computing the hash when multiple hash policies are present.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyOutput) Terminal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicy) *bool { return v.Terminal }).(pulumi.BoolPtrOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerHashPolicy)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverLoadBalancerHashPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverLoadBalancerHashPolicy {
		return vs[0].([]ConfigEntryServiceResolverLoadBalancerHashPolicy)[vs[1].(int)]
	}).(ConfigEntryServiceResolverLoadBalancerHashPolicyOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig struct {
	// Specifies the path to set for the cookie.
	Path *string `pulumi:"path"`
	// Directs Consul to generate a session cookie with no expiration.
	Session *bool `pulumi:"session"`
	// Specifies the TTL for generated cookies. Cannot be specified for session cookies.
	Ttl *string `pulumi:"ttl"`
}

// ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs and ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs{...}
type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput
	ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs struct {
	// Specifies the path to set for the cookie.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Directs Consul to generate a session cookie with no expiration.
	Session pulumi.BoolPtrInput `pulumi:"session"`
	// Specifies the TTL for generated cookies. Cannot be specified for session cookies.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput)
}

// ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray and ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray{ ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs{...} }
type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput
	ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray []ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigInput

func (ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput {
	return o
}

// Specifies the path to set for the cookie.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Directs Consul to generate a session cookie with no expiration.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) Session() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig) *bool { return v.Session }).(pulumi.BoolPtrOutput)
}

// Specifies the TTL for generated cookies. Cannot be specified for session cookies.
func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig {
		return vs[0].([]ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfig)[vs[1].(int)]
	}).(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput)
}

type ConfigEntryServiceResolverLoadBalancerLeastRequestConfig struct {
	ChoiceCount *int `pulumi:"choiceCount"`
}

// ConfigEntryServiceResolverLoadBalancerLeastRequestConfigInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs and ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerLeastRequestConfigInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs{...}
type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput
	ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput
}

type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs struct {
	ChoiceCount pulumi.IntPtrInput `pulumi:"choiceCount"`
}

func (ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerLeastRequestConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput)
}

// ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray and ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray{ ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs{...} }
type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput
	ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput
}

type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray []ConfigEntryServiceResolverLoadBalancerLeastRequestConfigInput

func (ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerLeastRequestConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerLeastRequestConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput) ChoiceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerLeastRequestConfig) *int { return v.ChoiceCount }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerLeastRequestConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverLoadBalancerLeastRequestConfig {
		return vs[0].([]ConfigEntryServiceResolverLoadBalancerLeastRequestConfig)[vs[1].(int)]
	}).(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput)
}

type ConfigEntryServiceResolverLoadBalancerRingHashConfig struct {
	// Determines the maximum number of entries in the hash ring.
	MaximumRingSize *int `pulumi:"maximumRingSize"`
	// Determines the minimum number of entries in the hash ring.
	MinimumRingSize *int `pulumi:"minimumRingSize"`
}

// ConfigEntryServiceResolverLoadBalancerRingHashConfigInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs and ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerRingHashConfigInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs{...}
type ConfigEntryServiceResolverLoadBalancerRingHashConfigInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput
	ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput
}

type ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs struct {
	// Determines the maximum number of entries in the hash ring.
	MaximumRingSize pulumi.IntPtrInput `pulumi:"maximumRingSize"`
	// Determines the minimum number of entries in the hash ring.
	MinimumRingSize pulumi.IntPtrInput `pulumi:"minimumRingSize"`
}

func (ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerRingHashConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs) ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs) ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput)
}

// ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayInput is an input type that accepts ConfigEntryServiceResolverLoadBalancerRingHashConfigArray and ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayInput` via:
//
//	ConfigEntryServiceResolverLoadBalancerRingHashConfigArray{ ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs{...} }
type ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput
	ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutputWithContext(context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput
}

type ConfigEntryServiceResolverLoadBalancerRingHashConfigArray []ConfigEntryServiceResolverLoadBalancerRingHashConfigInput

func (ConfigEntryServiceResolverLoadBalancerRingHashConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerRingHashConfig)(nil)).Elem()
}

func (i ConfigEntryServiceResolverLoadBalancerRingHashConfigArray) ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput {
	return i.ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverLoadBalancerRingHashConfigArray) ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput)
}

type ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerRingHashConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput) ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput) ToConfigEntryServiceResolverLoadBalancerRingHashConfigOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput {
	return o
}

// Determines the maximum number of entries in the hash ring.
func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput) MaximumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerRingHashConfig) *int { return v.MaximumRingSize }).(pulumi.IntPtrOutput)
}

// Determines the minimum number of entries in the hash ring.
func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput) MinimumRingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverLoadBalancerRingHashConfig) *int { return v.MinimumRingSize }).(pulumi.IntPtrOutput)
}

type ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverLoadBalancerRingHashConfig)(nil)).Elem()
}

func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput() ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput) ToConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverLoadBalancerRingHashConfig {
		return vs[0].([]ConfigEntryServiceResolverLoadBalancerRingHashConfig)[vs[1].(int)]
	}).(ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput)
}

type ConfigEntryServiceResolverRedirect struct {
	// Specifies the datacenter at the redirect’s destination that resolves local upstream requests.
	Datacenter *string `pulumi:"datacenter"`
	// Specifies the namespace at the redirect’s destination that resolves local upstream requests.
	Namespace *string `pulumi:"namespace"`
	// Specifies the admin partition at the redirect’s destination that resolves local upstream requests.
	Partition *string `pulumi:"partition"`
	// Specifies the cluster with an active cluster peering connection at the redirect’s destination that resolves local upstream requests.
	Peer *string `pulumi:"peer"`
	// Specifies the sameness group at the redirect’s destination that resolves local upstream requests.
	SamenessGroup *string `pulumi:"samenessGroup"`
	// Specifies the name of a service at the redirect’s destination that resolves local upstream requests.
	Service *string `pulumi:"service"`
	// Specifies the name of a subset of services at the redirect’s destination that resolves local upstream requests. If empty, the default subset is used. If specified, you must also specify at least one of the following in the same Redirect map: Service, Namespace, andDatacenter.
	ServiceSubset *string `pulumi:"serviceSubset"`
}

// ConfigEntryServiceResolverRedirectInput is an input type that accepts ConfigEntryServiceResolverRedirectArgs and ConfigEntryServiceResolverRedirectOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverRedirectInput` via:
//
//	ConfigEntryServiceResolverRedirectArgs{...}
type ConfigEntryServiceResolverRedirectInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverRedirectOutput() ConfigEntryServiceResolverRedirectOutput
	ToConfigEntryServiceResolverRedirectOutputWithContext(context.Context) ConfigEntryServiceResolverRedirectOutput
}

type ConfigEntryServiceResolverRedirectArgs struct {
	// Specifies the datacenter at the redirect’s destination that resolves local upstream requests.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Specifies the namespace at the redirect’s destination that resolves local upstream requests.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the admin partition at the redirect’s destination that resolves local upstream requests.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Specifies the cluster with an active cluster peering connection at the redirect’s destination that resolves local upstream requests.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
	// Specifies the sameness group at the redirect’s destination that resolves local upstream requests.
	SamenessGroup pulumi.StringPtrInput `pulumi:"samenessGroup"`
	// Specifies the name of a service at the redirect’s destination that resolves local upstream requests.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Specifies the name of a subset of services at the redirect’s destination that resolves local upstream requests. If empty, the default subset is used. If specified, you must also specify at least one of the following in the same Redirect map: Service, Namespace, andDatacenter.
	ServiceSubset pulumi.StringPtrInput `pulumi:"serviceSubset"`
}

func (ConfigEntryServiceResolverRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverRedirect)(nil)).Elem()
}

func (i ConfigEntryServiceResolverRedirectArgs) ToConfigEntryServiceResolverRedirectOutput() ConfigEntryServiceResolverRedirectOutput {
	return i.ToConfigEntryServiceResolverRedirectOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverRedirectArgs) ToConfigEntryServiceResolverRedirectOutputWithContext(ctx context.Context) ConfigEntryServiceResolverRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverRedirectOutput)
}

// ConfigEntryServiceResolverRedirectArrayInput is an input type that accepts ConfigEntryServiceResolverRedirectArray and ConfigEntryServiceResolverRedirectArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverRedirectArrayInput` via:
//
//	ConfigEntryServiceResolverRedirectArray{ ConfigEntryServiceResolverRedirectArgs{...} }
type ConfigEntryServiceResolverRedirectArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverRedirectArrayOutput() ConfigEntryServiceResolverRedirectArrayOutput
	ToConfigEntryServiceResolverRedirectArrayOutputWithContext(context.Context) ConfigEntryServiceResolverRedirectArrayOutput
}

type ConfigEntryServiceResolverRedirectArray []ConfigEntryServiceResolverRedirectInput

func (ConfigEntryServiceResolverRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverRedirect)(nil)).Elem()
}

func (i ConfigEntryServiceResolverRedirectArray) ToConfigEntryServiceResolverRedirectArrayOutput() ConfigEntryServiceResolverRedirectArrayOutput {
	return i.ToConfigEntryServiceResolverRedirectArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverRedirectArray) ToConfigEntryServiceResolverRedirectArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverRedirectArrayOutput)
}

type ConfigEntryServiceResolverRedirectOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverRedirect)(nil)).Elem()
}

func (o ConfigEntryServiceResolverRedirectOutput) ToConfigEntryServiceResolverRedirectOutput() ConfigEntryServiceResolverRedirectOutput {
	return o
}

func (o ConfigEntryServiceResolverRedirectOutput) ToConfigEntryServiceResolverRedirectOutputWithContext(ctx context.Context) ConfigEntryServiceResolverRedirectOutput {
	return o
}

// Specifies the datacenter at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Specifies the namespace at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the admin partition at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Specifies the cluster with an active cluster peering connection at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

// Specifies the sameness group at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) SamenessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.SamenessGroup }).(pulumi.StringPtrOutput)
}

// Specifies the name of a service at the redirect’s destination that resolves local upstream requests.
func (o ConfigEntryServiceResolverRedirectOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Specifies the name of a subset of services at the redirect’s destination that resolves local upstream requests. If empty, the default subset is used. If specified, you must also specify at least one of the following in the same Redirect map: Service, Namespace, andDatacenter.
func (o ConfigEntryServiceResolverRedirectOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverRedirect) *string { return v.ServiceSubset }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceResolverRedirectArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverRedirect)(nil)).Elem()
}

func (o ConfigEntryServiceResolverRedirectArrayOutput) ToConfigEntryServiceResolverRedirectArrayOutput() ConfigEntryServiceResolverRedirectArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverRedirectArrayOutput) ToConfigEntryServiceResolverRedirectArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverRedirectArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverRedirectArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverRedirect {
		return vs[0].([]ConfigEntryServiceResolverRedirect)[vs[1].(int)]
	}).(ConfigEntryServiceResolverRedirectOutput)
}

type ConfigEntryServiceResolverSubset struct {
	// Specifies an expression that filters the DNS elements of service instances that belong to the subset. If empty, all healthy instances of a service are returned.
	Filter string `pulumi:"filter"`
	// Name of subset.
	Name string `pulumi:"name"`
	// Determines if instances that return a warning from a health check are allowed to resolve a request. When set to false, instances with passing and warning states are considered healthy. When set to true, only instances with a passing health check state are considered healthy.
	OnlyPassing bool `pulumi:"onlyPassing"`
}

// ConfigEntryServiceResolverSubsetInput is an input type that accepts ConfigEntryServiceResolverSubsetArgs and ConfigEntryServiceResolverSubsetOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverSubsetInput` via:
//
//	ConfigEntryServiceResolverSubsetArgs{...}
type ConfigEntryServiceResolverSubsetInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverSubsetOutput() ConfigEntryServiceResolverSubsetOutput
	ToConfigEntryServiceResolverSubsetOutputWithContext(context.Context) ConfigEntryServiceResolverSubsetOutput
}

type ConfigEntryServiceResolverSubsetArgs struct {
	// Specifies an expression that filters the DNS elements of service instances that belong to the subset. If empty, all healthy instances of a service are returned.
	Filter pulumi.StringInput `pulumi:"filter"`
	// Name of subset.
	Name pulumi.StringInput `pulumi:"name"`
	// Determines if instances that return a warning from a health check are allowed to resolve a request. When set to false, instances with passing and warning states are considered healthy. When set to true, only instances with a passing health check state are considered healthy.
	OnlyPassing pulumi.BoolInput `pulumi:"onlyPassing"`
}

func (ConfigEntryServiceResolverSubsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverSubset)(nil)).Elem()
}

func (i ConfigEntryServiceResolverSubsetArgs) ToConfigEntryServiceResolverSubsetOutput() ConfigEntryServiceResolverSubsetOutput {
	return i.ToConfigEntryServiceResolverSubsetOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverSubsetArgs) ToConfigEntryServiceResolverSubsetOutputWithContext(ctx context.Context) ConfigEntryServiceResolverSubsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverSubsetOutput)
}

// ConfigEntryServiceResolverSubsetArrayInput is an input type that accepts ConfigEntryServiceResolverSubsetArray and ConfigEntryServiceResolverSubsetArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceResolverSubsetArrayInput` via:
//
//	ConfigEntryServiceResolverSubsetArray{ ConfigEntryServiceResolverSubsetArgs{...} }
type ConfigEntryServiceResolverSubsetArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceResolverSubsetArrayOutput() ConfigEntryServiceResolverSubsetArrayOutput
	ToConfigEntryServiceResolverSubsetArrayOutputWithContext(context.Context) ConfigEntryServiceResolverSubsetArrayOutput
}

type ConfigEntryServiceResolverSubsetArray []ConfigEntryServiceResolverSubsetInput

func (ConfigEntryServiceResolverSubsetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverSubset)(nil)).Elem()
}

func (i ConfigEntryServiceResolverSubsetArray) ToConfigEntryServiceResolverSubsetArrayOutput() ConfigEntryServiceResolverSubsetArrayOutput {
	return i.ToConfigEntryServiceResolverSubsetArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceResolverSubsetArray) ToConfigEntryServiceResolverSubsetArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverSubsetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceResolverSubsetArrayOutput)
}

type ConfigEntryServiceResolverSubsetOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverSubsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceResolverSubset)(nil)).Elem()
}

func (o ConfigEntryServiceResolverSubsetOutput) ToConfigEntryServiceResolverSubsetOutput() ConfigEntryServiceResolverSubsetOutput {
	return o
}

func (o ConfigEntryServiceResolverSubsetOutput) ToConfigEntryServiceResolverSubsetOutputWithContext(ctx context.Context) ConfigEntryServiceResolverSubsetOutput {
	return o
}

// Specifies an expression that filters the DNS elements of service instances that belong to the subset. If empty, all healthy instances of a service are returned.
func (o ConfigEntryServiceResolverSubsetOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverSubset) string { return v.Filter }).(pulumi.StringOutput)
}

// Name of subset.
func (o ConfigEntryServiceResolverSubsetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverSubset) string { return v.Name }).(pulumi.StringOutput)
}

// Determines if instances that return a warning from a health check are allowed to resolve a request. When set to false, instances with passing and warning states are considered healthy. When set to true, only instances with a passing health check state are considered healthy.
func (o ConfigEntryServiceResolverSubsetOutput) OnlyPassing() pulumi.BoolOutput {
	return o.ApplyT(func(v ConfigEntryServiceResolverSubset) bool { return v.OnlyPassing }).(pulumi.BoolOutput)
}

type ConfigEntryServiceResolverSubsetArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceResolverSubsetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceResolverSubset)(nil)).Elem()
}

func (o ConfigEntryServiceResolverSubsetArrayOutput) ToConfigEntryServiceResolverSubsetArrayOutput() ConfigEntryServiceResolverSubsetArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverSubsetArrayOutput) ToConfigEntryServiceResolverSubsetArrayOutputWithContext(ctx context.Context) ConfigEntryServiceResolverSubsetArrayOutput {
	return o
}

func (o ConfigEntryServiceResolverSubsetArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceResolverSubsetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceResolverSubset {
		return vs[0].([]ConfigEntryServiceResolverSubset)[vs[1].(int)]
	}).(ConfigEntryServiceResolverSubsetOutput)
}

type ConfigEntryServiceRouterRoute struct {
	// Specifies the target service to route matching requests to, as well as behavior for the request to follow when routed.
	Destination *ConfigEntryServiceRouterRouteDestination `pulumi:"destination"`
	// Describes a set of criteria that Consul compares incoming L7 traffic with.
	Match *ConfigEntryServiceRouterRouteMatch `pulumi:"match"`
}

// ConfigEntryServiceRouterRouteInput is an input type that accepts ConfigEntryServiceRouterRouteArgs and ConfigEntryServiceRouterRouteOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteInput` via:
//
//	ConfigEntryServiceRouterRouteArgs{...}
type ConfigEntryServiceRouterRouteInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteOutput() ConfigEntryServiceRouterRouteOutput
	ToConfigEntryServiceRouterRouteOutputWithContext(context.Context) ConfigEntryServiceRouterRouteOutput
}

type ConfigEntryServiceRouterRouteArgs struct {
	// Specifies the target service to route matching requests to, as well as behavior for the request to follow when routed.
	Destination ConfigEntryServiceRouterRouteDestinationPtrInput `pulumi:"destination"`
	// Describes a set of criteria that Consul compares incoming L7 traffic with.
	Match ConfigEntryServiceRouterRouteMatchPtrInput `pulumi:"match"`
}

func (ConfigEntryServiceRouterRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRoute)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteArgs) ToConfigEntryServiceRouterRouteOutput() ConfigEntryServiceRouterRouteOutput {
	return i.ToConfigEntryServiceRouterRouteOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteArgs) ToConfigEntryServiceRouterRouteOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteOutput)
}

// ConfigEntryServiceRouterRouteArrayInput is an input type that accepts ConfigEntryServiceRouterRouteArray and ConfigEntryServiceRouterRouteArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteArrayInput` via:
//
//	ConfigEntryServiceRouterRouteArray{ ConfigEntryServiceRouterRouteArgs{...} }
type ConfigEntryServiceRouterRouteArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteArrayOutput() ConfigEntryServiceRouterRouteArrayOutput
	ToConfigEntryServiceRouterRouteArrayOutputWithContext(context.Context) ConfigEntryServiceRouterRouteArrayOutput
}

type ConfigEntryServiceRouterRouteArray []ConfigEntryServiceRouterRouteInput

func (ConfigEntryServiceRouterRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRoute)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteArray) ToConfigEntryServiceRouterRouteArrayOutput() ConfigEntryServiceRouterRouteArrayOutput {
	return i.ToConfigEntryServiceRouterRouteArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteArray) ToConfigEntryServiceRouterRouteArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteArrayOutput)
}

type ConfigEntryServiceRouterRouteOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRoute)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteOutput) ToConfigEntryServiceRouterRouteOutput() ConfigEntryServiceRouterRouteOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteOutput) ToConfigEntryServiceRouterRouteOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteOutput {
	return o
}

// Specifies the target service to route matching requests to, as well as behavior for the request to follow when routed.
func (o ConfigEntryServiceRouterRouteOutput) Destination() ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRoute) *ConfigEntryServiceRouterRouteDestination { return v.Destination }).(ConfigEntryServiceRouterRouteDestinationPtrOutput)
}

// Describes a set of criteria that Consul compares incoming L7 traffic with.
func (o ConfigEntryServiceRouterRouteOutput) Match() ConfigEntryServiceRouterRouteMatchPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRoute) *ConfigEntryServiceRouterRouteMatch { return v.Match }).(ConfigEntryServiceRouterRouteMatchPtrOutput)
}

type ConfigEntryServiceRouterRouteArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRoute)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteArrayOutput) ToConfigEntryServiceRouterRouteArrayOutput() ConfigEntryServiceRouterRouteArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteArrayOutput) ToConfigEntryServiceRouterRouteArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceRouterRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceRouterRoute {
		return vs[0].([]ConfigEntryServiceRouterRoute)[vs[1].(int)]
	}).(ConfigEntryServiceRouterRouteOutput)
}

type ConfigEntryServiceRouterRouteDestination struct {
	// Specifies the total amount of time permitted for the request stream to be idle.
	IdleTimeout *string `pulumi:"idleTimeout"`
	// Specifies the Consul namespace to resolve the service from instead of the current namespace.
	Namespace *string `pulumi:"namespace"`
	// Specifies the number of times to retry the request when a retry condition occurs.
	NumRetries *int `pulumi:"numRetries"`
	// Specifies the Consul admin partition to resolve the service from instead of the current partition.
	Partition *string `pulumi:"partition"`
	// Specifies rewrites to the HTTP request path before proxying it to its final destination.
	PrefixRewrite *string `pulumi:"prefixRewrite"`
	// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service router.
	RequestHeaders *ConfigEntryServiceRouterRouteDestinationRequestHeaders `pulumi:"requestHeaders"`
	// Specifies the total amount of time permitted for the entire downstream request to be processed, including retry attempts.
	RequestTimeout *string `pulumi:"requestTimeout"`
	// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service router.
	ResponseHeaders *ConfigEntryServiceRouterRouteDestinationResponseHeaders `pulumi:"responseHeaders"`
	// Specifies that connection failure errors that trigger a retry request.
	RetryOnConnectFailure *bool `pulumi:"retryOnConnectFailure"`
	// Specifies a list of integers for HTTP response status codes that trigger a retry request.
	RetryOnStatusCodes []int `pulumi:"retryOnStatusCodes"`
	// Specifies a list of conditions for Consul to retry requests based on the response from an upstream service.
	RetryOns []string `pulumi:"retryOns"`
	// Specifies the name of the service to resolve.
	Service *string `pulumi:"service"`
	// Specifies a named subset of the given service to resolve instead of the one defined as that service's `defaultSubset` in the service resolver configuration entry.
	ServiceSubset *string `pulumi:"serviceSubset"`
}

// ConfigEntryServiceRouterRouteDestinationInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationArgs and ConfigEntryServiceRouterRouteDestinationOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationInput` via:
//
//	ConfigEntryServiceRouterRouteDestinationArgs{...}
type ConfigEntryServiceRouterRouteDestinationInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationOutput() ConfigEntryServiceRouterRouteDestinationOutput
	ToConfigEntryServiceRouterRouteDestinationOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationOutput
}

type ConfigEntryServiceRouterRouteDestinationArgs struct {
	// Specifies the total amount of time permitted for the request stream to be idle.
	IdleTimeout pulumi.StringPtrInput `pulumi:"idleTimeout"`
	// Specifies the Consul namespace to resolve the service from instead of the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the number of times to retry the request when a retry condition occurs.
	NumRetries pulumi.IntPtrInput `pulumi:"numRetries"`
	// Specifies the Consul admin partition to resolve the service from instead of the current partition.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Specifies rewrites to the HTTP request path before proxying it to its final destination.
	PrefixRewrite pulumi.StringPtrInput `pulumi:"prefixRewrite"`
	// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service router.
	RequestHeaders ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput `pulumi:"requestHeaders"`
	// Specifies the total amount of time permitted for the entire downstream request to be processed, including retry attempts.
	RequestTimeout pulumi.StringPtrInput `pulumi:"requestTimeout"`
	// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service router.
	ResponseHeaders ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput `pulumi:"responseHeaders"`
	// Specifies that connection failure errors that trigger a retry request.
	RetryOnConnectFailure pulumi.BoolPtrInput `pulumi:"retryOnConnectFailure"`
	// Specifies a list of integers for HTTP response status codes that trigger a retry request.
	RetryOnStatusCodes pulumi.IntArrayInput `pulumi:"retryOnStatusCodes"`
	// Specifies a list of conditions for Consul to retry requests based on the response from an upstream service.
	RetryOns pulumi.StringArrayInput `pulumi:"retryOns"`
	// Specifies the name of the service to resolve.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Specifies a named subset of the given service to resolve instead of the one defined as that service's `defaultSubset` in the service resolver configuration entry.
	ServiceSubset pulumi.StringPtrInput `pulumi:"serviceSubset"`
}

func (ConfigEntryServiceRouterRouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestination)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteDestinationArgs) ToConfigEntryServiceRouterRouteDestinationOutput() ConfigEntryServiceRouterRouteDestinationOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationArgs) ToConfigEntryServiceRouterRouteDestinationOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationOutput)
}

func (i ConfigEntryServiceRouterRouteDestinationArgs) ToConfigEntryServiceRouterRouteDestinationPtrOutput() ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationArgs) ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationOutput).ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(ctx)
}

// ConfigEntryServiceRouterRouteDestinationPtrInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationArgs, ConfigEntryServiceRouterRouteDestinationPtr and ConfigEntryServiceRouterRouteDestinationPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationPtrInput` via:
//
//	        ConfigEntryServiceRouterRouteDestinationArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceRouterRouteDestinationPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationPtrOutput() ConfigEntryServiceRouterRouteDestinationPtrOutput
	ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationPtrOutput
}

type configEntryServiceRouterRouteDestinationPtrType ConfigEntryServiceRouterRouteDestinationArgs

func ConfigEntryServiceRouterRouteDestinationPtr(v *ConfigEntryServiceRouterRouteDestinationArgs) ConfigEntryServiceRouterRouteDestinationPtrInput {
	return (*configEntryServiceRouterRouteDestinationPtrType)(v)
}

func (*configEntryServiceRouterRouteDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestination)(nil)).Elem()
}

func (i *configEntryServiceRouterRouteDestinationPtrType) ToConfigEntryServiceRouterRouteDestinationPtrOutput() ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceRouterRouteDestinationPtrType) ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationPtrOutput)
}

type ConfigEntryServiceRouterRouteDestinationOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestination)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationOutput) ToConfigEntryServiceRouterRouteDestinationOutput() ConfigEntryServiceRouterRouteDestinationOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationOutput) ToConfigEntryServiceRouterRouteDestinationOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationOutput) ToConfigEntryServiceRouterRouteDestinationPtrOutput() ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return o.ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceRouterRouteDestinationOutput) ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceRouterRouteDestination) *ConfigEntryServiceRouterRouteDestination {
		return &v
	}).(ConfigEntryServiceRouterRouteDestinationPtrOutput)
}

// Specifies the total amount of time permitted for the request stream to be idle.
func (o ConfigEntryServiceRouterRouteDestinationOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// Specifies the Consul namespace to resolve the service from instead of the current namespace.
func (o ConfigEntryServiceRouterRouteDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the number of times to retry the request when a retry condition occurs.
func (o ConfigEntryServiceRouterRouteDestinationOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *int { return v.NumRetries }).(pulumi.IntPtrOutput)
}

// Specifies the Consul admin partition to resolve the service from instead of the current partition.
func (o ConfigEntryServiceRouterRouteDestinationOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Specifies rewrites to the HTTP request path before proxying it to its final destination.
func (o ConfigEntryServiceRouterRouteDestinationOutput) PrefixRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.PrefixRewrite }).(pulumi.StringPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service router.
func (o ConfigEntryServiceRouterRouteDestinationOutput) RequestHeaders() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *ConfigEntryServiceRouterRouteDestinationRequestHeaders {
		return v.RequestHeaders
	}).(ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput)
}

// Specifies the total amount of time permitted for the entire downstream request to be processed, including retry attempts.
func (o ConfigEntryServiceRouterRouteDestinationOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.RequestTimeout }).(pulumi.StringPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service router.
func (o ConfigEntryServiceRouterRouteDestinationOutput) ResponseHeaders() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *ConfigEntryServiceRouterRouteDestinationResponseHeaders {
		return v.ResponseHeaders
	}).(ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput)
}

// Specifies that connection failure errors that trigger a retry request.
func (o ConfigEntryServiceRouterRouteDestinationOutput) RetryOnConnectFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *bool { return v.RetryOnConnectFailure }).(pulumi.BoolPtrOutput)
}

// Specifies a list of integers for HTTP response status codes that trigger a retry request.
func (o ConfigEntryServiceRouterRouteDestinationOutput) RetryOnStatusCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) []int { return v.RetryOnStatusCodes }).(pulumi.IntArrayOutput)
}

// Specifies a list of conditions for Consul to retry requests based on the response from an upstream service.
func (o ConfigEntryServiceRouterRouteDestinationOutput) RetryOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) []string { return v.RetryOns }).(pulumi.StringArrayOutput)
}

// Specifies the name of the service to resolve.
func (o ConfigEntryServiceRouterRouteDestinationOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Specifies a named subset of the given service to resolve instead of the one defined as that service's `defaultSubset` in the service resolver configuration entry.
func (o ConfigEntryServiceRouterRouteDestinationOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestination) *string { return v.ServiceSubset }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceRouterRouteDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestination)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) ToConfigEntryServiceRouterRouteDestinationPtrOutput() ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) ToConfigEntryServiceRouterRouteDestinationPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) Elem() ConfigEntryServiceRouterRouteDestinationOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) ConfigEntryServiceRouterRouteDestination {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceRouterRouteDestination
		return ret
	}).(ConfigEntryServiceRouterRouteDestinationOutput)
}

// Specifies the total amount of time permitted for the request stream to be idle.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.IdleTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies the Consul namespace to resolve the service from instead of the current namespace.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of times to retry the request when a retry condition occurs.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) NumRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *int {
		if v == nil {
			return nil
		}
		return v.NumRetries
	}).(pulumi.IntPtrOutput)
}

// Specifies the Consul admin partition to resolve the service from instead of the current partition.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.StringPtrOutput)
}

// Specifies rewrites to the HTTP request path before proxying it to its final destination.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) PrefixRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.PrefixRewrite
	}).(pulumi.StringPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service router.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) RequestHeaders() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *ConfigEntryServiceRouterRouteDestinationRequestHeaders {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput)
}

// Specifies the total amount of time permitted for the entire downstream request to be processed, including retry attempts.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) RequestTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.StringPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service router.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) ResponseHeaders() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *ConfigEntryServiceRouterRouteDestinationResponseHeaders {
		if v == nil {
			return nil
		}
		return v.ResponseHeaders
	}).(ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput)
}

// Specifies that connection failure errors that trigger a retry request.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) RetryOnConnectFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *bool {
		if v == nil {
			return nil
		}
		return v.RetryOnConnectFailure
	}).(pulumi.BoolPtrOutput)
}

// Specifies a list of integers for HTTP response status codes that trigger a retry request.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) RetryOnStatusCodes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) []int {
		if v == nil {
			return nil
		}
		return v.RetryOnStatusCodes
	}).(pulumi.IntArrayOutput)
}

// Specifies a list of conditions for Consul to retry requests based on the response from an upstream service.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) RetryOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) []string {
		if v == nil {
			return nil
		}
		return v.RetryOns
	}).(pulumi.StringArrayOutput)
}

// Specifies the name of the service to resolve.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Specifies a named subset of the given service to resolve instead of the one defined as that service's `defaultSubset` in the service resolver configuration entry.
func (o ConfigEntryServiceRouterRouteDestinationPtrOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestination) *string {
		if v == nil {
			return nil
		}
		return v.ServiceSubset
	}).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceRouterRouteDestinationRequestHeaders struct {
	// Defines a set of key-value pairs to add to the header. Use header names as the keys.
	Add map[string]string `pulumi:"add"`
	// Defines a list of headers to remove.
	Removes []string `pulumi:"removes"`
	// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
	Set map[string]string `pulumi:"set"`
}

// ConfigEntryServiceRouterRouteDestinationRequestHeadersInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs and ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationRequestHeadersInput` via:
//
//	ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs{...}
type ConfigEntryServiceRouterRouteDestinationRequestHeadersInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput
	ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput
}

type ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs struct {
	// Defines a set of key-value pairs to add to the header. Use header names as the keys.
	Add pulumi.StringMapInput `pulumi:"add"`
	// Defines a list of headers to remove.
	Removes pulumi.StringArrayInput `pulumi:"removes"`
	// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
	Set pulumi.StringMapInput `pulumi:"set"`
}

func (ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationRequestHeaders)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput)
}

func (i ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput).ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(ctx)
}

// ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs, ConfigEntryServiceRouterRouteDestinationRequestHeadersPtr and ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput` via:
//
//	        ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput
	ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput
}

type configEntryServiceRouterRouteDestinationRequestHeadersPtrType ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs

func ConfigEntryServiceRouterRouteDestinationRequestHeadersPtr(v *ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput {
	return (*configEntryServiceRouterRouteDestinationRequestHeadersPtrType)(v)
}

func (*configEntryServiceRouterRouteDestinationRequestHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestinationRequestHeaders)(nil)).Elem()
}

func (i *configEntryServiceRouterRouteDestinationRequestHeadersPtrType) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceRouterRouteDestinationRequestHeadersPtrType) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput)
}

type ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationRequestHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o.ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceRouterRouteDestinationRequestHeaders) *ConfigEntryServiceRouterRouteDestinationRequestHeaders {
		return &v
	}).(ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput)
}

// Defines a set of key-value pairs to add to the header. Use header names as the keys.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationRequestHeaders) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// Defines a list of headers to remove.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationRequestHeaders) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationRequestHeaders) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestinationRequestHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) ToConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) Elem() ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationRequestHeaders) ConfigEntryServiceRouterRouteDestinationRequestHeaders {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceRouterRouteDestinationRequestHeaders
		return ret
	}).(ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput)
}

// Defines a set of key-value pairs to add to the header. Use header names as the keys.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationRequestHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

// Defines a list of headers to remove.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationRequestHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Removes
	}).(pulumi.StringArrayOutput)
}

// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
func (o ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationRequestHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type ConfigEntryServiceRouterRouteDestinationResponseHeaders struct {
	// Defines a set of key-value pairs to add to the header. Use header names as the keys.
	Add map[string]string `pulumi:"add"`
	// Defines a list of headers to remove.
	Removes []string `pulumi:"removes"`
	// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
	Set map[string]string `pulumi:"set"`
}

// ConfigEntryServiceRouterRouteDestinationResponseHeadersInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs and ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationResponseHeadersInput` via:
//
//	ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs{...}
type ConfigEntryServiceRouterRouteDestinationResponseHeadersInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput
	ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput
}

type ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs struct {
	// Defines a set of key-value pairs to add to the header. Use header names as the keys.
	Add pulumi.StringMapInput `pulumi:"add"`
	// Defines a list of headers to remove.
	Removes pulumi.StringArrayInput `pulumi:"removes"`
	// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
	Set pulumi.StringMapInput `pulumi:"set"`
}

func (ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationResponseHeaders)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput)
}

func (i ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput).ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(ctx)
}

// ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput is an input type that accepts ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs, ConfigEntryServiceRouterRouteDestinationResponseHeadersPtr and ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput` via:
//
//	        ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput
	ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput
}

type configEntryServiceRouterRouteDestinationResponseHeadersPtrType ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs

func ConfigEntryServiceRouterRouteDestinationResponseHeadersPtr(v *ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput {
	return (*configEntryServiceRouterRouteDestinationResponseHeadersPtrType)(v)
}

func (*configEntryServiceRouterRouteDestinationResponseHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestinationResponseHeaders)(nil)).Elem()
}

func (i *configEntryServiceRouterRouteDestinationResponseHeadersPtrType) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return i.ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceRouterRouteDestinationResponseHeadersPtrType) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput)
}

type ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationResponseHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o.ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceRouterRouteDestinationResponseHeaders) *ConfigEntryServiceRouterRouteDestinationResponseHeaders {
		return &v
	}).(ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput)
}

// Defines a set of key-value pairs to add to the header. Use header names as the keys.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationResponseHeaders) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// Defines a list of headers to remove.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationResponseHeaders) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteDestinationResponseHeaders) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteDestinationResponseHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput() ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) ToConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) Elem() ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationResponseHeaders) ConfigEntryServiceRouterRouteDestinationResponseHeaders {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceRouterRouteDestinationResponseHeaders
		return ret
	}).(ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput)
}

// Defines a set of key-value pairs to add to the header. Use header names as the keys.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationResponseHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

// Defines a list of headers to remove.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationResponseHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Removes
	}).(pulumi.StringArrayOutput)
}

// Defines a set of key-value pairs to add to the request header or to replace existing header values with.
func (o ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteDestinationResponseHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type ConfigEntryServiceRouterRouteMatch struct {
	// Specifies a set of HTTP criteria used to evaluate incoming L7 traffic for matches.
	Http *ConfigEntryServiceRouterRouteMatchHttp `pulumi:"http"`
}

// ConfigEntryServiceRouterRouteMatchInput is an input type that accepts ConfigEntryServiceRouterRouteMatchArgs and ConfigEntryServiceRouterRouteMatchOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchInput` via:
//
//	ConfigEntryServiceRouterRouteMatchArgs{...}
type ConfigEntryServiceRouterRouteMatchInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchOutput() ConfigEntryServiceRouterRouteMatchOutput
	ToConfigEntryServiceRouterRouteMatchOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchOutput
}

type ConfigEntryServiceRouterRouteMatchArgs struct {
	// Specifies a set of HTTP criteria used to evaluate incoming L7 traffic for matches.
	Http ConfigEntryServiceRouterRouteMatchHttpPtrInput `pulumi:"http"`
}

func (ConfigEntryServiceRouterRouteMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatch)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchArgs) ToConfigEntryServiceRouterRouteMatchOutput() ConfigEntryServiceRouterRouteMatchOutput {
	return i.ToConfigEntryServiceRouterRouteMatchOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchArgs) ToConfigEntryServiceRouterRouteMatchOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchOutput)
}

func (i ConfigEntryServiceRouterRouteMatchArgs) ToConfigEntryServiceRouterRouteMatchPtrOutput() ConfigEntryServiceRouterRouteMatchPtrOutput {
	return i.ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchArgs) ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchOutput).ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(ctx)
}

// ConfigEntryServiceRouterRouteMatchPtrInput is an input type that accepts ConfigEntryServiceRouterRouteMatchArgs, ConfigEntryServiceRouterRouteMatchPtr and ConfigEntryServiceRouterRouteMatchPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchPtrInput` via:
//
//	        ConfigEntryServiceRouterRouteMatchArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceRouterRouteMatchPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchPtrOutput() ConfigEntryServiceRouterRouteMatchPtrOutput
	ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchPtrOutput
}

type configEntryServiceRouterRouteMatchPtrType ConfigEntryServiceRouterRouteMatchArgs

func ConfigEntryServiceRouterRouteMatchPtr(v *ConfigEntryServiceRouterRouteMatchArgs) ConfigEntryServiceRouterRouteMatchPtrInput {
	return (*configEntryServiceRouterRouteMatchPtrType)(v)
}

func (*configEntryServiceRouterRouteMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteMatch)(nil)).Elem()
}

func (i *configEntryServiceRouterRouteMatchPtrType) ToConfigEntryServiceRouterRouteMatchPtrOutput() ConfigEntryServiceRouterRouteMatchPtrOutput {
	return i.ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceRouterRouteMatchPtrType) ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatch)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchOutput) ToConfigEntryServiceRouterRouteMatchOutput() ConfigEntryServiceRouterRouteMatchOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchOutput) ToConfigEntryServiceRouterRouteMatchOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchOutput) ToConfigEntryServiceRouterRouteMatchPtrOutput() ConfigEntryServiceRouterRouteMatchPtrOutput {
	return o.ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceRouterRouteMatchOutput) ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceRouterRouteMatch) *ConfigEntryServiceRouterRouteMatch {
		return &v
	}).(ConfigEntryServiceRouterRouteMatchPtrOutput)
}

// Specifies a set of HTTP criteria used to evaluate incoming L7 traffic for matches.
func (o ConfigEntryServiceRouterRouteMatchOutput) Http() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatch) *ConfigEntryServiceRouterRouteMatchHttp { return v.Http }).(ConfigEntryServiceRouterRouteMatchHttpPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteMatch)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchPtrOutput) ToConfigEntryServiceRouterRouteMatchPtrOutput() ConfigEntryServiceRouterRouteMatchPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchPtrOutput) ToConfigEntryServiceRouterRouteMatchPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchPtrOutput) Elem() ConfigEntryServiceRouterRouteMatchOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatch) ConfigEntryServiceRouterRouteMatch {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceRouterRouteMatch
		return ret
	}).(ConfigEntryServiceRouterRouteMatchOutput)
}

// Specifies a set of HTTP criteria used to evaluate incoming L7 traffic for matches.
func (o ConfigEntryServiceRouterRouteMatchPtrOutput) Http() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatch) *ConfigEntryServiceRouterRouteMatchHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ConfigEntryServiceRouterRouteMatchHttpPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchHttp struct {
	// Specifies information in the HTTP request header to match with.
	Headers []ConfigEntryServiceRouterRouteMatchHttpHeader `pulumi:"headers"`
	// Specifies HTTP methods that the match applies to.
	Methods []string `pulumi:"methods"`
	// Specifies the exact path to match on the HTTP request path.
	PathExact *string `pulumi:"pathExact"`
	// Specifies the path prefix to match on the HTTP request path.
	PathPrefix *string `pulumi:"pathPrefix"`
	// Specifies a regular expression to match on the HTTP request path.
	PathRegex *string `pulumi:"pathRegex"`
	// Specifies information to match to on HTTP query parameters.
	QueryParams []ConfigEntryServiceRouterRouteMatchHttpQueryParam `pulumi:"queryParams"`
}

// ConfigEntryServiceRouterRouteMatchHttpInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpArgs and ConfigEntryServiceRouterRouteMatchHttpOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpInput` via:
//
//	ConfigEntryServiceRouterRouteMatchHttpArgs{...}
type ConfigEntryServiceRouterRouteMatchHttpInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpOutput() ConfigEntryServiceRouterRouteMatchHttpOutput
	ToConfigEntryServiceRouterRouteMatchHttpOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpOutput
}

type ConfigEntryServiceRouterRouteMatchHttpArgs struct {
	// Specifies information in the HTTP request header to match with.
	Headers ConfigEntryServiceRouterRouteMatchHttpHeaderArrayInput `pulumi:"headers"`
	// Specifies HTTP methods that the match applies to.
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// Specifies the exact path to match on the HTTP request path.
	PathExact pulumi.StringPtrInput `pulumi:"pathExact"`
	// Specifies the path prefix to match on the HTTP request path.
	PathPrefix pulumi.StringPtrInput `pulumi:"pathPrefix"`
	// Specifies a regular expression to match on the HTTP request path.
	PathRegex pulumi.StringPtrInput `pulumi:"pathRegex"`
	// Specifies information to match to on HTTP query parameters.
	QueryParams ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayInput `pulumi:"queryParams"`
}

func (ConfigEntryServiceRouterRouteMatchHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttp)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchHttpArgs) ToConfigEntryServiceRouterRouteMatchHttpOutput() ConfigEntryServiceRouterRouteMatchHttpOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpArgs) ToConfigEntryServiceRouterRouteMatchHttpOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpOutput)
}

func (i ConfigEntryServiceRouterRouteMatchHttpArgs) ToConfigEntryServiceRouterRouteMatchHttpPtrOutput() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpArgs) ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpOutput).ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(ctx)
}

// ConfigEntryServiceRouterRouteMatchHttpPtrInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpArgs, ConfigEntryServiceRouterRouteMatchHttpPtr and ConfigEntryServiceRouterRouteMatchHttpPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpPtrInput` via:
//
//	        ConfigEntryServiceRouterRouteMatchHttpArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceRouterRouteMatchHttpPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpPtrOutput() ConfigEntryServiceRouterRouteMatchHttpPtrOutput
	ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpPtrOutput
}

type configEntryServiceRouterRouteMatchHttpPtrType ConfigEntryServiceRouterRouteMatchHttpArgs

func ConfigEntryServiceRouterRouteMatchHttpPtr(v *ConfigEntryServiceRouterRouteMatchHttpArgs) ConfigEntryServiceRouterRouteMatchHttpPtrInput {
	return (*configEntryServiceRouterRouteMatchHttpPtrType)(v)
}

func (*configEntryServiceRouterRouteMatchHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteMatchHttp)(nil)).Elem()
}

func (i *configEntryServiceRouterRouteMatchHttpPtrType) ToConfigEntryServiceRouterRouteMatchHttpPtrOutput() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceRouterRouteMatchHttpPtrType) ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttp)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpOutput) ToConfigEntryServiceRouterRouteMatchHttpOutput() ConfigEntryServiceRouterRouteMatchHttpOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpOutput) ToConfigEntryServiceRouterRouteMatchHttpOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpOutput) ToConfigEntryServiceRouterRouteMatchHttpPtrOutput() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o.ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceRouterRouteMatchHttpOutput) ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceRouterRouteMatchHttp) *ConfigEntryServiceRouterRouteMatchHttp {
		return &v
	}).(ConfigEntryServiceRouterRouteMatchHttpPtrOutput)
}

// Specifies information in the HTTP request header to match with.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) Headers() ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) []ConfigEntryServiceRouterRouteMatchHttpHeader {
		return v.Headers
	}).(ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput)
}

// Specifies HTTP methods that the match applies to.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// Specifies the exact path to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) PathExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) *string { return v.PathExact }).(pulumi.StringPtrOutput)
}

// Specifies the path prefix to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) PathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) *string { return v.PathPrefix }).(pulumi.StringPtrOutput)
}

// Specifies a regular expression to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) *string { return v.PathRegex }).(pulumi.StringPtrOutput)
}

// Specifies information to match to on HTTP query parameters.
func (o ConfigEntryServiceRouterRouteMatchHttpOutput) QueryParams() ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttp) []ConfigEntryServiceRouterRouteMatchHttpQueryParam {
		return v.QueryParams
	}).(ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceRouterRouteMatchHttp)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) ToConfigEntryServiceRouterRouteMatchHttpPtrOutput() ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) ToConfigEntryServiceRouterRouteMatchHttpPtrOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpPtrOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) Elem() ConfigEntryServiceRouterRouteMatchHttpOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) ConfigEntryServiceRouterRouteMatchHttp {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceRouterRouteMatchHttp
		return ret
	}).(ConfigEntryServiceRouterRouteMatchHttpOutput)
}

// Specifies information in the HTTP request header to match with.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) Headers() ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) []ConfigEntryServiceRouterRouteMatchHttpHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput)
}

// Specifies HTTP methods that the match applies to.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) []string {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.StringArrayOutput)
}

// Specifies the exact path to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) PathExact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) *string {
		if v == nil {
			return nil
		}
		return v.PathExact
	}).(pulumi.StringPtrOutput)
}

// Specifies the path prefix to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) PathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) *string {
		if v == nil {
			return nil
		}
		return v.PathPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies a regular expression to match on the HTTP request path.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) *string {
		if v == nil {
			return nil
		}
		return v.PathRegex
	}).(pulumi.StringPtrOutput)
}

// Specifies information to match to on HTTP query parameters.
func (o ConfigEntryServiceRouterRouteMatchHttpPtrOutput) QueryParams() ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceRouterRouteMatchHttp) []ConfigEntryServiceRouterRouteMatchHttpQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpHeader struct {
	// Specifies that a request matches when the header with the given name is this exact value.
	Exact *string `pulumi:"exact"`
	// Specifies that the logic for the HTTP header match should be inverted.
	Invert *bool `pulumi:"invert"`
	// Specifies the name of the HTTP header to match.
	Name *string `pulumi:"name"`
	// Specifies that a request matches when the header with the given name has this prefix.
	Prefix *string `pulumi:"prefix"`
	// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
	Present *bool `pulumi:"present"`
	// Specifies that a request matches when the header with the given name matches this regular expression.
	Regex *string `pulumi:"regex"`
	// Specifies that a request matches when the header with the given name has this suffix.
	Suffix *string `pulumi:"suffix"`
}

// ConfigEntryServiceRouterRouteMatchHttpHeaderInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpHeaderArgs and ConfigEntryServiceRouterRouteMatchHttpHeaderOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpHeaderInput` via:
//
//	ConfigEntryServiceRouterRouteMatchHttpHeaderArgs{...}
type ConfigEntryServiceRouterRouteMatchHttpHeaderInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpHeaderOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderOutput
	ToConfigEntryServiceRouterRouteMatchHttpHeaderOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderOutput
}

type ConfigEntryServiceRouterRouteMatchHttpHeaderArgs struct {
	// Specifies that a request matches when the header with the given name is this exact value.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specifies that the logic for the HTTP header match should be inverted.
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// Specifies the name of the HTTP header to match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies that a request matches when the header with the given name has this prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
	Present pulumi.BoolPtrInput `pulumi:"present"`
	// Specifies that a request matches when the header with the given name matches this regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
	// Specifies that a request matches when the header with the given name has this suffix.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (ConfigEntryServiceRouterRouteMatchHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpHeader)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchHttpHeaderArgs) ToConfigEntryServiceRouterRouteMatchHttpHeaderOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpHeaderOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpHeaderArgs) ToConfigEntryServiceRouterRouteMatchHttpHeaderOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpHeaderOutput)
}

// ConfigEntryServiceRouterRouteMatchHttpHeaderArrayInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpHeaderArray and ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpHeaderArrayInput` via:
//
//	ConfigEntryServiceRouterRouteMatchHttpHeaderArray{ ConfigEntryServiceRouterRouteMatchHttpHeaderArgs{...} }
type ConfigEntryServiceRouterRouteMatchHttpHeaderArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput
	ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput
}

type ConfigEntryServiceRouterRouteMatchHttpHeaderArray []ConfigEntryServiceRouterRouteMatchHttpHeaderInput

func (ConfigEntryServiceRouterRouteMatchHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRouteMatchHttpHeader)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchHttpHeaderArray) ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpHeaderArray) ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpHeaderOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpHeader)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) ToConfigEntryServiceRouterRouteMatchHttpHeaderOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) ToConfigEntryServiceRouterRouteMatchHttpHeaderOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderOutput {
	return o
}

// Specifies that a request matches when the header with the given name is this exact value.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specifies that the logic for the HTTP header match should be inverted.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the HTTP header to match.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies that a request matches when the header with the given name has this prefix.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Present() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *bool { return v.Present }).(pulumi.BoolPtrOutput)
}

// Specifies that a request matches when the header with the given name matches this regular expression.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

// Specifies that a request matches when the header with the given name has this suffix.
func (o ConfigEntryServiceRouterRouteMatchHttpHeaderOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpHeader) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRouteMatchHttpHeader)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput) ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput() ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput) ToConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceRouterRouteMatchHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceRouterRouteMatchHttpHeader {
		return vs[0].([]ConfigEntryServiceRouterRouteMatchHttpHeader)[vs[1].(int)]
	}).(ConfigEntryServiceRouterRouteMatchHttpHeaderOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpQueryParam struct {
	// Specifies that a request matches when the header with the given name is this exact value.
	Exact *string `pulumi:"exact"`
	// Specifies the name of the HTTP header to match.
	Name *string `pulumi:"name"`
	// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
	Present *bool `pulumi:"present"`
	// Specifies that a request matches when the header with the given name matches this regular expression.
	Regex *string `pulumi:"regex"`
}

// ConfigEntryServiceRouterRouteMatchHttpQueryParamInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs and ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpQueryParamInput` via:
//
//	ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs{...}
type ConfigEntryServiceRouterRouteMatchHttpQueryParamInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput
	ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput
}

type ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs struct {
	// Specifies that a request matches when the header with the given name is this exact value.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Specifies the name of the HTTP header to match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
	Present pulumi.BoolPtrInput `pulumi:"present"`
	// Specifies that a request matches when the header with the given name matches this regular expression.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpQueryParam)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs) ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs) ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput)
}

// ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayInput is an input type that accepts ConfigEntryServiceRouterRouteMatchHttpQueryParamArray and ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayInput` via:
//
//	ConfigEntryServiceRouterRouteMatchHttpQueryParamArray{ ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs{...} }
type ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput
	ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutputWithContext(context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput
}

type ConfigEntryServiceRouterRouteMatchHttpQueryParamArray []ConfigEntryServiceRouterRouteMatchHttpQueryParamInput

func (ConfigEntryServiceRouterRouteMatchHttpQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRouteMatchHttpQueryParam)(nil)).Elem()
}

func (i ConfigEntryServiceRouterRouteMatchHttpQueryParamArray) ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return i.ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceRouterRouteMatchHttpQueryParamArray) ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpQueryParam)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) ToConfigEntryServiceRouterRouteMatchHttpQueryParamOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput {
	return o
}

// Specifies that a request matches when the header with the given name is this exact value.
func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpQueryParam) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Specifies the name of the HTTP header to match.
func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpQueryParam) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies that a request matches when the value in the `name` argument is present anywhere in the HTTP header.
func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) Present() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpQueryParam) *bool { return v.Present }).(pulumi.BoolPtrOutput)
}

// Specifies that a request matches when the header with the given name matches this regular expression.
func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceRouterRouteMatchHttpQueryParam) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceRouterRouteMatchHttpQueryParam)(nil)).Elem()
}

func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput) ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput() ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput) ToConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutputWithContext(ctx context.Context) ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput {
	return o
}

func (o ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceRouterRouteMatchHttpQueryParam {
		return vs[0].([]ConfigEntryServiceRouterRouteMatchHttpQueryParam)[vs[1].(int)]
	}).(ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput)
}

type ConfigEntryServiceSplitterSplit struct {
	// Specifies the namespace to use in the FQDN when resolving the service.
	Namespace *string `pulumi:"namespace"`
	// Specifies the admin partition to use in the FQDN when resolving the service.
	Partition *string `pulumi:"partition"`
	// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
	RequestHeaders *ConfigEntryServiceSplitterSplitRequestHeaders `pulumi:"requestHeaders"`
	// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
	ResponseHeaders *ConfigEntryServiceSplitterSplitResponseHeaders `pulumi:"responseHeaders"`
	// Specifies the name of the service to resolve.
	Service string `pulumi:"service"`
	// Specifies a subset of the service to resolve. A service subset assigns a name to a specific subset of discoverable service instances within a datacenter, such as `version2` or `canary`. All services have an unnamed default subset that returns all healthy instances.
	ServiceSubset *string `pulumi:"serviceSubset"`
	// Specifies the percentage of traffic sent to the set of service instances specified in the `service` field. Each weight must be a floating integer between `0` and `100`. The smallest representable value is `.01`. The sum of weights across all splits must add up to `100`.
	Weight float64 `pulumi:"weight"`
}

// ConfigEntryServiceSplitterSplitInput is an input type that accepts ConfigEntryServiceSplitterSplitArgs and ConfigEntryServiceSplitterSplitOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitInput` via:
//
//	ConfigEntryServiceSplitterSplitArgs{...}
type ConfigEntryServiceSplitterSplitInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitOutput() ConfigEntryServiceSplitterSplitOutput
	ToConfigEntryServiceSplitterSplitOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitOutput
}

type ConfigEntryServiceSplitterSplitArgs struct {
	// Specifies the namespace to use in the FQDN when resolving the service.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specifies the admin partition to use in the FQDN when resolving the service.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
	RequestHeaders ConfigEntryServiceSplitterSplitRequestHeadersPtrInput `pulumi:"requestHeaders"`
	// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
	ResponseHeaders ConfigEntryServiceSplitterSplitResponseHeadersPtrInput `pulumi:"responseHeaders"`
	// Specifies the name of the service to resolve.
	Service pulumi.StringInput `pulumi:"service"`
	// Specifies a subset of the service to resolve. A service subset assigns a name to a specific subset of discoverable service instances within a datacenter, such as `version2` or `canary`. All services have an unnamed default subset that returns all healthy instances.
	ServiceSubset pulumi.StringPtrInput `pulumi:"serviceSubset"`
	// Specifies the percentage of traffic sent to the set of service instances specified in the `service` field. Each weight must be a floating integer between `0` and `100`. The smallest representable value is `.01`. The sum of weights across all splits must add up to `100`.
	Weight pulumi.Float64Input `pulumi:"weight"`
}

func (ConfigEntryServiceSplitterSplitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplit)(nil)).Elem()
}

func (i ConfigEntryServiceSplitterSplitArgs) ToConfigEntryServiceSplitterSplitOutput() ConfigEntryServiceSplitterSplitOutput {
	return i.ToConfigEntryServiceSplitterSplitOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitArgs) ToConfigEntryServiceSplitterSplitOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitOutput)
}

// ConfigEntryServiceSplitterSplitArrayInput is an input type that accepts ConfigEntryServiceSplitterSplitArray and ConfigEntryServiceSplitterSplitArrayOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitArrayInput` via:
//
//	ConfigEntryServiceSplitterSplitArray{ ConfigEntryServiceSplitterSplitArgs{...} }
type ConfigEntryServiceSplitterSplitArrayInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitArrayOutput() ConfigEntryServiceSplitterSplitArrayOutput
	ToConfigEntryServiceSplitterSplitArrayOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitArrayOutput
}

type ConfigEntryServiceSplitterSplitArray []ConfigEntryServiceSplitterSplitInput

func (ConfigEntryServiceSplitterSplitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceSplitterSplit)(nil)).Elem()
}

func (i ConfigEntryServiceSplitterSplitArray) ToConfigEntryServiceSplitterSplitArrayOutput() ConfigEntryServiceSplitterSplitArrayOutput {
	return i.ToConfigEntryServiceSplitterSplitArrayOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitArray) ToConfigEntryServiceSplitterSplitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitArrayOutput)
}

type ConfigEntryServiceSplitterSplitOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplit)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitOutput) ToConfigEntryServiceSplitterSplitOutput() ConfigEntryServiceSplitterSplitOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitOutput) ToConfigEntryServiceSplitterSplitOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitOutput {
	return o
}

// Specifies the namespace to use in the FQDN when resolving the service.
func (o ConfigEntryServiceSplitterSplitOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specifies the admin partition to use in the FQDN when resolving the service.
func (o ConfigEntryServiceSplitterSplitOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to requests routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
func (o ConfigEntryServiceSplitterSplitOutput) RequestHeaders() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) *ConfigEntryServiceSplitterSplitRequestHeaders {
		return v.RequestHeaders
	}).(ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput)
}

// Specifies a set of HTTP-specific header modification rules applied to responses routed with the service split. You cannot configure request headers if the listener protocol is set to `tcp`.
func (o ConfigEntryServiceSplitterSplitOutput) ResponseHeaders() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) *ConfigEntryServiceSplitterSplitResponseHeaders {
		return v.ResponseHeaders
	}).(ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput)
}

// Specifies the name of the service to resolve.
func (o ConfigEntryServiceSplitterSplitOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) string { return v.Service }).(pulumi.StringOutput)
}

// Specifies a subset of the service to resolve. A service subset assigns a name to a specific subset of discoverable service instances within a datacenter, such as `version2` or `canary`. All services have an unnamed default subset that returns all healthy instances.
func (o ConfigEntryServiceSplitterSplitOutput) ServiceSubset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) *string { return v.ServiceSubset }).(pulumi.StringPtrOutput)
}

// Specifies the percentage of traffic sent to the set of service instances specified in the `service` field. Each weight must be a floating integer between `0` and `100`. The smallest representable value is `.01`. The sum of weights across all splits must add up to `100`.
func (o ConfigEntryServiceSplitterSplitOutput) Weight() pulumi.Float64Output {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplit) float64 { return v.Weight }).(pulumi.Float64Output)
}

type ConfigEntryServiceSplitterSplitArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigEntryServiceSplitterSplit)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitArrayOutput) ToConfigEntryServiceSplitterSplitArrayOutput() ConfigEntryServiceSplitterSplitArrayOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitArrayOutput) ToConfigEntryServiceSplitterSplitArrayOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitArrayOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitArrayOutput) Index(i pulumi.IntInput) ConfigEntryServiceSplitterSplitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigEntryServiceSplitterSplit {
		return vs[0].([]ConfigEntryServiceSplitterSplit)[vs[1].(int)]
	}).(ConfigEntryServiceSplitterSplitOutput)
}

type ConfigEntryServiceSplitterSplitRequestHeaders struct {
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
	Add map[string]string `pulumi:"add"`
	// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
	Removes []string `pulumi:"removes"`
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
	Set map[string]string `pulumi:"set"`
}

// ConfigEntryServiceSplitterSplitRequestHeadersInput is an input type that accepts ConfigEntryServiceSplitterSplitRequestHeadersArgs and ConfigEntryServiceSplitterSplitRequestHeadersOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitRequestHeadersInput` via:
//
//	ConfigEntryServiceSplitterSplitRequestHeadersArgs{...}
type ConfigEntryServiceSplitterSplitRequestHeadersInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitRequestHeadersOutput() ConfigEntryServiceSplitterSplitRequestHeadersOutput
	ToConfigEntryServiceSplitterSplitRequestHeadersOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitRequestHeadersOutput
}

type ConfigEntryServiceSplitterSplitRequestHeadersArgs struct {
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
	Add pulumi.StringMapInput `pulumi:"add"`
	// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
	Removes pulumi.StringArrayInput `pulumi:"removes"`
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
	Set pulumi.StringMapInput `pulumi:"set"`
}

func (ConfigEntryServiceSplitterSplitRequestHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplitRequestHeaders)(nil)).Elem()
}

func (i ConfigEntryServiceSplitterSplitRequestHeadersArgs) ToConfigEntryServiceSplitterSplitRequestHeadersOutput() ConfigEntryServiceSplitterSplitRequestHeadersOutput {
	return i.ToConfigEntryServiceSplitterSplitRequestHeadersOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitRequestHeadersArgs) ToConfigEntryServiceSplitterSplitRequestHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitRequestHeadersOutput)
}

func (i ConfigEntryServiceSplitterSplitRequestHeadersArgs) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutput() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return i.ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitRequestHeadersArgs) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitRequestHeadersOutput).ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(ctx)
}

// ConfigEntryServiceSplitterSplitRequestHeadersPtrInput is an input type that accepts ConfigEntryServiceSplitterSplitRequestHeadersArgs, ConfigEntryServiceSplitterSplitRequestHeadersPtr and ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitRequestHeadersPtrInput` via:
//
//	        ConfigEntryServiceSplitterSplitRequestHeadersArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceSplitterSplitRequestHeadersPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutput() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput
	ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput
}

type configEntryServiceSplitterSplitRequestHeadersPtrType ConfigEntryServiceSplitterSplitRequestHeadersArgs

func ConfigEntryServiceSplitterSplitRequestHeadersPtr(v *ConfigEntryServiceSplitterSplitRequestHeadersArgs) ConfigEntryServiceSplitterSplitRequestHeadersPtrInput {
	return (*configEntryServiceSplitterSplitRequestHeadersPtrType)(v)
}

func (*configEntryServiceSplitterSplitRequestHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceSplitterSplitRequestHeaders)(nil)).Elem()
}

func (i *configEntryServiceSplitterSplitRequestHeadersPtrType) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutput() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return i.ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceSplitterSplitRequestHeadersPtrType) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput)
}

type ConfigEntryServiceSplitterSplitRequestHeadersOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitRequestHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplitRequestHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) ToConfigEntryServiceSplitterSplitRequestHeadersOutput() ConfigEntryServiceSplitterSplitRequestHeadersOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) ToConfigEntryServiceSplitterSplitRequestHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutput() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return o.ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceSplitterSplitRequestHeaders) *ConfigEntryServiceSplitterSplitRequestHeaders {
		return &v
	}).(ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitRequestHeaders) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitRequestHeaders) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
func (o ConfigEntryServiceSplitterSplitRequestHeadersOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitRequestHeaders) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceSplitterSplitRequestHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutput() ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) ToConfigEntryServiceSplitterSplitRequestHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) Elem() ConfigEntryServiceSplitterSplitRequestHeadersOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitRequestHeaders) ConfigEntryServiceSplitterSplitRequestHeaders {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceSplitterSplitRequestHeaders
		return ret
	}).(ConfigEntryServiceSplitterSplitRequestHeadersOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitRequestHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitRequestHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Removes
	}).(pulumi.StringArrayOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
func (o ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitRequestHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type ConfigEntryServiceSplitterSplitResponseHeaders struct {
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
	Add map[string]string `pulumi:"add"`
	// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
	Removes []string `pulumi:"removes"`
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
	Set map[string]string `pulumi:"set"`
}

// ConfigEntryServiceSplitterSplitResponseHeadersInput is an input type that accepts ConfigEntryServiceSplitterSplitResponseHeadersArgs and ConfigEntryServiceSplitterSplitResponseHeadersOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitResponseHeadersInput` via:
//
//	ConfigEntryServiceSplitterSplitResponseHeadersArgs{...}
type ConfigEntryServiceSplitterSplitResponseHeadersInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitResponseHeadersOutput() ConfigEntryServiceSplitterSplitResponseHeadersOutput
	ToConfigEntryServiceSplitterSplitResponseHeadersOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitResponseHeadersOutput
}

type ConfigEntryServiceSplitterSplitResponseHeadersArgs struct {
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
	Add pulumi.StringMapInput `pulumi:"add"`
	// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
	Removes pulumi.StringArrayInput `pulumi:"removes"`
	// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
	Set pulumi.StringMapInput `pulumi:"set"`
}

func (ConfigEntryServiceSplitterSplitResponseHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplitResponseHeaders)(nil)).Elem()
}

func (i ConfigEntryServiceSplitterSplitResponseHeadersArgs) ToConfigEntryServiceSplitterSplitResponseHeadersOutput() ConfigEntryServiceSplitterSplitResponseHeadersOutput {
	return i.ToConfigEntryServiceSplitterSplitResponseHeadersOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitResponseHeadersArgs) ToConfigEntryServiceSplitterSplitResponseHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitResponseHeadersOutput)
}

func (i ConfigEntryServiceSplitterSplitResponseHeadersArgs) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutput() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return i.ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(context.Background())
}

func (i ConfigEntryServiceSplitterSplitResponseHeadersArgs) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitResponseHeadersOutput).ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(ctx)
}

// ConfigEntryServiceSplitterSplitResponseHeadersPtrInput is an input type that accepts ConfigEntryServiceSplitterSplitResponseHeadersArgs, ConfigEntryServiceSplitterSplitResponseHeadersPtr and ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput values.
// You can construct a concrete instance of `ConfigEntryServiceSplitterSplitResponseHeadersPtrInput` via:
//
//	        ConfigEntryServiceSplitterSplitResponseHeadersArgs{...}
//
//	or:
//
//	        nil
type ConfigEntryServiceSplitterSplitResponseHeadersPtrInput interface {
	pulumi.Input

	ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutput() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput
	ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(context.Context) ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput
}

type configEntryServiceSplitterSplitResponseHeadersPtrType ConfigEntryServiceSplitterSplitResponseHeadersArgs

func ConfigEntryServiceSplitterSplitResponseHeadersPtr(v *ConfigEntryServiceSplitterSplitResponseHeadersArgs) ConfigEntryServiceSplitterSplitResponseHeadersPtrInput {
	return (*configEntryServiceSplitterSplitResponseHeadersPtrType)(v)
}

func (*configEntryServiceSplitterSplitResponseHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceSplitterSplitResponseHeaders)(nil)).Elem()
}

func (i *configEntryServiceSplitterSplitResponseHeadersPtrType) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutput() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return i.ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(context.Background())
}

func (i *configEntryServiceSplitterSplitResponseHeadersPtrType) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput)
}

type ConfigEntryServiceSplitterSplitResponseHeadersOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitResponseHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigEntryServiceSplitterSplitResponseHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) ToConfigEntryServiceSplitterSplitResponseHeadersOutput() ConfigEntryServiceSplitterSplitResponseHeadersOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) ToConfigEntryServiceSplitterSplitResponseHeadersOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutput() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return o.ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(context.Background())
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigEntryServiceSplitterSplitResponseHeaders) *ConfigEntryServiceSplitterSplitResponseHeaders {
		return &v
	}).(ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitResponseHeaders) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitResponseHeaders) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
func (o ConfigEntryServiceSplitterSplitResponseHeadersOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigEntryServiceSplitterSplitResponseHeaders) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

type ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput struct{ *pulumi.OutputState }

func (ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryServiceSplitterSplitResponseHeaders)(nil)).Elem()
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutput() ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) ToConfigEntryServiceSplitterSplitResponseHeadersPtrOutputWithContext(ctx context.Context) ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput {
	return o
}

func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) Elem() ConfigEntryServiceSplitterSplitResponseHeadersOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitResponseHeaders) ConfigEntryServiceSplitterSplitResponseHeaders {
		if v != nil {
			return *v
		}
		var ret ConfigEntryServiceSplitterSplitResponseHeaders
		return ret
	}).(ConfigEntryServiceSplitterSplitResponseHeadersOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the header. Use header names as the keys. Header names are not case-sensitive. If header values with the same name already exist, the value is appended and Consul applies both headers.
func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitResponseHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringMapOutput)
}

// Defines an list of headers to remove. Consul removes only headers containing exact matches. Header names are not case-sensitive.
func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitResponseHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Removes
	}).(pulumi.StringArrayOutput)
}

// Map of one or more key-value pairs. Defines a set of key-value pairs to add to the request header or to replace existing header values with. Use header names as the keys. Header names are not case-sensitive. If header values with the same names already exist, Consul replaces the header values.
func (o ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigEntryServiceSplitterSplitResponseHeaders) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

type KeyPrefixSubkeyCollection struct {
	// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
	// to attach to the key (defaults to 0).
	Flags *int `pulumi:"flags"`
	// This is the path (which will be appended to the given
	// `pathPrefix`) in Consul that should be written to.
	Path string `pulumi:"path"`
	// The value to write to the given path.
	Value string `pulumi:"value"`
}

// KeyPrefixSubkeyCollectionInput is an input type that accepts KeyPrefixSubkeyCollectionArgs and KeyPrefixSubkeyCollectionOutput values.
// You can construct a concrete instance of `KeyPrefixSubkeyCollectionInput` via:
//
//	KeyPrefixSubkeyCollectionArgs{...}
type KeyPrefixSubkeyCollectionInput interface {
	pulumi.Input

	ToKeyPrefixSubkeyCollectionOutput() KeyPrefixSubkeyCollectionOutput
	ToKeyPrefixSubkeyCollectionOutputWithContext(context.Context) KeyPrefixSubkeyCollectionOutput
}

type KeyPrefixSubkeyCollectionArgs struct {
	// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
	// to attach to the key (defaults to 0).
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// This is the path (which will be appended to the given
	// `pathPrefix`) in Consul that should be written to.
	Path pulumi.StringInput `pulumi:"path"`
	// The value to write to the given path.
	Value pulumi.StringInput `pulumi:"value"`
}

func (KeyPrefixSubkeyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPrefixSubkeyCollection)(nil)).Elem()
}

func (i KeyPrefixSubkeyCollectionArgs) ToKeyPrefixSubkeyCollectionOutput() KeyPrefixSubkeyCollectionOutput {
	return i.ToKeyPrefixSubkeyCollectionOutputWithContext(context.Background())
}

func (i KeyPrefixSubkeyCollectionArgs) ToKeyPrefixSubkeyCollectionOutputWithContext(ctx context.Context) KeyPrefixSubkeyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPrefixSubkeyCollectionOutput)
}

// KeyPrefixSubkeyCollectionArrayInput is an input type that accepts KeyPrefixSubkeyCollectionArray and KeyPrefixSubkeyCollectionArrayOutput values.
// You can construct a concrete instance of `KeyPrefixSubkeyCollectionArrayInput` via:
//
//	KeyPrefixSubkeyCollectionArray{ KeyPrefixSubkeyCollectionArgs{...} }
type KeyPrefixSubkeyCollectionArrayInput interface {
	pulumi.Input

	ToKeyPrefixSubkeyCollectionArrayOutput() KeyPrefixSubkeyCollectionArrayOutput
	ToKeyPrefixSubkeyCollectionArrayOutputWithContext(context.Context) KeyPrefixSubkeyCollectionArrayOutput
}

type KeyPrefixSubkeyCollectionArray []KeyPrefixSubkeyCollectionInput

func (KeyPrefixSubkeyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyPrefixSubkeyCollection)(nil)).Elem()
}

func (i KeyPrefixSubkeyCollectionArray) ToKeyPrefixSubkeyCollectionArrayOutput() KeyPrefixSubkeyCollectionArrayOutput {
	return i.ToKeyPrefixSubkeyCollectionArrayOutputWithContext(context.Background())
}

func (i KeyPrefixSubkeyCollectionArray) ToKeyPrefixSubkeyCollectionArrayOutputWithContext(ctx context.Context) KeyPrefixSubkeyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPrefixSubkeyCollectionArrayOutput)
}

type KeyPrefixSubkeyCollectionOutput struct{ *pulumi.OutputState }

func (KeyPrefixSubkeyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPrefixSubkeyCollection)(nil)).Elem()
}

func (o KeyPrefixSubkeyCollectionOutput) ToKeyPrefixSubkeyCollectionOutput() KeyPrefixSubkeyCollectionOutput {
	return o
}

func (o KeyPrefixSubkeyCollectionOutput) ToKeyPrefixSubkeyCollectionOutputWithContext(ctx context.Context) KeyPrefixSubkeyCollectionOutput {
	return o
}

// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
// to attach to the key (defaults to 0).
func (o KeyPrefixSubkeyCollectionOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeyPrefixSubkeyCollection) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// This is the path (which will be appended to the given
// `pathPrefix`) in Consul that should be written to.
func (o KeyPrefixSubkeyCollectionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v KeyPrefixSubkeyCollection) string { return v.Path }).(pulumi.StringOutput)
}

// The value to write to the given path.
func (o KeyPrefixSubkeyCollectionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KeyPrefixSubkeyCollection) string { return v.Value }).(pulumi.StringOutput)
}

type KeyPrefixSubkeyCollectionArrayOutput struct{ *pulumi.OutputState }

func (KeyPrefixSubkeyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyPrefixSubkeyCollection)(nil)).Elem()
}

func (o KeyPrefixSubkeyCollectionArrayOutput) ToKeyPrefixSubkeyCollectionArrayOutput() KeyPrefixSubkeyCollectionArrayOutput {
	return o
}

func (o KeyPrefixSubkeyCollectionArrayOutput) ToKeyPrefixSubkeyCollectionArrayOutputWithContext(ctx context.Context) KeyPrefixSubkeyCollectionArrayOutput {
	return o
}

func (o KeyPrefixSubkeyCollectionArrayOutput) Index(i pulumi.IntInput) KeyPrefixSubkeyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyPrefixSubkeyCollection {
		return vs[0].([]KeyPrefixSubkeyCollection)[vs[1].(int)]
	}).(KeyPrefixSubkeyCollectionOutput)
}

type KeysKey struct {
	Default *string `pulumi:"default"`
	// If true, then the key will be deleted when
	// either its configuration block is removed from the configuration or
	// the entire resource is destroyed. Otherwise, it will be left in Consul.
	// Defaults to false.
	Delete *bool `pulumi:"delete"`
	// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
	// to attach to the key (defaults to 0).
	Flags *int `pulumi:"flags"`
	// Deprecated: Using Keys resource to *read* is deprecated; please use Keys data source instead
	Name *string `pulumi:"name"`
	// This is the path in Consul that should be written to.
	Path string `pulumi:"path"`
	// The value to write to the given path.
	Value *string `pulumi:"value"`
}

// KeysKeyInput is an input type that accepts KeysKeyArgs and KeysKeyOutput values.
// You can construct a concrete instance of `KeysKeyInput` via:
//
//	KeysKeyArgs{...}
type KeysKeyInput interface {
	pulumi.Input

	ToKeysKeyOutput() KeysKeyOutput
	ToKeysKeyOutputWithContext(context.Context) KeysKeyOutput
}

type KeysKeyArgs struct {
	Default pulumi.StringPtrInput `pulumi:"default"`
	// If true, then the key will be deleted when
	// either its configuration block is removed from the configuration or
	// the entire resource is destroyed. Otherwise, it will be left in Consul.
	// Defaults to false.
	Delete pulumi.BoolPtrInput `pulumi:"delete"`
	// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
	// to attach to the key (defaults to 0).
	Flags pulumi.IntPtrInput `pulumi:"flags"`
	// Deprecated: Using Keys resource to *read* is deprecated; please use Keys data source instead
	Name pulumi.StringPtrInput `pulumi:"name"`
	// This is the path in Consul that should be written to.
	Path pulumi.StringInput `pulumi:"path"`
	// The value to write to the given path.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KeysKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeysKey)(nil)).Elem()
}

func (i KeysKeyArgs) ToKeysKeyOutput() KeysKeyOutput {
	return i.ToKeysKeyOutputWithContext(context.Background())
}

func (i KeysKeyArgs) ToKeysKeyOutputWithContext(ctx context.Context) KeysKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeysKeyOutput)
}

// KeysKeyArrayInput is an input type that accepts KeysKeyArray and KeysKeyArrayOutput values.
// You can construct a concrete instance of `KeysKeyArrayInput` via:
//
//	KeysKeyArray{ KeysKeyArgs{...} }
type KeysKeyArrayInput interface {
	pulumi.Input

	ToKeysKeyArrayOutput() KeysKeyArrayOutput
	ToKeysKeyArrayOutputWithContext(context.Context) KeysKeyArrayOutput
}

type KeysKeyArray []KeysKeyInput

func (KeysKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeysKey)(nil)).Elem()
}

func (i KeysKeyArray) ToKeysKeyArrayOutput() KeysKeyArrayOutput {
	return i.ToKeysKeyArrayOutputWithContext(context.Background())
}

func (i KeysKeyArray) ToKeysKeyArrayOutputWithContext(ctx context.Context) KeysKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeysKeyArrayOutput)
}

type KeysKeyOutput struct{ *pulumi.OutputState }

func (KeysKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeysKey)(nil)).Elem()
}

func (o KeysKeyOutput) ToKeysKeyOutput() KeysKeyOutput {
	return o
}

func (o KeysKeyOutput) ToKeysKeyOutputWithContext(ctx context.Context) KeysKeyOutput {
	return o
}

func (o KeysKeyOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysKey) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// If true, then the key will be deleted when
// either its configuration block is removed from the configuration or
// the entire resource is destroyed. Otherwise, it will be left in Consul.
// Defaults to false.
func (o KeysKeyOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeysKey) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

// An [unsigned integer value](https://www.consul.io/api/kv.html#flags-1)
// to attach to the key (defaults to 0).
func (o KeysKeyOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KeysKey) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// Deprecated: Using Keys resource to *read* is deprecated; please use Keys data source instead
func (o KeysKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This is the path in Consul that should be written to.
func (o KeysKeyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v KeysKey) string { return v.Path }).(pulumi.StringOutput)
}

// The value to write to the given path.
func (o KeysKeyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeysKey) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KeysKeyArrayOutput struct{ *pulumi.OutputState }

func (KeysKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeysKey)(nil)).Elem()
}

func (o KeysKeyArrayOutput) ToKeysKeyArrayOutput() KeysKeyArrayOutput {
	return o
}

func (o KeysKeyArrayOutput) ToKeysKeyArrayOutputWithContext(ctx context.Context) KeysKeyArrayOutput {
	return o
}

func (o KeysKeyArrayOutput) Index(i pulumi.IntInput) KeysKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeysKey {
		return vs[0].([]KeysKey)[vs[1].(int)]
	}).(KeysKeyOutput)
}

type PreparedQueryDns struct {
	// The TTL to send when returning DNS results.
	Ttl *string `pulumi:"ttl"`
}

// PreparedQueryDnsInput is an input type that accepts PreparedQueryDnsArgs and PreparedQueryDnsOutput values.
// You can construct a concrete instance of `PreparedQueryDnsInput` via:
//
//	PreparedQueryDnsArgs{...}
type PreparedQueryDnsInput interface {
	pulumi.Input

	ToPreparedQueryDnsOutput() PreparedQueryDnsOutput
	ToPreparedQueryDnsOutputWithContext(context.Context) PreparedQueryDnsOutput
}

type PreparedQueryDnsArgs struct {
	// The TTL to send when returning DNS results.
	Ttl pulumi.StringPtrInput `pulumi:"ttl"`
}

func (PreparedQueryDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryDns)(nil)).Elem()
}

func (i PreparedQueryDnsArgs) ToPreparedQueryDnsOutput() PreparedQueryDnsOutput {
	return i.ToPreparedQueryDnsOutputWithContext(context.Background())
}

func (i PreparedQueryDnsArgs) ToPreparedQueryDnsOutputWithContext(ctx context.Context) PreparedQueryDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryDnsOutput)
}

func (i PreparedQueryDnsArgs) ToPreparedQueryDnsPtrOutput() PreparedQueryDnsPtrOutput {
	return i.ToPreparedQueryDnsPtrOutputWithContext(context.Background())
}

func (i PreparedQueryDnsArgs) ToPreparedQueryDnsPtrOutputWithContext(ctx context.Context) PreparedQueryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryDnsOutput).ToPreparedQueryDnsPtrOutputWithContext(ctx)
}

// PreparedQueryDnsPtrInput is an input type that accepts PreparedQueryDnsArgs, PreparedQueryDnsPtr and PreparedQueryDnsPtrOutput values.
// You can construct a concrete instance of `PreparedQueryDnsPtrInput` via:
//
//	        PreparedQueryDnsArgs{...}
//
//	or:
//
//	        nil
type PreparedQueryDnsPtrInput interface {
	pulumi.Input

	ToPreparedQueryDnsPtrOutput() PreparedQueryDnsPtrOutput
	ToPreparedQueryDnsPtrOutputWithContext(context.Context) PreparedQueryDnsPtrOutput
}

type preparedQueryDnsPtrType PreparedQueryDnsArgs

func PreparedQueryDnsPtr(v *PreparedQueryDnsArgs) PreparedQueryDnsPtrInput {
	return (*preparedQueryDnsPtrType)(v)
}

func (*preparedQueryDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryDns)(nil)).Elem()
}

func (i *preparedQueryDnsPtrType) ToPreparedQueryDnsPtrOutput() PreparedQueryDnsPtrOutput {
	return i.ToPreparedQueryDnsPtrOutputWithContext(context.Background())
}

func (i *preparedQueryDnsPtrType) ToPreparedQueryDnsPtrOutputWithContext(ctx context.Context) PreparedQueryDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryDnsPtrOutput)
}

type PreparedQueryDnsOutput struct{ *pulumi.OutputState }

func (PreparedQueryDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryDns)(nil)).Elem()
}

func (o PreparedQueryDnsOutput) ToPreparedQueryDnsOutput() PreparedQueryDnsOutput {
	return o
}

func (o PreparedQueryDnsOutput) ToPreparedQueryDnsOutputWithContext(ctx context.Context) PreparedQueryDnsOutput {
	return o
}

func (o PreparedQueryDnsOutput) ToPreparedQueryDnsPtrOutput() PreparedQueryDnsPtrOutput {
	return o.ToPreparedQueryDnsPtrOutputWithContext(context.Background())
}

func (o PreparedQueryDnsOutput) ToPreparedQueryDnsPtrOutputWithContext(ctx context.Context) PreparedQueryDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreparedQueryDns) *PreparedQueryDns {
		return &v
	}).(PreparedQueryDnsPtrOutput)
}

// The TTL to send when returning DNS results.
func (o PreparedQueryDnsOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreparedQueryDns) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type PreparedQueryDnsPtrOutput struct{ *pulumi.OutputState }

func (PreparedQueryDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryDns)(nil)).Elem()
}

func (o PreparedQueryDnsPtrOutput) ToPreparedQueryDnsPtrOutput() PreparedQueryDnsPtrOutput {
	return o
}

func (o PreparedQueryDnsPtrOutput) ToPreparedQueryDnsPtrOutputWithContext(ctx context.Context) PreparedQueryDnsPtrOutput {
	return o
}

func (o PreparedQueryDnsPtrOutput) Elem() PreparedQueryDnsOutput {
	return o.ApplyT(func(v *PreparedQueryDns) PreparedQueryDns {
		if v != nil {
			return *v
		}
		var ret PreparedQueryDns
		return ret
	}).(PreparedQueryDnsOutput)
}

// The TTL to send when returning DNS results.
func (o PreparedQueryDnsPtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreparedQueryDns) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

type PreparedQueryFailover struct {
	// Remote datacenters to return results from.
	Datacenters []string `pulumi:"datacenters"`
	// Return results from this many datacenters, sorted in ascending order of estimated RTT.
	NearestN *int `pulumi:"nearestN"`
	// Specifies a sequential list of remote datacenters and cluster peers to failover to if there are no healthy service instances in the local datacenter. This option cannot be used with `nearestN` or `datacenters`.
	Targets []PreparedQueryFailoverTarget `pulumi:"targets"`
}

// PreparedQueryFailoverInput is an input type that accepts PreparedQueryFailoverArgs and PreparedQueryFailoverOutput values.
// You can construct a concrete instance of `PreparedQueryFailoverInput` via:
//
//	PreparedQueryFailoverArgs{...}
type PreparedQueryFailoverInput interface {
	pulumi.Input

	ToPreparedQueryFailoverOutput() PreparedQueryFailoverOutput
	ToPreparedQueryFailoverOutputWithContext(context.Context) PreparedQueryFailoverOutput
}

type PreparedQueryFailoverArgs struct {
	// Remote datacenters to return results from.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// Return results from this many datacenters, sorted in ascending order of estimated RTT.
	NearestN pulumi.IntPtrInput `pulumi:"nearestN"`
	// Specifies a sequential list of remote datacenters and cluster peers to failover to if there are no healthy service instances in the local datacenter. This option cannot be used with `nearestN` or `datacenters`.
	Targets PreparedQueryFailoverTargetArrayInput `pulumi:"targets"`
}

func (PreparedQueryFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryFailover)(nil)).Elem()
}

func (i PreparedQueryFailoverArgs) ToPreparedQueryFailoverOutput() PreparedQueryFailoverOutput {
	return i.ToPreparedQueryFailoverOutputWithContext(context.Background())
}

func (i PreparedQueryFailoverArgs) ToPreparedQueryFailoverOutputWithContext(ctx context.Context) PreparedQueryFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryFailoverOutput)
}

func (i PreparedQueryFailoverArgs) ToPreparedQueryFailoverPtrOutput() PreparedQueryFailoverPtrOutput {
	return i.ToPreparedQueryFailoverPtrOutputWithContext(context.Background())
}

func (i PreparedQueryFailoverArgs) ToPreparedQueryFailoverPtrOutputWithContext(ctx context.Context) PreparedQueryFailoverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryFailoverOutput).ToPreparedQueryFailoverPtrOutputWithContext(ctx)
}

// PreparedQueryFailoverPtrInput is an input type that accepts PreparedQueryFailoverArgs, PreparedQueryFailoverPtr and PreparedQueryFailoverPtrOutput values.
// You can construct a concrete instance of `PreparedQueryFailoverPtrInput` via:
//
//	        PreparedQueryFailoverArgs{...}
//
//	or:
//
//	        nil
type PreparedQueryFailoverPtrInput interface {
	pulumi.Input

	ToPreparedQueryFailoverPtrOutput() PreparedQueryFailoverPtrOutput
	ToPreparedQueryFailoverPtrOutputWithContext(context.Context) PreparedQueryFailoverPtrOutput
}

type preparedQueryFailoverPtrType PreparedQueryFailoverArgs

func PreparedQueryFailoverPtr(v *PreparedQueryFailoverArgs) PreparedQueryFailoverPtrInput {
	return (*preparedQueryFailoverPtrType)(v)
}

func (*preparedQueryFailoverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryFailover)(nil)).Elem()
}

func (i *preparedQueryFailoverPtrType) ToPreparedQueryFailoverPtrOutput() PreparedQueryFailoverPtrOutput {
	return i.ToPreparedQueryFailoverPtrOutputWithContext(context.Background())
}

func (i *preparedQueryFailoverPtrType) ToPreparedQueryFailoverPtrOutputWithContext(ctx context.Context) PreparedQueryFailoverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryFailoverPtrOutput)
}

type PreparedQueryFailoverOutput struct{ *pulumi.OutputState }

func (PreparedQueryFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryFailover)(nil)).Elem()
}

func (o PreparedQueryFailoverOutput) ToPreparedQueryFailoverOutput() PreparedQueryFailoverOutput {
	return o
}

func (o PreparedQueryFailoverOutput) ToPreparedQueryFailoverOutputWithContext(ctx context.Context) PreparedQueryFailoverOutput {
	return o
}

func (o PreparedQueryFailoverOutput) ToPreparedQueryFailoverPtrOutput() PreparedQueryFailoverPtrOutput {
	return o.ToPreparedQueryFailoverPtrOutputWithContext(context.Background())
}

func (o PreparedQueryFailoverOutput) ToPreparedQueryFailoverPtrOutputWithContext(ctx context.Context) PreparedQueryFailoverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreparedQueryFailover) *PreparedQueryFailover {
		return &v
	}).(PreparedQueryFailoverPtrOutput)
}

// Remote datacenters to return results from.
func (o PreparedQueryFailoverOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreparedQueryFailover) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// Return results from this many datacenters, sorted in ascending order of estimated RTT.
func (o PreparedQueryFailoverOutput) NearestN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PreparedQueryFailover) *int { return v.NearestN }).(pulumi.IntPtrOutput)
}

// Specifies a sequential list of remote datacenters and cluster peers to failover to if there are no healthy service instances in the local datacenter. This option cannot be used with `nearestN` or `datacenters`.
func (o PreparedQueryFailoverOutput) Targets() PreparedQueryFailoverTargetArrayOutput {
	return o.ApplyT(func(v PreparedQueryFailover) []PreparedQueryFailoverTarget { return v.Targets }).(PreparedQueryFailoverTargetArrayOutput)
}

type PreparedQueryFailoverPtrOutput struct{ *pulumi.OutputState }

func (PreparedQueryFailoverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryFailover)(nil)).Elem()
}

func (o PreparedQueryFailoverPtrOutput) ToPreparedQueryFailoverPtrOutput() PreparedQueryFailoverPtrOutput {
	return o
}

func (o PreparedQueryFailoverPtrOutput) ToPreparedQueryFailoverPtrOutputWithContext(ctx context.Context) PreparedQueryFailoverPtrOutput {
	return o
}

func (o PreparedQueryFailoverPtrOutput) Elem() PreparedQueryFailoverOutput {
	return o.ApplyT(func(v *PreparedQueryFailover) PreparedQueryFailover {
		if v != nil {
			return *v
		}
		var ret PreparedQueryFailover
		return ret
	}).(PreparedQueryFailoverOutput)
}

// Remote datacenters to return results from.
func (o PreparedQueryFailoverPtrOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreparedQueryFailover) []string {
		if v == nil {
			return nil
		}
		return v.Datacenters
	}).(pulumi.StringArrayOutput)
}

// Return results from this many datacenters, sorted in ascending order of estimated RTT.
func (o PreparedQueryFailoverPtrOutput) NearestN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PreparedQueryFailover) *int {
		if v == nil {
			return nil
		}
		return v.NearestN
	}).(pulumi.IntPtrOutput)
}

// Specifies a sequential list of remote datacenters and cluster peers to failover to if there are no healthy service instances in the local datacenter. This option cannot be used with `nearestN` or `datacenters`.
func (o PreparedQueryFailoverPtrOutput) Targets() PreparedQueryFailoverTargetArrayOutput {
	return o.ApplyT(func(v *PreparedQueryFailover) []PreparedQueryFailoverTarget {
		if v == nil {
			return nil
		}
		return v.Targets
	}).(PreparedQueryFailoverTargetArrayOutput)
}

type PreparedQueryFailoverTarget struct {
	// Specifies a WAN federated datacenter to forward the query to.
	Datacenter *string `pulumi:"datacenter"`
	// Specifies a cluster peer to use for failover.
	Peer *string `pulumi:"peer"`
}

// PreparedQueryFailoverTargetInput is an input type that accepts PreparedQueryFailoverTargetArgs and PreparedQueryFailoverTargetOutput values.
// You can construct a concrete instance of `PreparedQueryFailoverTargetInput` via:
//
//	PreparedQueryFailoverTargetArgs{...}
type PreparedQueryFailoverTargetInput interface {
	pulumi.Input

	ToPreparedQueryFailoverTargetOutput() PreparedQueryFailoverTargetOutput
	ToPreparedQueryFailoverTargetOutputWithContext(context.Context) PreparedQueryFailoverTargetOutput
}

type PreparedQueryFailoverTargetArgs struct {
	// Specifies a WAN federated datacenter to forward the query to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// Specifies a cluster peer to use for failover.
	Peer pulumi.StringPtrInput `pulumi:"peer"`
}

func (PreparedQueryFailoverTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryFailoverTarget)(nil)).Elem()
}

func (i PreparedQueryFailoverTargetArgs) ToPreparedQueryFailoverTargetOutput() PreparedQueryFailoverTargetOutput {
	return i.ToPreparedQueryFailoverTargetOutputWithContext(context.Background())
}

func (i PreparedQueryFailoverTargetArgs) ToPreparedQueryFailoverTargetOutputWithContext(ctx context.Context) PreparedQueryFailoverTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryFailoverTargetOutput)
}

// PreparedQueryFailoverTargetArrayInput is an input type that accepts PreparedQueryFailoverTargetArray and PreparedQueryFailoverTargetArrayOutput values.
// You can construct a concrete instance of `PreparedQueryFailoverTargetArrayInput` via:
//
//	PreparedQueryFailoverTargetArray{ PreparedQueryFailoverTargetArgs{...} }
type PreparedQueryFailoverTargetArrayInput interface {
	pulumi.Input

	ToPreparedQueryFailoverTargetArrayOutput() PreparedQueryFailoverTargetArrayOutput
	ToPreparedQueryFailoverTargetArrayOutputWithContext(context.Context) PreparedQueryFailoverTargetArrayOutput
}

type PreparedQueryFailoverTargetArray []PreparedQueryFailoverTargetInput

func (PreparedQueryFailoverTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreparedQueryFailoverTarget)(nil)).Elem()
}

func (i PreparedQueryFailoverTargetArray) ToPreparedQueryFailoverTargetArrayOutput() PreparedQueryFailoverTargetArrayOutput {
	return i.ToPreparedQueryFailoverTargetArrayOutputWithContext(context.Background())
}

func (i PreparedQueryFailoverTargetArray) ToPreparedQueryFailoverTargetArrayOutputWithContext(ctx context.Context) PreparedQueryFailoverTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryFailoverTargetArrayOutput)
}

type PreparedQueryFailoverTargetOutput struct{ *pulumi.OutputState }

func (PreparedQueryFailoverTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryFailoverTarget)(nil)).Elem()
}

func (o PreparedQueryFailoverTargetOutput) ToPreparedQueryFailoverTargetOutput() PreparedQueryFailoverTargetOutput {
	return o
}

func (o PreparedQueryFailoverTargetOutput) ToPreparedQueryFailoverTargetOutputWithContext(ctx context.Context) PreparedQueryFailoverTargetOutput {
	return o
}

// Specifies a WAN federated datacenter to forward the query to.
func (o PreparedQueryFailoverTargetOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreparedQueryFailoverTarget) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// Specifies a cluster peer to use for failover.
func (o PreparedQueryFailoverTargetOutput) Peer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreparedQueryFailoverTarget) *string { return v.Peer }).(pulumi.StringPtrOutput)
}

type PreparedQueryFailoverTargetArrayOutput struct{ *pulumi.OutputState }

func (PreparedQueryFailoverTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PreparedQueryFailoverTarget)(nil)).Elem()
}

func (o PreparedQueryFailoverTargetArrayOutput) ToPreparedQueryFailoverTargetArrayOutput() PreparedQueryFailoverTargetArrayOutput {
	return o
}

func (o PreparedQueryFailoverTargetArrayOutput) ToPreparedQueryFailoverTargetArrayOutputWithContext(ctx context.Context) PreparedQueryFailoverTargetArrayOutput {
	return o
}

func (o PreparedQueryFailoverTargetArrayOutput) Index(i pulumi.IntInput) PreparedQueryFailoverTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PreparedQueryFailoverTarget {
		return vs[0].([]PreparedQueryFailoverTarget)[vs[1].(int)]
	}).(PreparedQueryFailoverTargetOutput)
}

type PreparedQueryTemplate struct {
	// The regular expression to match with. When using `namePrefixMatch`, this regex is applied against the query name.
	Regexp string `pulumi:"regexp"`
	// If set to true, will cause the tags list inside the service structure to be stripped of any empty strings.
	RemoveEmptyTags *bool `pulumi:"removeEmptyTags"`
	// The type of template matching to perform. Currently only `namePrefixMatch` is supported.
	Type string `pulumi:"type"`
}

// PreparedQueryTemplateInput is an input type that accepts PreparedQueryTemplateArgs and PreparedQueryTemplateOutput values.
// You can construct a concrete instance of `PreparedQueryTemplateInput` via:
//
//	PreparedQueryTemplateArgs{...}
type PreparedQueryTemplateInput interface {
	pulumi.Input

	ToPreparedQueryTemplateOutput() PreparedQueryTemplateOutput
	ToPreparedQueryTemplateOutputWithContext(context.Context) PreparedQueryTemplateOutput
}

type PreparedQueryTemplateArgs struct {
	// The regular expression to match with. When using `namePrefixMatch`, this regex is applied against the query name.
	Regexp pulumi.StringInput `pulumi:"regexp"`
	// If set to true, will cause the tags list inside the service structure to be stripped of any empty strings.
	RemoveEmptyTags pulumi.BoolPtrInput `pulumi:"removeEmptyTags"`
	// The type of template matching to perform. Currently only `namePrefixMatch` is supported.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PreparedQueryTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryTemplate)(nil)).Elem()
}

func (i PreparedQueryTemplateArgs) ToPreparedQueryTemplateOutput() PreparedQueryTemplateOutput {
	return i.ToPreparedQueryTemplateOutputWithContext(context.Background())
}

func (i PreparedQueryTemplateArgs) ToPreparedQueryTemplateOutputWithContext(ctx context.Context) PreparedQueryTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryTemplateOutput)
}

func (i PreparedQueryTemplateArgs) ToPreparedQueryTemplatePtrOutput() PreparedQueryTemplatePtrOutput {
	return i.ToPreparedQueryTemplatePtrOutputWithContext(context.Background())
}

func (i PreparedQueryTemplateArgs) ToPreparedQueryTemplatePtrOutputWithContext(ctx context.Context) PreparedQueryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryTemplateOutput).ToPreparedQueryTemplatePtrOutputWithContext(ctx)
}

// PreparedQueryTemplatePtrInput is an input type that accepts PreparedQueryTemplateArgs, PreparedQueryTemplatePtr and PreparedQueryTemplatePtrOutput values.
// You can construct a concrete instance of `PreparedQueryTemplatePtrInput` via:
//
//	        PreparedQueryTemplateArgs{...}
//
//	or:
//
//	        nil
type PreparedQueryTemplatePtrInput interface {
	pulumi.Input

	ToPreparedQueryTemplatePtrOutput() PreparedQueryTemplatePtrOutput
	ToPreparedQueryTemplatePtrOutputWithContext(context.Context) PreparedQueryTemplatePtrOutput
}

type preparedQueryTemplatePtrType PreparedQueryTemplateArgs

func PreparedQueryTemplatePtr(v *PreparedQueryTemplateArgs) PreparedQueryTemplatePtrInput {
	return (*preparedQueryTemplatePtrType)(v)
}

func (*preparedQueryTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryTemplate)(nil)).Elem()
}

func (i *preparedQueryTemplatePtrType) ToPreparedQueryTemplatePtrOutput() PreparedQueryTemplatePtrOutput {
	return i.ToPreparedQueryTemplatePtrOutputWithContext(context.Background())
}

func (i *preparedQueryTemplatePtrType) ToPreparedQueryTemplatePtrOutputWithContext(ctx context.Context) PreparedQueryTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreparedQueryTemplatePtrOutput)
}

type PreparedQueryTemplateOutput struct{ *pulumi.OutputState }

func (PreparedQueryTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreparedQueryTemplate)(nil)).Elem()
}

func (o PreparedQueryTemplateOutput) ToPreparedQueryTemplateOutput() PreparedQueryTemplateOutput {
	return o
}

func (o PreparedQueryTemplateOutput) ToPreparedQueryTemplateOutputWithContext(ctx context.Context) PreparedQueryTemplateOutput {
	return o
}

func (o PreparedQueryTemplateOutput) ToPreparedQueryTemplatePtrOutput() PreparedQueryTemplatePtrOutput {
	return o.ToPreparedQueryTemplatePtrOutputWithContext(context.Background())
}

func (o PreparedQueryTemplateOutput) ToPreparedQueryTemplatePtrOutputWithContext(ctx context.Context) PreparedQueryTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreparedQueryTemplate) *PreparedQueryTemplate {
		return &v
	}).(PreparedQueryTemplatePtrOutput)
}

// The regular expression to match with. When using `namePrefixMatch`, this regex is applied against the query name.
func (o PreparedQueryTemplateOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v PreparedQueryTemplate) string { return v.Regexp }).(pulumi.StringOutput)
}

// If set to true, will cause the tags list inside the service structure to be stripped of any empty strings.
func (o PreparedQueryTemplateOutput) RemoveEmptyTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PreparedQueryTemplate) *bool { return v.RemoveEmptyTags }).(pulumi.BoolPtrOutput)
}

// The type of template matching to perform. Currently only `namePrefixMatch` is supported.
func (o PreparedQueryTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PreparedQueryTemplate) string { return v.Type }).(pulumi.StringOutput)
}

type PreparedQueryTemplatePtrOutput struct{ *pulumi.OutputState }

func (PreparedQueryTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreparedQueryTemplate)(nil)).Elem()
}

func (o PreparedQueryTemplatePtrOutput) ToPreparedQueryTemplatePtrOutput() PreparedQueryTemplatePtrOutput {
	return o
}

func (o PreparedQueryTemplatePtrOutput) ToPreparedQueryTemplatePtrOutputWithContext(ctx context.Context) PreparedQueryTemplatePtrOutput {
	return o
}

func (o PreparedQueryTemplatePtrOutput) Elem() PreparedQueryTemplateOutput {
	return o.ApplyT(func(v *PreparedQueryTemplate) PreparedQueryTemplate {
		if v != nil {
			return *v
		}
		var ret PreparedQueryTemplate
		return ret
	}).(PreparedQueryTemplateOutput)
}

// The regular expression to match with. When using `namePrefixMatch`, this regex is applied against the query name.
func (o PreparedQueryTemplatePtrOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreparedQueryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Regexp
	}).(pulumi.StringPtrOutput)
}

// If set to true, will cause the tags list inside the service structure to be stripped of any empty strings.
func (o PreparedQueryTemplatePtrOutput) RemoveEmptyTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PreparedQueryTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.RemoveEmptyTags
	}).(pulumi.BoolPtrOutput)
}

// The type of template matching to perform. Currently only `namePrefixMatch` is supported.
func (o PreparedQueryTemplatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreparedQueryTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProviderAuthJwt struct {
	// The name of the auth method to use for login.
	AuthMethod string `pulumi:"authMethod"`
	// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
	BearerToken *string `pulumi:"bearerToken"`
	// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
	Meta                              map[string]string `pulumi:"meta"`
	UseTerraformCloudWorkloadIdentity *bool             `pulumi:"useTerraformCloudWorkloadIdentity"`
}

// ProviderAuthJwtInput is an input type that accepts ProviderAuthJwtArgs and ProviderAuthJwtOutput values.
// You can construct a concrete instance of `ProviderAuthJwtInput` via:
//
//	ProviderAuthJwtArgs{...}
type ProviderAuthJwtInput interface {
	pulumi.Input

	ToProviderAuthJwtOutput() ProviderAuthJwtOutput
	ToProviderAuthJwtOutputWithContext(context.Context) ProviderAuthJwtOutput
}

type ProviderAuthJwtArgs struct {
	// The name of the auth method to use for login.
	AuthMethod pulumi.StringInput `pulumi:"authMethod"`
	// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
	Meta                              pulumi.StringMapInput `pulumi:"meta"`
	UseTerraformCloudWorkloadIdentity pulumi.BoolPtrInput   `pulumi:"useTerraformCloudWorkloadIdentity"`
}

func (ProviderAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthJwt)(nil)).Elem()
}

func (i ProviderAuthJwtArgs) ToProviderAuthJwtOutput() ProviderAuthJwtOutput {
	return i.ToProviderAuthJwtOutputWithContext(context.Background())
}

func (i ProviderAuthJwtArgs) ToProviderAuthJwtOutputWithContext(ctx context.Context) ProviderAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthJwtOutput)
}

func (i ProviderAuthJwtArgs) ToProviderAuthJwtPtrOutput() ProviderAuthJwtPtrOutput {
	return i.ToProviderAuthJwtPtrOutputWithContext(context.Background())
}

func (i ProviderAuthJwtArgs) ToProviderAuthJwtPtrOutputWithContext(ctx context.Context) ProviderAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthJwtOutput).ToProviderAuthJwtPtrOutputWithContext(ctx)
}

// ProviderAuthJwtPtrInput is an input type that accepts ProviderAuthJwtArgs, ProviderAuthJwtPtr and ProviderAuthJwtPtrOutput values.
// You can construct a concrete instance of `ProviderAuthJwtPtrInput` via:
//
//	        ProviderAuthJwtArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthJwtPtrInput interface {
	pulumi.Input

	ToProviderAuthJwtPtrOutput() ProviderAuthJwtPtrOutput
	ToProviderAuthJwtPtrOutputWithContext(context.Context) ProviderAuthJwtPtrOutput
}

type providerAuthJwtPtrType ProviderAuthJwtArgs

func ProviderAuthJwtPtr(v *ProviderAuthJwtArgs) ProviderAuthJwtPtrInput {
	return (*providerAuthJwtPtrType)(v)
}

func (*providerAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthJwt)(nil)).Elem()
}

func (i *providerAuthJwtPtrType) ToProviderAuthJwtPtrOutput() ProviderAuthJwtPtrOutput {
	return i.ToProviderAuthJwtPtrOutputWithContext(context.Background())
}

func (i *providerAuthJwtPtrType) ToProviderAuthJwtPtrOutputWithContext(ctx context.Context) ProviderAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthJwtPtrOutput)
}

type ProviderAuthJwtOutput struct{ *pulumi.OutputState }

func (ProviderAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthJwt)(nil)).Elem()
}

func (o ProviderAuthJwtOutput) ToProviderAuthJwtOutput() ProviderAuthJwtOutput {
	return o
}

func (o ProviderAuthJwtOutput) ToProviderAuthJwtOutputWithContext(ctx context.Context) ProviderAuthJwtOutput {
	return o
}

func (o ProviderAuthJwtOutput) ToProviderAuthJwtPtrOutput() ProviderAuthJwtPtrOutput {
	return o.ToProviderAuthJwtPtrOutputWithContext(context.Background())
}

func (o ProviderAuthJwtOutput) ToProviderAuthJwtPtrOutputWithContext(ctx context.Context) ProviderAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuthJwt) *ProviderAuthJwt {
		return &v
	}).(ProviderAuthJwtPtrOutput)
}

// The name of the auth method to use for login.
func (o ProviderAuthJwtOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderAuthJwt) string { return v.AuthMethod }).(pulumi.StringOutput)
}

// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
func (o ProviderAuthJwtOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthJwt) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
func (o ProviderAuthJwtOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderAuthJwt) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o ProviderAuthJwtOutput) UseTerraformCloudWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderAuthJwt) *bool { return v.UseTerraformCloudWorkloadIdentity }).(pulumi.BoolPtrOutput)
}

type ProviderAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthJwt)(nil)).Elem()
}

func (o ProviderAuthJwtPtrOutput) ToProviderAuthJwtPtrOutput() ProviderAuthJwtPtrOutput {
	return o
}

func (o ProviderAuthJwtPtrOutput) ToProviderAuthJwtPtrOutputWithContext(ctx context.Context) ProviderAuthJwtPtrOutput {
	return o
}

func (o ProviderAuthJwtPtrOutput) Elem() ProviderAuthJwtOutput {
	return o.ApplyT(func(v *ProviderAuthJwt) ProviderAuthJwt {
		if v != nil {
			return *v
		}
		var ret ProviderAuthJwt
		return ret
	}).(ProviderAuthJwtOutput)
}

// The name of the auth method to use for login.
func (o ProviderAuthJwtPtrOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthJwt) *string {
		if v == nil {
			return nil
		}
		return &v.AuthMethod
	}).(pulumi.StringPtrOutput)
}

// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
func (o ProviderAuthJwtPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
func (o ProviderAuthJwtPtrOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderAuthJwt) map[string]string {
		if v == nil {
			return nil
		}
		return v.Meta
	}).(pulumi.StringMapOutput)
}

func (o ProviderAuthJwtPtrOutput) UseTerraformCloudWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderAuthJwt) *bool {
		if v == nil {
			return nil
		}
		return v.UseTerraformCloudWorkloadIdentity
	}).(pulumi.BoolPtrOutput)
}

type ProviderHeader struct {
	// The name of the header.
	Name string `pulumi:"name"`
	// The value of the header.
	Value string `pulumi:"value"`
}

// ProviderHeaderInput is an input type that accepts ProviderHeaderArgs and ProviderHeaderOutput values.
// You can construct a concrete instance of `ProviderHeaderInput` via:
//
//	ProviderHeaderArgs{...}
type ProviderHeaderInput interface {
	pulumi.Input

	ToProviderHeaderOutput() ProviderHeaderOutput
	ToProviderHeaderOutputWithContext(context.Context) ProviderHeaderOutput
}

type ProviderHeaderArgs struct {
	// The name of the header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProviderHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderHeader)(nil)).Elem()
}

func (i ProviderHeaderArgs) ToProviderHeaderOutput() ProviderHeaderOutput {
	return i.ToProviderHeaderOutputWithContext(context.Background())
}

func (i ProviderHeaderArgs) ToProviderHeaderOutputWithContext(ctx context.Context) ProviderHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderHeaderOutput)
}

// ProviderHeaderArrayInput is an input type that accepts ProviderHeaderArray and ProviderHeaderArrayOutput values.
// You can construct a concrete instance of `ProviderHeaderArrayInput` via:
//
//	ProviderHeaderArray{ ProviderHeaderArgs{...} }
type ProviderHeaderArrayInput interface {
	pulumi.Input

	ToProviderHeaderArrayOutput() ProviderHeaderArrayOutput
	ToProviderHeaderArrayOutputWithContext(context.Context) ProviderHeaderArrayOutput
}

type ProviderHeaderArray []ProviderHeaderInput

func (ProviderHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderHeader)(nil)).Elem()
}

func (i ProviderHeaderArray) ToProviderHeaderArrayOutput() ProviderHeaderArrayOutput {
	return i.ToProviderHeaderArrayOutputWithContext(context.Background())
}

func (i ProviderHeaderArray) ToProviderHeaderArrayOutputWithContext(ctx context.Context) ProviderHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderHeaderArrayOutput)
}

type ProviderHeaderOutput struct{ *pulumi.OutputState }

func (ProviderHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderHeader)(nil)).Elem()
}

func (o ProviderHeaderOutput) ToProviderHeaderOutput() ProviderHeaderOutput {
	return o
}

func (o ProviderHeaderOutput) ToProviderHeaderOutputWithContext(ctx context.Context) ProviderHeaderOutput {
	return o
}

// The name of the header.
func (o ProviderHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the header.
func (o ProviderHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ProviderHeaderArrayOutput struct{ *pulumi.OutputState }

func (ProviderHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderHeader)(nil)).Elem()
}

func (o ProviderHeaderArrayOutput) ToProviderHeaderArrayOutput() ProviderHeaderArrayOutput {
	return o
}

func (o ProviderHeaderArrayOutput) ToProviderHeaderArrayOutputWithContext(ctx context.Context) ProviderHeaderArrayOutput {
	return o
}

func (o ProviderHeaderArrayOutput) Index(i pulumi.IntInput) ProviderHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderHeader {
		return vs[0].([]ProviderHeader)[vs[1].(int)]
	}).(ProviderHeaderOutput)
}

type ServiceCheck struct {
	// An ID, *unique per agent*.
	CheckId string `pulumi:"checkId"`
	// The time after which the service is automatically deregistered when in the `critical` state. Defaults to `30s`.
	DeregisterCriticalServiceAfter *string `pulumi:"deregisterCriticalServiceAfter"`
	// The headers to send for an HTTP check. The attributes of each header is given below.
	Headers []ServiceCheckHeader `pulumi:"headers"`
	// The HTTP endpoint to call for an HTTP check.
	Http *string `pulumi:"http"`
	// The interval to wait between each health-check invocation.
	Interval string `pulumi:"interval"`
	// The method to use for HTTP health-checks. Defaults to `GET`.
	Method *string `pulumi:"method"`
	// The name of the health-check.
	Name string `pulumi:"name"`
	// An opaque field meant to hold human readable text.
	Notes *string `pulumi:"notes"`
	// The initial health-check status.
	Status *string `pulumi:"status"`
	// The TCP address and port to connect to for a TCP check.
	Tcp *string `pulumi:"tcp"`
	// Specifies a timeout for outgoing connections in the case of a HTTP or TCP check.
	Timeout string `pulumi:"timeout"`
	// Whether to deactivate certificate verification for HTTP health-checks. Defaults to `false`.
	TlsSkipVerify *bool `pulumi:"tlsSkipVerify"`
}

// ServiceCheckInput is an input type that accepts ServiceCheckArgs and ServiceCheckOutput values.
// You can construct a concrete instance of `ServiceCheckInput` via:
//
//	ServiceCheckArgs{...}
type ServiceCheckInput interface {
	pulumi.Input

	ToServiceCheckOutput() ServiceCheckOutput
	ToServiceCheckOutputWithContext(context.Context) ServiceCheckOutput
}

type ServiceCheckArgs struct {
	// An ID, *unique per agent*.
	CheckId pulumi.StringInput `pulumi:"checkId"`
	// The time after which the service is automatically deregistered when in the `critical` state. Defaults to `30s`.
	DeregisterCriticalServiceAfter pulumi.StringPtrInput `pulumi:"deregisterCriticalServiceAfter"`
	// The headers to send for an HTTP check. The attributes of each header is given below.
	Headers ServiceCheckHeaderArrayInput `pulumi:"headers"`
	// The HTTP endpoint to call for an HTTP check.
	Http pulumi.StringPtrInput `pulumi:"http"`
	// The interval to wait between each health-check invocation.
	Interval pulumi.StringInput `pulumi:"interval"`
	// The method to use for HTTP health-checks. Defaults to `GET`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The name of the health-check.
	Name pulumi.StringInput `pulumi:"name"`
	// An opaque field meant to hold human readable text.
	Notes pulumi.StringPtrInput `pulumi:"notes"`
	// The initial health-check status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The TCP address and port to connect to for a TCP check.
	Tcp pulumi.StringPtrInput `pulumi:"tcp"`
	// Specifies a timeout for outgoing connections in the case of a HTTP or TCP check.
	Timeout pulumi.StringInput `pulumi:"timeout"`
	// Whether to deactivate certificate verification for HTTP health-checks. Defaults to `false`.
	TlsSkipVerify pulumi.BoolPtrInput `pulumi:"tlsSkipVerify"`
}

func (ServiceCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCheck)(nil)).Elem()
}

func (i ServiceCheckArgs) ToServiceCheckOutput() ServiceCheckOutput {
	return i.ToServiceCheckOutputWithContext(context.Background())
}

func (i ServiceCheckArgs) ToServiceCheckOutputWithContext(ctx context.Context) ServiceCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCheckOutput)
}

// ServiceCheckArrayInput is an input type that accepts ServiceCheckArray and ServiceCheckArrayOutput values.
// You can construct a concrete instance of `ServiceCheckArrayInput` via:
//
//	ServiceCheckArray{ ServiceCheckArgs{...} }
type ServiceCheckArrayInput interface {
	pulumi.Input

	ToServiceCheckArrayOutput() ServiceCheckArrayOutput
	ToServiceCheckArrayOutputWithContext(context.Context) ServiceCheckArrayOutput
}

type ServiceCheckArray []ServiceCheckInput

func (ServiceCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCheck)(nil)).Elem()
}

func (i ServiceCheckArray) ToServiceCheckArrayOutput() ServiceCheckArrayOutput {
	return i.ToServiceCheckArrayOutputWithContext(context.Background())
}

func (i ServiceCheckArray) ToServiceCheckArrayOutputWithContext(ctx context.Context) ServiceCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCheckArrayOutput)
}

type ServiceCheckOutput struct{ *pulumi.OutputState }

func (ServiceCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCheck)(nil)).Elem()
}

func (o ServiceCheckOutput) ToServiceCheckOutput() ServiceCheckOutput {
	return o
}

func (o ServiceCheckOutput) ToServiceCheckOutputWithContext(ctx context.Context) ServiceCheckOutput {
	return o
}

// An ID, *unique per agent*.
func (o ServiceCheckOutput) CheckId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCheck) string { return v.CheckId }).(pulumi.StringOutput)
}

// The time after which the service is automatically deregistered when in the `critical` state. Defaults to `30s`.
func (o ServiceCheckOutput) DeregisterCriticalServiceAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.DeregisterCriticalServiceAfter }).(pulumi.StringPtrOutput)
}

// The headers to send for an HTTP check. The attributes of each header is given below.
func (o ServiceCheckOutput) Headers() ServiceCheckHeaderArrayOutput {
	return o.ApplyT(func(v ServiceCheck) []ServiceCheckHeader { return v.Headers }).(ServiceCheckHeaderArrayOutput)
}

// The HTTP endpoint to call for an HTTP check.
func (o ServiceCheckOutput) Http() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.Http }).(pulumi.StringPtrOutput)
}

// The interval to wait between each health-check invocation.
func (o ServiceCheckOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCheck) string { return v.Interval }).(pulumi.StringOutput)
}

// The method to use for HTTP health-checks. Defaults to `GET`.
func (o ServiceCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The name of the health-check.
func (o ServiceCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCheck) string { return v.Name }).(pulumi.StringOutput)
}

// An opaque field meant to hold human readable text.
func (o ServiceCheckOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// The initial health-check status.
func (o ServiceCheckOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The TCP address and port to connect to for a TCP check.
func (o ServiceCheckOutput) Tcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *string { return v.Tcp }).(pulumi.StringPtrOutput)
}

// Specifies a timeout for outgoing connections in the case of a HTTP or TCP check.
func (o ServiceCheckOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCheck) string { return v.Timeout }).(pulumi.StringOutput)
}

// Whether to deactivate certificate verification for HTTP health-checks. Defaults to `false`.
func (o ServiceCheckOutput) TlsSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceCheck) *bool { return v.TlsSkipVerify }).(pulumi.BoolPtrOutput)
}

type ServiceCheckArrayOutput struct{ *pulumi.OutputState }

func (ServiceCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCheck)(nil)).Elem()
}

func (o ServiceCheckArrayOutput) ToServiceCheckArrayOutput() ServiceCheckArrayOutput {
	return o
}

func (o ServiceCheckArrayOutput) ToServiceCheckArrayOutputWithContext(ctx context.Context) ServiceCheckArrayOutput {
	return o
}

func (o ServiceCheckArrayOutput) Index(i pulumi.IntInput) ServiceCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCheck {
		return vs[0].([]ServiceCheck)[vs[1].(int)]
	}).(ServiceCheckOutput)
}

type ServiceCheckHeader struct {
	// The name of the header.
	Name string `pulumi:"name"`
	// The header's list of values.
	Values []string `pulumi:"values"`
}

// ServiceCheckHeaderInput is an input type that accepts ServiceCheckHeaderArgs and ServiceCheckHeaderOutput values.
// You can construct a concrete instance of `ServiceCheckHeaderInput` via:
//
//	ServiceCheckHeaderArgs{...}
type ServiceCheckHeaderInput interface {
	pulumi.Input

	ToServiceCheckHeaderOutput() ServiceCheckHeaderOutput
	ToServiceCheckHeaderOutputWithContext(context.Context) ServiceCheckHeaderOutput
}

type ServiceCheckHeaderArgs struct {
	// The name of the header.
	Name pulumi.StringInput `pulumi:"name"`
	// The header's list of values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ServiceCheckHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCheckHeader)(nil)).Elem()
}

func (i ServiceCheckHeaderArgs) ToServiceCheckHeaderOutput() ServiceCheckHeaderOutput {
	return i.ToServiceCheckHeaderOutputWithContext(context.Background())
}

func (i ServiceCheckHeaderArgs) ToServiceCheckHeaderOutputWithContext(ctx context.Context) ServiceCheckHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCheckHeaderOutput)
}

// ServiceCheckHeaderArrayInput is an input type that accepts ServiceCheckHeaderArray and ServiceCheckHeaderArrayOutput values.
// You can construct a concrete instance of `ServiceCheckHeaderArrayInput` via:
//
//	ServiceCheckHeaderArray{ ServiceCheckHeaderArgs{...} }
type ServiceCheckHeaderArrayInput interface {
	pulumi.Input

	ToServiceCheckHeaderArrayOutput() ServiceCheckHeaderArrayOutput
	ToServiceCheckHeaderArrayOutputWithContext(context.Context) ServiceCheckHeaderArrayOutput
}

type ServiceCheckHeaderArray []ServiceCheckHeaderInput

func (ServiceCheckHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCheckHeader)(nil)).Elem()
}

func (i ServiceCheckHeaderArray) ToServiceCheckHeaderArrayOutput() ServiceCheckHeaderArrayOutput {
	return i.ToServiceCheckHeaderArrayOutputWithContext(context.Background())
}

func (i ServiceCheckHeaderArray) ToServiceCheckHeaderArrayOutputWithContext(ctx context.Context) ServiceCheckHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCheckHeaderArrayOutput)
}

type ServiceCheckHeaderOutput struct{ *pulumi.OutputState }

func (ServiceCheckHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCheckHeader)(nil)).Elem()
}

func (o ServiceCheckHeaderOutput) ToServiceCheckHeaderOutput() ServiceCheckHeaderOutput {
	return o
}

func (o ServiceCheckHeaderOutput) ToServiceCheckHeaderOutputWithContext(ctx context.Context) ServiceCheckHeaderOutput {
	return o
}

// The name of the header.
func (o ServiceCheckHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCheckHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The header's list of values.
func (o ServiceCheckHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCheckHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ServiceCheckHeaderArrayOutput struct{ *pulumi.OutputState }

func (ServiceCheckHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCheckHeader)(nil)).Elem()
}

func (o ServiceCheckHeaderArrayOutput) ToServiceCheckHeaderArrayOutput() ServiceCheckHeaderArrayOutput {
	return o
}

func (o ServiceCheckHeaderArrayOutput) ToServiceCheckHeaderArrayOutputWithContext(ctx context.Context) ServiceCheckHeaderArrayOutput {
	return o
}

func (o ServiceCheckHeaderArrayOutput) Index(i pulumi.IntInput) ServiceCheckHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCheckHeader {
		return vs[0].([]ServiceCheckHeader)[vs[1].(int)]
	}).(ServiceCheckHeaderOutput)
}

type GetAclAuthMethodNamespaceRule struct {
	BindNamespace string `pulumi:"bindNamespace"`
	Selector      string `pulumi:"selector"`
}

// GetAclAuthMethodNamespaceRuleInput is an input type that accepts GetAclAuthMethodNamespaceRuleArgs and GetAclAuthMethodNamespaceRuleOutput values.
// You can construct a concrete instance of `GetAclAuthMethodNamespaceRuleInput` via:
//
//	GetAclAuthMethodNamespaceRuleArgs{...}
type GetAclAuthMethodNamespaceRuleInput interface {
	pulumi.Input

	ToGetAclAuthMethodNamespaceRuleOutput() GetAclAuthMethodNamespaceRuleOutput
	ToGetAclAuthMethodNamespaceRuleOutputWithContext(context.Context) GetAclAuthMethodNamespaceRuleOutput
}

type GetAclAuthMethodNamespaceRuleArgs struct {
	BindNamespace pulumi.StringInput `pulumi:"bindNamespace"`
	Selector      pulumi.StringInput `pulumi:"selector"`
}

func (GetAclAuthMethodNamespaceRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclAuthMethodNamespaceRule)(nil)).Elem()
}

func (i GetAclAuthMethodNamespaceRuleArgs) ToGetAclAuthMethodNamespaceRuleOutput() GetAclAuthMethodNamespaceRuleOutput {
	return i.ToGetAclAuthMethodNamespaceRuleOutputWithContext(context.Background())
}

func (i GetAclAuthMethodNamespaceRuleArgs) ToGetAclAuthMethodNamespaceRuleOutputWithContext(ctx context.Context) GetAclAuthMethodNamespaceRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclAuthMethodNamespaceRuleOutput)
}

// GetAclAuthMethodNamespaceRuleArrayInput is an input type that accepts GetAclAuthMethodNamespaceRuleArray and GetAclAuthMethodNamespaceRuleArrayOutput values.
// You can construct a concrete instance of `GetAclAuthMethodNamespaceRuleArrayInput` via:
//
//	GetAclAuthMethodNamespaceRuleArray{ GetAclAuthMethodNamespaceRuleArgs{...} }
type GetAclAuthMethodNamespaceRuleArrayInput interface {
	pulumi.Input

	ToGetAclAuthMethodNamespaceRuleArrayOutput() GetAclAuthMethodNamespaceRuleArrayOutput
	ToGetAclAuthMethodNamespaceRuleArrayOutputWithContext(context.Context) GetAclAuthMethodNamespaceRuleArrayOutput
}

type GetAclAuthMethodNamespaceRuleArray []GetAclAuthMethodNamespaceRuleInput

func (GetAclAuthMethodNamespaceRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclAuthMethodNamespaceRule)(nil)).Elem()
}

func (i GetAclAuthMethodNamespaceRuleArray) ToGetAclAuthMethodNamespaceRuleArrayOutput() GetAclAuthMethodNamespaceRuleArrayOutput {
	return i.ToGetAclAuthMethodNamespaceRuleArrayOutputWithContext(context.Background())
}

func (i GetAclAuthMethodNamespaceRuleArray) ToGetAclAuthMethodNamespaceRuleArrayOutputWithContext(ctx context.Context) GetAclAuthMethodNamespaceRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclAuthMethodNamespaceRuleArrayOutput)
}

type GetAclAuthMethodNamespaceRuleOutput struct{ *pulumi.OutputState }

func (GetAclAuthMethodNamespaceRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclAuthMethodNamespaceRule)(nil)).Elem()
}

func (o GetAclAuthMethodNamespaceRuleOutput) ToGetAclAuthMethodNamespaceRuleOutput() GetAclAuthMethodNamespaceRuleOutput {
	return o
}

func (o GetAclAuthMethodNamespaceRuleOutput) ToGetAclAuthMethodNamespaceRuleOutputWithContext(ctx context.Context) GetAclAuthMethodNamespaceRuleOutput {
	return o
}

func (o GetAclAuthMethodNamespaceRuleOutput) BindNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclAuthMethodNamespaceRule) string { return v.BindNamespace }).(pulumi.StringOutput)
}

func (o GetAclAuthMethodNamespaceRuleOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclAuthMethodNamespaceRule) string { return v.Selector }).(pulumi.StringOutput)
}

type GetAclAuthMethodNamespaceRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAclAuthMethodNamespaceRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclAuthMethodNamespaceRule)(nil)).Elem()
}

func (o GetAclAuthMethodNamespaceRuleArrayOutput) ToGetAclAuthMethodNamespaceRuleArrayOutput() GetAclAuthMethodNamespaceRuleArrayOutput {
	return o
}

func (o GetAclAuthMethodNamespaceRuleArrayOutput) ToGetAclAuthMethodNamespaceRuleArrayOutputWithContext(ctx context.Context) GetAclAuthMethodNamespaceRuleArrayOutput {
	return o
}

func (o GetAclAuthMethodNamespaceRuleArrayOutput) Index(i pulumi.IntInput) GetAclAuthMethodNamespaceRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclAuthMethodNamespaceRule {
		return vs[0].([]GetAclAuthMethodNamespaceRule)[vs[1].(int)]
	}).(GetAclAuthMethodNamespaceRuleOutput)
}

type GetAclRoleNodeIdentity struct {
	// Specifies the nodes datacenter. This will result in effective policy only being valid in that datacenter.
	Datacenter string `pulumi:"datacenter"`
	// The name of the node.
	NodeName string `pulumi:"nodeName"`
}

// GetAclRoleNodeIdentityInput is an input type that accepts GetAclRoleNodeIdentityArgs and GetAclRoleNodeIdentityOutput values.
// You can construct a concrete instance of `GetAclRoleNodeIdentityInput` via:
//
//	GetAclRoleNodeIdentityArgs{...}
type GetAclRoleNodeIdentityInput interface {
	pulumi.Input

	ToGetAclRoleNodeIdentityOutput() GetAclRoleNodeIdentityOutput
	ToGetAclRoleNodeIdentityOutputWithContext(context.Context) GetAclRoleNodeIdentityOutput
}

type GetAclRoleNodeIdentityArgs struct {
	// Specifies the nodes datacenter. This will result in effective policy only being valid in that datacenter.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The name of the node.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetAclRoleNodeIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleNodeIdentity)(nil)).Elem()
}

func (i GetAclRoleNodeIdentityArgs) ToGetAclRoleNodeIdentityOutput() GetAclRoleNodeIdentityOutput {
	return i.ToGetAclRoleNodeIdentityOutputWithContext(context.Background())
}

func (i GetAclRoleNodeIdentityArgs) ToGetAclRoleNodeIdentityOutputWithContext(ctx context.Context) GetAclRoleNodeIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleNodeIdentityOutput)
}

// GetAclRoleNodeIdentityArrayInput is an input type that accepts GetAclRoleNodeIdentityArray and GetAclRoleNodeIdentityArrayOutput values.
// You can construct a concrete instance of `GetAclRoleNodeIdentityArrayInput` via:
//
//	GetAclRoleNodeIdentityArray{ GetAclRoleNodeIdentityArgs{...} }
type GetAclRoleNodeIdentityArrayInput interface {
	pulumi.Input

	ToGetAclRoleNodeIdentityArrayOutput() GetAclRoleNodeIdentityArrayOutput
	ToGetAclRoleNodeIdentityArrayOutputWithContext(context.Context) GetAclRoleNodeIdentityArrayOutput
}

type GetAclRoleNodeIdentityArray []GetAclRoleNodeIdentityInput

func (GetAclRoleNodeIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleNodeIdentity)(nil)).Elem()
}

func (i GetAclRoleNodeIdentityArray) ToGetAclRoleNodeIdentityArrayOutput() GetAclRoleNodeIdentityArrayOutput {
	return i.ToGetAclRoleNodeIdentityArrayOutputWithContext(context.Background())
}

func (i GetAclRoleNodeIdentityArray) ToGetAclRoleNodeIdentityArrayOutputWithContext(ctx context.Context) GetAclRoleNodeIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleNodeIdentityArrayOutput)
}

type GetAclRoleNodeIdentityOutput struct{ *pulumi.OutputState }

func (GetAclRoleNodeIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleNodeIdentity)(nil)).Elem()
}

func (o GetAclRoleNodeIdentityOutput) ToGetAclRoleNodeIdentityOutput() GetAclRoleNodeIdentityOutput {
	return o
}

func (o GetAclRoleNodeIdentityOutput) ToGetAclRoleNodeIdentityOutputWithContext(ctx context.Context) GetAclRoleNodeIdentityOutput {
	return o
}

// Specifies the nodes datacenter. This will result in effective policy only being valid in that datacenter.
func (o GetAclRoleNodeIdentityOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRoleNodeIdentity) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The name of the node.
func (o GetAclRoleNodeIdentityOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRoleNodeIdentity) string { return v.NodeName }).(pulumi.StringOutput)
}

type GetAclRoleNodeIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetAclRoleNodeIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleNodeIdentity)(nil)).Elem()
}

func (o GetAclRoleNodeIdentityArrayOutput) ToGetAclRoleNodeIdentityArrayOutput() GetAclRoleNodeIdentityArrayOutput {
	return o
}

func (o GetAclRoleNodeIdentityArrayOutput) ToGetAclRoleNodeIdentityArrayOutputWithContext(ctx context.Context) GetAclRoleNodeIdentityArrayOutput {
	return o
}

func (o GetAclRoleNodeIdentityArrayOutput) Index(i pulumi.IntInput) GetAclRoleNodeIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclRoleNodeIdentity {
		return vs[0].([]GetAclRoleNodeIdentity)[vs[1].(int)]
	}).(GetAclRoleNodeIdentityOutput)
}

type GetAclRolePolicy struct {
	// The ID of the policy.
	Id string `pulumi:"id"`
	// The name of the policy.
	Name string `pulumi:"name"`
}

// GetAclRolePolicyInput is an input type that accepts GetAclRolePolicyArgs and GetAclRolePolicyOutput values.
// You can construct a concrete instance of `GetAclRolePolicyInput` via:
//
//	GetAclRolePolicyArgs{...}
type GetAclRolePolicyInput interface {
	pulumi.Input

	ToGetAclRolePolicyOutput() GetAclRolePolicyOutput
	ToGetAclRolePolicyOutputWithContext(context.Context) GetAclRolePolicyOutput
}

type GetAclRolePolicyArgs struct {
	// The ID of the policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAclRolePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRolePolicy)(nil)).Elem()
}

func (i GetAclRolePolicyArgs) ToGetAclRolePolicyOutput() GetAclRolePolicyOutput {
	return i.ToGetAclRolePolicyOutputWithContext(context.Background())
}

func (i GetAclRolePolicyArgs) ToGetAclRolePolicyOutputWithContext(ctx context.Context) GetAclRolePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRolePolicyOutput)
}

// GetAclRolePolicyArrayInput is an input type that accepts GetAclRolePolicyArray and GetAclRolePolicyArrayOutput values.
// You can construct a concrete instance of `GetAclRolePolicyArrayInput` via:
//
//	GetAclRolePolicyArray{ GetAclRolePolicyArgs{...} }
type GetAclRolePolicyArrayInput interface {
	pulumi.Input

	ToGetAclRolePolicyArrayOutput() GetAclRolePolicyArrayOutput
	ToGetAclRolePolicyArrayOutputWithContext(context.Context) GetAclRolePolicyArrayOutput
}

type GetAclRolePolicyArray []GetAclRolePolicyInput

func (GetAclRolePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRolePolicy)(nil)).Elem()
}

func (i GetAclRolePolicyArray) ToGetAclRolePolicyArrayOutput() GetAclRolePolicyArrayOutput {
	return i.ToGetAclRolePolicyArrayOutputWithContext(context.Background())
}

func (i GetAclRolePolicyArray) ToGetAclRolePolicyArrayOutputWithContext(ctx context.Context) GetAclRolePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRolePolicyArrayOutput)
}

type GetAclRolePolicyOutput struct{ *pulumi.OutputState }

func (GetAclRolePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRolePolicy)(nil)).Elem()
}

func (o GetAclRolePolicyOutput) ToGetAclRolePolicyOutput() GetAclRolePolicyOutput {
	return o
}

func (o GetAclRolePolicyOutput) ToGetAclRolePolicyOutputWithContext(ctx context.Context) GetAclRolePolicyOutput {
	return o
}

// The ID of the policy.
func (o GetAclRolePolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRolePolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy.
func (o GetAclRolePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRolePolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetAclRolePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAclRolePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRolePolicy)(nil)).Elem()
}

func (o GetAclRolePolicyArrayOutput) ToGetAclRolePolicyArrayOutput() GetAclRolePolicyArrayOutput {
	return o
}

func (o GetAclRolePolicyArrayOutput) ToGetAclRolePolicyArrayOutputWithContext(ctx context.Context) GetAclRolePolicyArrayOutput {
	return o
}

func (o GetAclRolePolicyArrayOutput) Index(i pulumi.IntInput) GetAclRolePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclRolePolicy {
		return vs[0].([]GetAclRolePolicy)[vs[1].(int)]
	}).(GetAclRolePolicyOutput)
}

type GetAclRoleServiceIdentity struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the service.
	ServiceName *string `pulumi:"serviceName"`
}

// GetAclRoleServiceIdentityInput is an input type that accepts GetAclRoleServiceIdentityArgs and GetAclRoleServiceIdentityOutput values.
// You can construct a concrete instance of `GetAclRoleServiceIdentityInput` via:
//
//	GetAclRoleServiceIdentityArgs{...}
type GetAclRoleServiceIdentityInput interface {
	pulumi.Input

	ToGetAclRoleServiceIdentityOutput() GetAclRoleServiceIdentityOutput
	ToGetAclRoleServiceIdentityOutputWithContext(context.Context) GetAclRoleServiceIdentityOutput
}

type GetAclRoleServiceIdentityArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the service.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (GetAclRoleServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleServiceIdentity)(nil)).Elem()
}

func (i GetAclRoleServiceIdentityArgs) ToGetAclRoleServiceIdentityOutput() GetAclRoleServiceIdentityOutput {
	return i.ToGetAclRoleServiceIdentityOutputWithContext(context.Background())
}

func (i GetAclRoleServiceIdentityArgs) ToGetAclRoleServiceIdentityOutputWithContext(ctx context.Context) GetAclRoleServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleServiceIdentityOutput)
}

// GetAclRoleServiceIdentityArrayInput is an input type that accepts GetAclRoleServiceIdentityArray and GetAclRoleServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetAclRoleServiceIdentityArrayInput` via:
//
//	GetAclRoleServiceIdentityArray{ GetAclRoleServiceIdentityArgs{...} }
type GetAclRoleServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetAclRoleServiceIdentityArrayOutput() GetAclRoleServiceIdentityArrayOutput
	ToGetAclRoleServiceIdentityArrayOutputWithContext(context.Context) GetAclRoleServiceIdentityArrayOutput
}

type GetAclRoleServiceIdentityArray []GetAclRoleServiceIdentityInput

func (GetAclRoleServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleServiceIdentity)(nil)).Elem()
}

func (i GetAclRoleServiceIdentityArray) ToGetAclRoleServiceIdentityArrayOutput() GetAclRoleServiceIdentityArrayOutput {
	return i.ToGetAclRoleServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetAclRoleServiceIdentityArray) ToGetAclRoleServiceIdentityArrayOutputWithContext(ctx context.Context) GetAclRoleServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleServiceIdentityArrayOutput)
}

type GetAclRoleServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetAclRoleServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleServiceIdentity)(nil)).Elem()
}

func (o GetAclRoleServiceIdentityOutput) ToGetAclRoleServiceIdentityOutput() GetAclRoleServiceIdentityOutput {
	return o
}

func (o GetAclRoleServiceIdentityOutput) ToGetAclRoleServiceIdentityOutputWithContext(ctx context.Context) GetAclRoleServiceIdentityOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o GetAclRoleServiceIdentityOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclRoleServiceIdentity) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the service.
func (o GetAclRoleServiceIdentityOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclRoleServiceIdentity) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type GetAclRoleServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetAclRoleServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleServiceIdentity)(nil)).Elem()
}

func (o GetAclRoleServiceIdentityArrayOutput) ToGetAclRoleServiceIdentityArrayOutput() GetAclRoleServiceIdentityArrayOutput {
	return o
}

func (o GetAclRoleServiceIdentityArrayOutput) ToGetAclRoleServiceIdentityArrayOutputWithContext(ctx context.Context) GetAclRoleServiceIdentityArrayOutput {
	return o
}

func (o GetAclRoleServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetAclRoleServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclRoleServiceIdentity {
		return vs[0].([]GetAclRoleServiceIdentity)[vs[1].(int)]
	}).(GetAclRoleServiceIdentityOutput)
}

type GetAclRoleTemplatedPolicy struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName string `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables []GetAclRoleTemplatedPolicyTemplateVariable `pulumi:"templateVariables"`
}

// GetAclRoleTemplatedPolicyInput is an input type that accepts GetAclRoleTemplatedPolicyArgs and GetAclRoleTemplatedPolicyOutput values.
// You can construct a concrete instance of `GetAclRoleTemplatedPolicyInput` via:
//
//	GetAclRoleTemplatedPolicyArgs{...}
type GetAclRoleTemplatedPolicyInput interface {
	pulumi.Input

	ToGetAclRoleTemplatedPolicyOutput() GetAclRoleTemplatedPolicyOutput
	ToGetAclRoleTemplatedPolicyOutputWithContext(context.Context) GetAclRoleTemplatedPolicyOutput
}

type GetAclRoleTemplatedPolicyArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables GetAclRoleTemplatedPolicyTemplateVariableArrayInput `pulumi:"templateVariables"`
}

func (GetAclRoleTemplatedPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleTemplatedPolicy)(nil)).Elem()
}

func (i GetAclRoleTemplatedPolicyArgs) ToGetAclRoleTemplatedPolicyOutput() GetAclRoleTemplatedPolicyOutput {
	return i.ToGetAclRoleTemplatedPolicyOutputWithContext(context.Background())
}

func (i GetAclRoleTemplatedPolicyArgs) ToGetAclRoleTemplatedPolicyOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleTemplatedPolicyOutput)
}

// GetAclRoleTemplatedPolicyArrayInput is an input type that accepts GetAclRoleTemplatedPolicyArray and GetAclRoleTemplatedPolicyArrayOutput values.
// You can construct a concrete instance of `GetAclRoleTemplatedPolicyArrayInput` via:
//
//	GetAclRoleTemplatedPolicyArray{ GetAclRoleTemplatedPolicyArgs{...} }
type GetAclRoleTemplatedPolicyArrayInput interface {
	pulumi.Input

	ToGetAclRoleTemplatedPolicyArrayOutput() GetAclRoleTemplatedPolicyArrayOutput
	ToGetAclRoleTemplatedPolicyArrayOutputWithContext(context.Context) GetAclRoleTemplatedPolicyArrayOutput
}

type GetAclRoleTemplatedPolicyArray []GetAclRoleTemplatedPolicyInput

func (GetAclRoleTemplatedPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleTemplatedPolicy)(nil)).Elem()
}

func (i GetAclRoleTemplatedPolicyArray) ToGetAclRoleTemplatedPolicyArrayOutput() GetAclRoleTemplatedPolicyArrayOutput {
	return i.ToGetAclRoleTemplatedPolicyArrayOutputWithContext(context.Background())
}

func (i GetAclRoleTemplatedPolicyArray) ToGetAclRoleTemplatedPolicyArrayOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleTemplatedPolicyArrayOutput)
}

type GetAclRoleTemplatedPolicyOutput struct{ *pulumi.OutputState }

func (GetAclRoleTemplatedPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleTemplatedPolicy)(nil)).Elem()
}

func (o GetAclRoleTemplatedPolicyOutput) ToGetAclRoleTemplatedPolicyOutput() GetAclRoleTemplatedPolicyOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyOutput) ToGetAclRoleTemplatedPolicyOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o GetAclRoleTemplatedPolicyOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclRoleTemplatedPolicy) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the templated policies.
func (o GetAclRoleTemplatedPolicyOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRoleTemplatedPolicy) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The templated policy variables.
func (o GetAclRoleTemplatedPolicyOutput) TemplateVariables() GetAclRoleTemplatedPolicyTemplateVariableArrayOutput {
	return o.ApplyT(func(v GetAclRoleTemplatedPolicy) []GetAclRoleTemplatedPolicyTemplateVariable {
		return v.TemplateVariables
	}).(GetAclRoleTemplatedPolicyTemplateVariableArrayOutput)
}

type GetAclRoleTemplatedPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAclRoleTemplatedPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleTemplatedPolicy)(nil)).Elem()
}

func (o GetAclRoleTemplatedPolicyArrayOutput) ToGetAclRoleTemplatedPolicyArrayOutput() GetAclRoleTemplatedPolicyArrayOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyArrayOutput) ToGetAclRoleTemplatedPolicyArrayOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyArrayOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyArrayOutput) Index(i pulumi.IntInput) GetAclRoleTemplatedPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclRoleTemplatedPolicy {
		return vs[0].([]GetAclRoleTemplatedPolicy)[vs[1].(int)]
	}).(GetAclRoleTemplatedPolicyOutput)
}

type GetAclRoleTemplatedPolicyTemplateVariable struct {
	// The name of node, workload identity or service.
	Name string `pulumi:"name"`
}

// GetAclRoleTemplatedPolicyTemplateVariableInput is an input type that accepts GetAclRoleTemplatedPolicyTemplateVariableArgs and GetAclRoleTemplatedPolicyTemplateVariableOutput values.
// You can construct a concrete instance of `GetAclRoleTemplatedPolicyTemplateVariableInput` via:
//
//	GetAclRoleTemplatedPolicyTemplateVariableArgs{...}
type GetAclRoleTemplatedPolicyTemplateVariableInput interface {
	pulumi.Input

	ToGetAclRoleTemplatedPolicyTemplateVariableOutput() GetAclRoleTemplatedPolicyTemplateVariableOutput
	ToGetAclRoleTemplatedPolicyTemplateVariableOutputWithContext(context.Context) GetAclRoleTemplatedPolicyTemplateVariableOutput
}

type GetAclRoleTemplatedPolicyTemplateVariableArgs struct {
	// The name of node, workload identity or service.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAclRoleTemplatedPolicyTemplateVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (i GetAclRoleTemplatedPolicyTemplateVariableArgs) ToGetAclRoleTemplatedPolicyTemplateVariableOutput() GetAclRoleTemplatedPolicyTemplateVariableOutput {
	return i.ToGetAclRoleTemplatedPolicyTemplateVariableOutputWithContext(context.Background())
}

func (i GetAclRoleTemplatedPolicyTemplateVariableArgs) ToGetAclRoleTemplatedPolicyTemplateVariableOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyTemplateVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleTemplatedPolicyTemplateVariableOutput)
}

// GetAclRoleTemplatedPolicyTemplateVariableArrayInput is an input type that accepts GetAclRoleTemplatedPolicyTemplateVariableArray and GetAclRoleTemplatedPolicyTemplateVariableArrayOutput values.
// You can construct a concrete instance of `GetAclRoleTemplatedPolicyTemplateVariableArrayInput` via:
//
//	GetAclRoleTemplatedPolicyTemplateVariableArray{ GetAclRoleTemplatedPolicyTemplateVariableArgs{...} }
type GetAclRoleTemplatedPolicyTemplateVariableArrayInput interface {
	pulumi.Input

	ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutput() GetAclRoleTemplatedPolicyTemplateVariableArrayOutput
	ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutputWithContext(context.Context) GetAclRoleTemplatedPolicyTemplateVariableArrayOutput
}

type GetAclRoleTemplatedPolicyTemplateVariableArray []GetAclRoleTemplatedPolicyTemplateVariableInput

func (GetAclRoleTemplatedPolicyTemplateVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (i GetAclRoleTemplatedPolicyTemplateVariableArray) ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutput() GetAclRoleTemplatedPolicyTemplateVariableArrayOutput {
	return i.ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutputWithContext(context.Background())
}

func (i GetAclRoleTemplatedPolicyTemplateVariableArray) ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyTemplateVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclRoleTemplatedPolicyTemplateVariableArrayOutput)
}

type GetAclRoleTemplatedPolicyTemplateVariableOutput struct{ *pulumi.OutputState }

func (GetAclRoleTemplatedPolicyTemplateVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclRoleTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (o GetAclRoleTemplatedPolicyTemplateVariableOutput) ToGetAclRoleTemplatedPolicyTemplateVariableOutput() GetAclRoleTemplatedPolicyTemplateVariableOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyTemplateVariableOutput) ToGetAclRoleTemplatedPolicyTemplateVariableOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyTemplateVariableOutput {
	return o
}

// The name of node, workload identity or service.
func (o GetAclRoleTemplatedPolicyTemplateVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclRoleTemplatedPolicyTemplateVariable) string { return v.Name }).(pulumi.StringOutput)
}

type GetAclRoleTemplatedPolicyTemplateVariableArrayOutput struct{ *pulumi.OutputState }

func (GetAclRoleTemplatedPolicyTemplateVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclRoleTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (o GetAclRoleTemplatedPolicyTemplateVariableArrayOutput) ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutput() GetAclRoleTemplatedPolicyTemplateVariableArrayOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyTemplateVariableArrayOutput) ToGetAclRoleTemplatedPolicyTemplateVariableArrayOutputWithContext(ctx context.Context) GetAclRoleTemplatedPolicyTemplateVariableArrayOutput {
	return o
}

func (o GetAclRoleTemplatedPolicyTemplateVariableArrayOutput) Index(i pulumi.IntInput) GetAclRoleTemplatedPolicyTemplateVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclRoleTemplatedPolicyTemplateVariable {
		return vs[0].([]GetAclRoleTemplatedPolicyTemplateVariable)[vs[1].(int)]
	}).(GetAclRoleTemplatedPolicyTemplateVariableOutput)
}

type GetAclTokenNodeIdentity struct {
	// Specifies the node's datacenter.
	Datacenter string `pulumi:"datacenter"`
	// The list of node identities that should be applied to the token.
	NodeName string `pulumi:"nodeName"`
}

// GetAclTokenNodeIdentityInput is an input type that accepts GetAclTokenNodeIdentityArgs and GetAclTokenNodeIdentityOutput values.
// You can construct a concrete instance of `GetAclTokenNodeIdentityInput` via:
//
//	GetAclTokenNodeIdentityArgs{...}
type GetAclTokenNodeIdentityInput interface {
	pulumi.Input

	ToGetAclTokenNodeIdentityOutput() GetAclTokenNodeIdentityOutput
	ToGetAclTokenNodeIdentityOutputWithContext(context.Context) GetAclTokenNodeIdentityOutput
}

type GetAclTokenNodeIdentityArgs struct {
	// Specifies the node's datacenter.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The list of node identities that should be applied to the token.
	NodeName pulumi.StringInput `pulumi:"nodeName"`
}

func (GetAclTokenNodeIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenNodeIdentity)(nil)).Elem()
}

func (i GetAclTokenNodeIdentityArgs) ToGetAclTokenNodeIdentityOutput() GetAclTokenNodeIdentityOutput {
	return i.ToGetAclTokenNodeIdentityOutputWithContext(context.Background())
}

func (i GetAclTokenNodeIdentityArgs) ToGetAclTokenNodeIdentityOutputWithContext(ctx context.Context) GetAclTokenNodeIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenNodeIdentityOutput)
}

// GetAclTokenNodeIdentityArrayInput is an input type that accepts GetAclTokenNodeIdentityArray and GetAclTokenNodeIdentityArrayOutput values.
// You can construct a concrete instance of `GetAclTokenNodeIdentityArrayInput` via:
//
//	GetAclTokenNodeIdentityArray{ GetAclTokenNodeIdentityArgs{...} }
type GetAclTokenNodeIdentityArrayInput interface {
	pulumi.Input

	ToGetAclTokenNodeIdentityArrayOutput() GetAclTokenNodeIdentityArrayOutput
	ToGetAclTokenNodeIdentityArrayOutputWithContext(context.Context) GetAclTokenNodeIdentityArrayOutput
}

type GetAclTokenNodeIdentityArray []GetAclTokenNodeIdentityInput

func (GetAclTokenNodeIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenNodeIdentity)(nil)).Elem()
}

func (i GetAclTokenNodeIdentityArray) ToGetAclTokenNodeIdentityArrayOutput() GetAclTokenNodeIdentityArrayOutput {
	return i.ToGetAclTokenNodeIdentityArrayOutputWithContext(context.Background())
}

func (i GetAclTokenNodeIdentityArray) ToGetAclTokenNodeIdentityArrayOutputWithContext(ctx context.Context) GetAclTokenNodeIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenNodeIdentityArrayOutput)
}

type GetAclTokenNodeIdentityOutput struct{ *pulumi.OutputState }

func (GetAclTokenNodeIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenNodeIdentity)(nil)).Elem()
}

func (o GetAclTokenNodeIdentityOutput) ToGetAclTokenNodeIdentityOutput() GetAclTokenNodeIdentityOutput {
	return o
}

func (o GetAclTokenNodeIdentityOutput) ToGetAclTokenNodeIdentityOutputWithContext(ctx context.Context) GetAclTokenNodeIdentityOutput {
	return o
}

// Specifies the node's datacenter.
func (o GetAclTokenNodeIdentityOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenNodeIdentity) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The list of node identities that should be applied to the token.
func (o GetAclTokenNodeIdentityOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenNodeIdentity) string { return v.NodeName }).(pulumi.StringOutput)
}

type GetAclTokenNodeIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenNodeIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenNodeIdentity)(nil)).Elem()
}

func (o GetAclTokenNodeIdentityArrayOutput) ToGetAclTokenNodeIdentityArrayOutput() GetAclTokenNodeIdentityArrayOutput {
	return o
}

func (o GetAclTokenNodeIdentityArrayOutput) ToGetAclTokenNodeIdentityArrayOutputWithContext(ctx context.Context) GetAclTokenNodeIdentityArrayOutput {
	return o
}

func (o GetAclTokenNodeIdentityArrayOutput) Index(i pulumi.IntInput) GetAclTokenNodeIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenNodeIdentity {
		return vs[0].([]GetAclTokenNodeIdentity)[vs[1].(int)]
	}).(GetAclTokenNodeIdentityOutput)
}

type GetAclTokenPolicy struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetAclTokenPolicyInput is an input type that accepts GetAclTokenPolicyArgs and GetAclTokenPolicyOutput values.
// You can construct a concrete instance of `GetAclTokenPolicyInput` via:
//
//	GetAclTokenPolicyArgs{...}
type GetAclTokenPolicyInput interface {
	pulumi.Input

	ToGetAclTokenPolicyOutput() GetAclTokenPolicyOutput
	ToGetAclTokenPolicyOutputWithContext(context.Context) GetAclTokenPolicyOutput
}

type GetAclTokenPolicyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAclTokenPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenPolicy)(nil)).Elem()
}

func (i GetAclTokenPolicyArgs) ToGetAclTokenPolicyOutput() GetAclTokenPolicyOutput {
	return i.ToGetAclTokenPolicyOutputWithContext(context.Background())
}

func (i GetAclTokenPolicyArgs) ToGetAclTokenPolicyOutputWithContext(ctx context.Context) GetAclTokenPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenPolicyOutput)
}

// GetAclTokenPolicyArrayInput is an input type that accepts GetAclTokenPolicyArray and GetAclTokenPolicyArrayOutput values.
// You can construct a concrete instance of `GetAclTokenPolicyArrayInput` via:
//
//	GetAclTokenPolicyArray{ GetAclTokenPolicyArgs{...} }
type GetAclTokenPolicyArrayInput interface {
	pulumi.Input

	ToGetAclTokenPolicyArrayOutput() GetAclTokenPolicyArrayOutput
	ToGetAclTokenPolicyArrayOutputWithContext(context.Context) GetAclTokenPolicyArrayOutput
}

type GetAclTokenPolicyArray []GetAclTokenPolicyInput

func (GetAclTokenPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenPolicy)(nil)).Elem()
}

func (i GetAclTokenPolicyArray) ToGetAclTokenPolicyArrayOutput() GetAclTokenPolicyArrayOutput {
	return i.ToGetAclTokenPolicyArrayOutputWithContext(context.Background())
}

func (i GetAclTokenPolicyArray) ToGetAclTokenPolicyArrayOutputWithContext(ctx context.Context) GetAclTokenPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenPolicyArrayOutput)
}

type GetAclTokenPolicyOutput struct{ *pulumi.OutputState }

func (GetAclTokenPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenPolicy)(nil)).Elem()
}

func (o GetAclTokenPolicyOutput) ToGetAclTokenPolicyOutput() GetAclTokenPolicyOutput {
	return o
}

func (o GetAclTokenPolicyOutput) ToGetAclTokenPolicyOutputWithContext(ctx context.Context) GetAclTokenPolicyOutput {
	return o
}

func (o GetAclTokenPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclTokenPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetAclTokenPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenPolicy)(nil)).Elem()
}

func (o GetAclTokenPolicyArrayOutput) ToGetAclTokenPolicyArrayOutput() GetAclTokenPolicyArrayOutput {
	return o
}

func (o GetAclTokenPolicyArrayOutput) ToGetAclTokenPolicyArrayOutputWithContext(ctx context.Context) GetAclTokenPolicyArrayOutput {
	return o
}

func (o GetAclTokenPolicyArrayOutput) Index(i pulumi.IntInput) GetAclTokenPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenPolicy {
		return vs[0].([]GetAclTokenPolicy)[vs[1].(int)]
	}).(GetAclTokenPolicyOutput)
}

type GetAclTokenRole struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetAclTokenRoleInput is an input type that accepts GetAclTokenRoleArgs and GetAclTokenRoleOutput values.
// You can construct a concrete instance of `GetAclTokenRoleInput` via:
//
//	GetAclTokenRoleArgs{...}
type GetAclTokenRoleInput interface {
	pulumi.Input

	ToGetAclTokenRoleOutput() GetAclTokenRoleOutput
	ToGetAclTokenRoleOutputWithContext(context.Context) GetAclTokenRoleOutput
}

type GetAclTokenRoleArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAclTokenRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenRole)(nil)).Elem()
}

func (i GetAclTokenRoleArgs) ToGetAclTokenRoleOutput() GetAclTokenRoleOutput {
	return i.ToGetAclTokenRoleOutputWithContext(context.Background())
}

func (i GetAclTokenRoleArgs) ToGetAclTokenRoleOutputWithContext(ctx context.Context) GetAclTokenRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenRoleOutput)
}

// GetAclTokenRoleArrayInput is an input type that accepts GetAclTokenRoleArray and GetAclTokenRoleArrayOutput values.
// You can construct a concrete instance of `GetAclTokenRoleArrayInput` via:
//
//	GetAclTokenRoleArray{ GetAclTokenRoleArgs{...} }
type GetAclTokenRoleArrayInput interface {
	pulumi.Input

	ToGetAclTokenRoleArrayOutput() GetAclTokenRoleArrayOutput
	ToGetAclTokenRoleArrayOutputWithContext(context.Context) GetAclTokenRoleArrayOutput
}

type GetAclTokenRoleArray []GetAclTokenRoleInput

func (GetAclTokenRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenRole)(nil)).Elem()
}

func (i GetAclTokenRoleArray) ToGetAclTokenRoleArrayOutput() GetAclTokenRoleArrayOutput {
	return i.ToGetAclTokenRoleArrayOutputWithContext(context.Background())
}

func (i GetAclTokenRoleArray) ToGetAclTokenRoleArrayOutputWithContext(ctx context.Context) GetAclTokenRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenRoleArrayOutput)
}

type GetAclTokenRoleOutput struct{ *pulumi.OutputState }

func (GetAclTokenRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenRole)(nil)).Elem()
}

func (o GetAclTokenRoleOutput) ToGetAclTokenRoleOutput() GetAclTokenRoleOutput {
	return o
}

func (o GetAclTokenRoleOutput) ToGetAclTokenRoleOutputWithContext(ctx context.Context) GetAclTokenRoleOutput {
	return o
}

func (o GetAclTokenRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenRole) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclTokenRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenRole) string { return v.Name }).(pulumi.StringOutput)
}

type GetAclTokenRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenRole)(nil)).Elem()
}

func (o GetAclTokenRoleArrayOutput) ToGetAclTokenRoleArrayOutput() GetAclTokenRoleArrayOutput {
	return o
}

func (o GetAclTokenRoleArrayOutput) ToGetAclTokenRoleArrayOutputWithContext(ctx context.Context) GetAclTokenRoleArrayOutput {
	return o
}

func (o GetAclTokenRoleArrayOutput) Index(i pulumi.IntInput) GetAclTokenRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenRole {
		return vs[0].([]GetAclTokenRole)[vs[1].(int)]
	}).(GetAclTokenRoleOutput)
}

type GetAclTokenServiceIdentity struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// GetAclTokenServiceIdentityInput is an input type that accepts GetAclTokenServiceIdentityArgs and GetAclTokenServiceIdentityOutput values.
// You can construct a concrete instance of `GetAclTokenServiceIdentityInput` via:
//
//	GetAclTokenServiceIdentityArgs{...}
type GetAclTokenServiceIdentityInput interface {
	pulumi.Input

	ToGetAclTokenServiceIdentityOutput() GetAclTokenServiceIdentityOutput
	ToGetAclTokenServiceIdentityOutputWithContext(context.Context) GetAclTokenServiceIdentityOutput
}

type GetAclTokenServiceIdentityArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetAclTokenServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenServiceIdentity)(nil)).Elem()
}

func (i GetAclTokenServiceIdentityArgs) ToGetAclTokenServiceIdentityOutput() GetAclTokenServiceIdentityOutput {
	return i.ToGetAclTokenServiceIdentityOutputWithContext(context.Background())
}

func (i GetAclTokenServiceIdentityArgs) ToGetAclTokenServiceIdentityOutputWithContext(ctx context.Context) GetAclTokenServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenServiceIdentityOutput)
}

// GetAclTokenServiceIdentityArrayInput is an input type that accepts GetAclTokenServiceIdentityArray and GetAclTokenServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetAclTokenServiceIdentityArrayInput` via:
//
//	GetAclTokenServiceIdentityArray{ GetAclTokenServiceIdentityArgs{...} }
type GetAclTokenServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetAclTokenServiceIdentityArrayOutput() GetAclTokenServiceIdentityArrayOutput
	ToGetAclTokenServiceIdentityArrayOutputWithContext(context.Context) GetAclTokenServiceIdentityArrayOutput
}

type GetAclTokenServiceIdentityArray []GetAclTokenServiceIdentityInput

func (GetAclTokenServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenServiceIdentity)(nil)).Elem()
}

func (i GetAclTokenServiceIdentityArray) ToGetAclTokenServiceIdentityArrayOutput() GetAclTokenServiceIdentityArrayOutput {
	return i.ToGetAclTokenServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetAclTokenServiceIdentityArray) ToGetAclTokenServiceIdentityArrayOutputWithContext(ctx context.Context) GetAclTokenServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenServiceIdentityArrayOutput)
}

type GetAclTokenServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetAclTokenServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenServiceIdentity)(nil)).Elem()
}

func (o GetAclTokenServiceIdentityOutput) ToGetAclTokenServiceIdentityOutput() GetAclTokenServiceIdentityOutput {
	return o
}

func (o GetAclTokenServiceIdentityOutput) ToGetAclTokenServiceIdentityOutputWithContext(ctx context.Context) GetAclTokenServiceIdentityOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o GetAclTokenServiceIdentityOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclTokenServiceIdentity) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the service.
func (o GetAclTokenServiceIdentityOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenServiceIdentity) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetAclTokenServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenServiceIdentity)(nil)).Elem()
}

func (o GetAclTokenServiceIdentityArrayOutput) ToGetAclTokenServiceIdentityArrayOutput() GetAclTokenServiceIdentityArrayOutput {
	return o
}

func (o GetAclTokenServiceIdentityArrayOutput) ToGetAclTokenServiceIdentityArrayOutputWithContext(ctx context.Context) GetAclTokenServiceIdentityArrayOutput {
	return o
}

func (o GetAclTokenServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetAclTokenServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenServiceIdentity {
		return vs[0].([]GetAclTokenServiceIdentity)[vs[1].(int)]
	}).(GetAclTokenServiceIdentityOutput)
}

type GetAclTokenTemplatedPolicy struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters []string `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName string `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables []GetAclTokenTemplatedPolicyTemplateVariable `pulumi:"templateVariables"`
}

// GetAclTokenTemplatedPolicyInput is an input type that accepts GetAclTokenTemplatedPolicyArgs and GetAclTokenTemplatedPolicyOutput values.
// You can construct a concrete instance of `GetAclTokenTemplatedPolicyInput` via:
//
//	GetAclTokenTemplatedPolicyArgs{...}
type GetAclTokenTemplatedPolicyInput interface {
	pulumi.Input

	ToGetAclTokenTemplatedPolicyOutput() GetAclTokenTemplatedPolicyOutput
	ToGetAclTokenTemplatedPolicyOutputWithContext(context.Context) GetAclTokenTemplatedPolicyOutput
}

type GetAclTokenTemplatedPolicyArgs struct {
	// Specifies the datacenters the effective policy is valid within.
	Datacenters pulumi.StringArrayInput `pulumi:"datacenters"`
	// The name of the templated policies.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// The templated policy variables.
	TemplateVariables GetAclTokenTemplatedPolicyTemplateVariableArrayInput `pulumi:"templateVariables"`
}

func (GetAclTokenTemplatedPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenTemplatedPolicy)(nil)).Elem()
}

func (i GetAclTokenTemplatedPolicyArgs) ToGetAclTokenTemplatedPolicyOutput() GetAclTokenTemplatedPolicyOutput {
	return i.ToGetAclTokenTemplatedPolicyOutputWithContext(context.Background())
}

func (i GetAclTokenTemplatedPolicyArgs) ToGetAclTokenTemplatedPolicyOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenTemplatedPolicyOutput)
}

// GetAclTokenTemplatedPolicyArrayInput is an input type that accepts GetAclTokenTemplatedPolicyArray and GetAclTokenTemplatedPolicyArrayOutput values.
// You can construct a concrete instance of `GetAclTokenTemplatedPolicyArrayInput` via:
//
//	GetAclTokenTemplatedPolicyArray{ GetAclTokenTemplatedPolicyArgs{...} }
type GetAclTokenTemplatedPolicyArrayInput interface {
	pulumi.Input

	ToGetAclTokenTemplatedPolicyArrayOutput() GetAclTokenTemplatedPolicyArrayOutput
	ToGetAclTokenTemplatedPolicyArrayOutputWithContext(context.Context) GetAclTokenTemplatedPolicyArrayOutput
}

type GetAclTokenTemplatedPolicyArray []GetAclTokenTemplatedPolicyInput

func (GetAclTokenTemplatedPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenTemplatedPolicy)(nil)).Elem()
}

func (i GetAclTokenTemplatedPolicyArray) ToGetAclTokenTemplatedPolicyArrayOutput() GetAclTokenTemplatedPolicyArrayOutput {
	return i.ToGetAclTokenTemplatedPolicyArrayOutputWithContext(context.Background())
}

func (i GetAclTokenTemplatedPolicyArray) ToGetAclTokenTemplatedPolicyArrayOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenTemplatedPolicyArrayOutput)
}

type GetAclTokenTemplatedPolicyOutput struct{ *pulumi.OutputState }

func (GetAclTokenTemplatedPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenTemplatedPolicy)(nil)).Elem()
}

func (o GetAclTokenTemplatedPolicyOutput) ToGetAclTokenTemplatedPolicyOutput() GetAclTokenTemplatedPolicyOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyOutput) ToGetAclTokenTemplatedPolicyOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyOutput {
	return o
}

// Specifies the datacenters the effective policy is valid within.
func (o GetAclTokenTemplatedPolicyOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclTokenTemplatedPolicy) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The name of the templated policies.
func (o GetAclTokenTemplatedPolicyOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenTemplatedPolicy) string { return v.TemplateName }).(pulumi.StringOutput)
}

// The templated policy variables.
func (o GetAclTokenTemplatedPolicyOutput) TemplateVariables() GetAclTokenTemplatedPolicyTemplateVariableArrayOutput {
	return o.ApplyT(func(v GetAclTokenTemplatedPolicy) []GetAclTokenTemplatedPolicyTemplateVariable {
		return v.TemplateVariables
	}).(GetAclTokenTemplatedPolicyTemplateVariableArrayOutput)
}

type GetAclTokenTemplatedPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenTemplatedPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenTemplatedPolicy)(nil)).Elem()
}

func (o GetAclTokenTemplatedPolicyArrayOutput) ToGetAclTokenTemplatedPolicyArrayOutput() GetAclTokenTemplatedPolicyArrayOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyArrayOutput) ToGetAclTokenTemplatedPolicyArrayOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyArrayOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyArrayOutput) Index(i pulumi.IntInput) GetAclTokenTemplatedPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenTemplatedPolicy {
		return vs[0].([]GetAclTokenTemplatedPolicy)[vs[1].(int)]
	}).(GetAclTokenTemplatedPolicyOutput)
}

type GetAclTokenTemplatedPolicyTemplateVariable struct {
	// The name of node, workload identity or service.
	Name string `pulumi:"name"`
}

// GetAclTokenTemplatedPolicyTemplateVariableInput is an input type that accepts GetAclTokenTemplatedPolicyTemplateVariableArgs and GetAclTokenTemplatedPolicyTemplateVariableOutput values.
// You can construct a concrete instance of `GetAclTokenTemplatedPolicyTemplateVariableInput` via:
//
//	GetAclTokenTemplatedPolicyTemplateVariableArgs{...}
type GetAclTokenTemplatedPolicyTemplateVariableInput interface {
	pulumi.Input

	ToGetAclTokenTemplatedPolicyTemplateVariableOutput() GetAclTokenTemplatedPolicyTemplateVariableOutput
	ToGetAclTokenTemplatedPolicyTemplateVariableOutputWithContext(context.Context) GetAclTokenTemplatedPolicyTemplateVariableOutput
}

type GetAclTokenTemplatedPolicyTemplateVariableArgs struct {
	// The name of node, workload identity or service.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAclTokenTemplatedPolicyTemplateVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (i GetAclTokenTemplatedPolicyTemplateVariableArgs) ToGetAclTokenTemplatedPolicyTemplateVariableOutput() GetAclTokenTemplatedPolicyTemplateVariableOutput {
	return i.ToGetAclTokenTemplatedPolicyTemplateVariableOutputWithContext(context.Background())
}

func (i GetAclTokenTemplatedPolicyTemplateVariableArgs) ToGetAclTokenTemplatedPolicyTemplateVariableOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyTemplateVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenTemplatedPolicyTemplateVariableOutput)
}

// GetAclTokenTemplatedPolicyTemplateVariableArrayInput is an input type that accepts GetAclTokenTemplatedPolicyTemplateVariableArray and GetAclTokenTemplatedPolicyTemplateVariableArrayOutput values.
// You can construct a concrete instance of `GetAclTokenTemplatedPolicyTemplateVariableArrayInput` via:
//
//	GetAclTokenTemplatedPolicyTemplateVariableArray{ GetAclTokenTemplatedPolicyTemplateVariableArgs{...} }
type GetAclTokenTemplatedPolicyTemplateVariableArrayInput interface {
	pulumi.Input

	ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutput() GetAclTokenTemplatedPolicyTemplateVariableArrayOutput
	ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutputWithContext(context.Context) GetAclTokenTemplatedPolicyTemplateVariableArrayOutput
}

type GetAclTokenTemplatedPolicyTemplateVariableArray []GetAclTokenTemplatedPolicyTemplateVariableInput

func (GetAclTokenTemplatedPolicyTemplateVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (i GetAclTokenTemplatedPolicyTemplateVariableArray) ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutput() GetAclTokenTemplatedPolicyTemplateVariableArrayOutput {
	return i.ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutputWithContext(context.Background())
}

func (i GetAclTokenTemplatedPolicyTemplateVariableArray) ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyTemplateVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclTokenTemplatedPolicyTemplateVariableArrayOutput)
}

type GetAclTokenTemplatedPolicyTemplateVariableOutput struct{ *pulumi.OutputState }

func (GetAclTokenTemplatedPolicyTemplateVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (o GetAclTokenTemplatedPolicyTemplateVariableOutput) ToGetAclTokenTemplatedPolicyTemplateVariableOutput() GetAclTokenTemplatedPolicyTemplateVariableOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyTemplateVariableOutput) ToGetAclTokenTemplatedPolicyTemplateVariableOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyTemplateVariableOutput {
	return o
}

// The name of node, workload identity or service.
func (o GetAclTokenTemplatedPolicyTemplateVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenTemplatedPolicyTemplateVariable) string { return v.Name }).(pulumi.StringOutput)
}

type GetAclTokenTemplatedPolicyTemplateVariableArrayOutput struct{ *pulumi.OutputState }

func (GetAclTokenTemplatedPolicyTemplateVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclTokenTemplatedPolicyTemplateVariable)(nil)).Elem()
}

func (o GetAclTokenTemplatedPolicyTemplateVariableArrayOutput) ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutput() GetAclTokenTemplatedPolicyTemplateVariableArrayOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyTemplateVariableArrayOutput) ToGetAclTokenTemplatedPolicyTemplateVariableArrayOutputWithContext(ctx context.Context) GetAclTokenTemplatedPolicyTemplateVariableArrayOutput {
	return o
}

func (o GetAclTokenTemplatedPolicyTemplateVariableArrayOutput) Index(i pulumi.IntInput) GetAclTokenTemplatedPolicyTemplateVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclTokenTemplatedPolicyTemplateVariable {
		return vs[0].([]GetAclTokenTemplatedPolicyTemplateVariable)[vs[1].(int)]
	}).(GetAclTokenTemplatedPolicyTemplateVariableOutput)
}

type GetAutopilotHealthServer struct {
	// The address of the server
	Address string `pulumi:"address"`
	// Whether the server is healthy according to the current Autopilot
	// configuration
	Healthy bool `pulumi:"healthy"`
	// The Raft ID of the server
	Id string `pulumi:"id"`
	// The time elapsed since the server's last contact with
	// the leader
	LastContact string `pulumi:"lastContact"`
	// The index of the server's last committed Raft log entry
	LastIndex int `pulumi:"lastIndex"`
	// The server's last known Raft leader term
	LastTerm int `pulumi:"lastTerm"`
	// Whether the server is currently leader
	Leader bool `pulumi:"leader"`
	// The node name of the server
	Name string `pulumi:"name"`
	// The status of the SerfHealth check of the server
	SerfStatus string `pulumi:"serfStatus"`
	// The time this server has been in its current ``Healthy``
	// state
	StableSince string `pulumi:"stableSince"`
	// The Consul version of the server
	Version string `pulumi:"version"`
	// Whether the server is a voting member of the Raft cluster
	Voter bool `pulumi:"voter"`
}

// GetAutopilotHealthServerInput is an input type that accepts GetAutopilotHealthServerArgs and GetAutopilotHealthServerOutput values.
// You can construct a concrete instance of `GetAutopilotHealthServerInput` via:
//
//	GetAutopilotHealthServerArgs{...}
type GetAutopilotHealthServerInput interface {
	pulumi.Input

	ToGetAutopilotHealthServerOutput() GetAutopilotHealthServerOutput
	ToGetAutopilotHealthServerOutputWithContext(context.Context) GetAutopilotHealthServerOutput
}

type GetAutopilotHealthServerArgs struct {
	// The address of the server
	Address pulumi.StringInput `pulumi:"address"`
	// Whether the server is healthy according to the current Autopilot
	// configuration
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// The Raft ID of the server
	Id pulumi.StringInput `pulumi:"id"`
	// The time elapsed since the server's last contact with
	// the leader
	LastContact pulumi.StringInput `pulumi:"lastContact"`
	// The index of the server's last committed Raft log entry
	LastIndex pulumi.IntInput `pulumi:"lastIndex"`
	// The server's last known Raft leader term
	LastTerm pulumi.IntInput `pulumi:"lastTerm"`
	// Whether the server is currently leader
	Leader pulumi.BoolInput `pulumi:"leader"`
	// The node name of the server
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the SerfHealth check of the server
	SerfStatus pulumi.StringInput `pulumi:"serfStatus"`
	// The time this server has been in its current ``Healthy``
	// state
	StableSince pulumi.StringInput `pulumi:"stableSince"`
	// The Consul version of the server
	Version pulumi.StringInput `pulumi:"version"`
	// Whether the server is a voting member of the Raft cluster
	Voter pulumi.BoolInput `pulumi:"voter"`
}

func (GetAutopilotHealthServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutopilotHealthServer)(nil)).Elem()
}

func (i GetAutopilotHealthServerArgs) ToGetAutopilotHealthServerOutput() GetAutopilotHealthServerOutput {
	return i.ToGetAutopilotHealthServerOutputWithContext(context.Background())
}

func (i GetAutopilotHealthServerArgs) ToGetAutopilotHealthServerOutputWithContext(ctx context.Context) GetAutopilotHealthServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutopilotHealthServerOutput)
}

// GetAutopilotHealthServerArrayInput is an input type that accepts GetAutopilotHealthServerArray and GetAutopilotHealthServerArrayOutput values.
// You can construct a concrete instance of `GetAutopilotHealthServerArrayInput` via:
//
//	GetAutopilotHealthServerArray{ GetAutopilotHealthServerArgs{...} }
type GetAutopilotHealthServerArrayInput interface {
	pulumi.Input

	ToGetAutopilotHealthServerArrayOutput() GetAutopilotHealthServerArrayOutput
	ToGetAutopilotHealthServerArrayOutputWithContext(context.Context) GetAutopilotHealthServerArrayOutput
}

type GetAutopilotHealthServerArray []GetAutopilotHealthServerInput

func (GetAutopilotHealthServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutopilotHealthServer)(nil)).Elem()
}

func (i GetAutopilotHealthServerArray) ToGetAutopilotHealthServerArrayOutput() GetAutopilotHealthServerArrayOutput {
	return i.ToGetAutopilotHealthServerArrayOutputWithContext(context.Background())
}

func (i GetAutopilotHealthServerArray) ToGetAutopilotHealthServerArrayOutputWithContext(ctx context.Context) GetAutopilotHealthServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutopilotHealthServerArrayOutput)
}

type GetAutopilotHealthServerOutput struct{ *pulumi.OutputState }

func (GetAutopilotHealthServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutopilotHealthServer)(nil)).Elem()
}

func (o GetAutopilotHealthServerOutput) ToGetAutopilotHealthServerOutput() GetAutopilotHealthServerOutput {
	return o
}

func (o GetAutopilotHealthServerOutput) ToGetAutopilotHealthServerOutputWithContext(ctx context.Context) GetAutopilotHealthServerOutput {
	return o
}

// The address of the server
func (o GetAutopilotHealthServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.Address }).(pulumi.StringOutput)
}

// Whether the server is healthy according to the current Autopilot
// configuration
func (o GetAutopilotHealthServerOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// The Raft ID of the server
func (o GetAutopilotHealthServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.Id }).(pulumi.StringOutput)
}

// The time elapsed since the server's last contact with
// the leader
func (o GetAutopilotHealthServerOutput) LastContact() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.LastContact }).(pulumi.StringOutput)
}

// The index of the server's last committed Raft log entry
func (o GetAutopilotHealthServerOutput) LastIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) int { return v.LastIndex }).(pulumi.IntOutput)
}

// The server's last known Raft leader term
func (o GetAutopilotHealthServerOutput) LastTerm() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) int { return v.LastTerm }).(pulumi.IntOutput)
}

// Whether the server is currently leader
func (o GetAutopilotHealthServerOutput) Leader() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) bool { return v.Leader }).(pulumi.BoolOutput)
}

// The node name of the server
func (o GetAutopilotHealthServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the SerfHealth check of the server
func (o GetAutopilotHealthServerOutput) SerfStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.SerfStatus }).(pulumi.StringOutput)
}

// The time this server has been in its current “Healthy“
// state
func (o GetAutopilotHealthServerOutput) StableSince() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.StableSince }).(pulumi.StringOutput)
}

// The Consul version of the server
func (o GetAutopilotHealthServerOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) string { return v.Version }).(pulumi.StringOutput)
}

// Whether the server is a voting member of the Raft cluster
func (o GetAutopilotHealthServerOutput) Voter() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutopilotHealthServer) bool { return v.Voter }).(pulumi.BoolOutput)
}

type GetAutopilotHealthServerArrayOutput struct{ *pulumi.OutputState }

func (GetAutopilotHealthServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutopilotHealthServer)(nil)).Elem()
}

func (o GetAutopilotHealthServerArrayOutput) ToGetAutopilotHealthServerArrayOutput() GetAutopilotHealthServerArrayOutput {
	return o
}

func (o GetAutopilotHealthServerArrayOutput) ToGetAutopilotHealthServerArrayOutputWithContext(ctx context.Context) GetAutopilotHealthServerArrayOutput {
	return o
}

func (o GetAutopilotHealthServerArrayOutput) Index(i pulumi.IntInput) GetAutopilotHealthServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutopilotHealthServer {
		return vs[0].([]GetAutopilotHealthServer)[vs[1].(int)]
	}).(GetAutopilotHealthServerOutput)
}

type GetCatalogNodesNode struct {
	Address string `pulumi:"address"`
	// The Node ID of the Consul agent.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
	//   data tag information, if any.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
	//   of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
	//   IP address the node is advertising to the Consul cluster.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	Id              string            `pulumi:"id"`
	Meta            map[string]string `pulumi:"meta"`
	Name            string            `pulumi:"name"`
	TaggedAddresses map[string]string `pulumi:"taggedAddresses"`
}

// GetCatalogNodesNodeInput is an input type that accepts GetCatalogNodesNodeArgs and GetCatalogNodesNodeOutput values.
// You can construct a concrete instance of `GetCatalogNodesNodeInput` via:
//
//	GetCatalogNodesNodeArgs{...}
type GetCatalogNodesNodeInput interface {
	pulumi.Input

	ToGetCatalogNodesNodeOutput() GetCatalogNodesNodeOutput
	ToGetCatalogNodesNodeOutputWithContext(context.Context) GetCatalogNodesNodeOutput
}

type GetCatalogNodesNodeArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	// The Node ID of the Consul agent.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
	//   data tag information, if any.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
	//   of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
	//   IP address the node is advertising to the Consul cluster.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	Id              pulumi.StringInput    `pulumi:"id"`
	Meta            pulumi.StringMapInput `pulumi:"meta"`
	Name            pulumi.StringInput    `pulumi:"name"`
	TaggedAddresses pulumi.StringMapInput `pulumi:"taggedAddresses"`
}

func (GetCatalogNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesNode)(nil)).Elem()
}

func (i GetCatalogNodesNodeArgs) ToGetCatalogNodesNodeOutput() GetCatalogNodesNodeOutput {
	return i.ToGetCatalogNodesNodeOutputWithContext(context.Background())
}

func (i GetCatalogNodesNodeArgs) ToGetCatalogNodesNodeOutputWithContext(ctx context.Context) GetCatalogNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogNodesNodeOutput)
}

// GetCatalogNodesNodeArrayInput is an input type that accepts GetCatalogNodesNodeArray and GetCatalogNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetCatalogNodesNodeArrayInput` via:
//
//	GetCatalogNodesNodeArray{ GetCatalogNodesNodeArgs{...} }
type GetCatalogNodesNodeArrayInput interface {
	pulumi.Input

	ToGetCatalogNodesNodeArrayOutput() GetCatalogNodesNodeArrayOutput
	ToGetCatalogNodesNodeArrayOutputWithContext(context.Context) GetCatalogNodesNodeArrayOutput
}

type GetCatalogNodesNodeArray []GetCatalogNodesNodeInput

func (GetCatalogNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogNodesNode)(nil)).Elem()
}

func (i GetCatalogNodesNodeArray) ToGetCatalogNodesNodeArrayOutput() GetCatalogNodesNodeArrayOutput {
	return i.ToGetCatalogNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetCatalogNodesNodeArray) ToGetCatalogNodesNodeArrayOutputWithContext(ctx context.Context) GetCatalogNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogNodesNodeArrayOutput)
}

type GetCatalogNodesNodeOutput struct{ *pulumi.OutputState }

func (GetCatalogNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesNode)(nil)).Elem()
}

func (o GetCatalogNodesNodeOutput) ToGetCatalogNodesNodeOutput() GetCatalogNodesNodeOutput {
	return o
}

func (o GetCatalogNodesNodeOutput) ToGetCatalogNodesNodeOutputWithContext(ctx context.Context) GetCatalogNodesNodeOutput {
	return o
}

func (o GetCatalogNodesNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogNodesNode) string { return v.Address }).(pulumi.StringOutput)
}

// The Node ID of the Consul agent.
//   - [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
//     data tag information, if any.
//   - [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
//     of the Consul node.
//   - [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
//     IP address the node is advertising to the Consul cluster.
//   - [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
//     List of explicit LAN and WAN IP addresses for the agent.
func (o GetCatalogNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCatalogNodesNodeOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogNodesNode) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o GetCatalogNodesNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogNodesNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCatalogNodesNodeOutput) TaggedAddresses() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogNodesNode) map[string]string { return v.TaggedAddresses }).(pulumi.StringMapOutput)
}

type GetCatalogNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogNodesNode)(nil)).Elem()
}

func (o GetCatalogNodesNodeArrayOutput) ToGetCatalogNodesNodeArrayOutput() GetCatalogNodesNodeArrayOutput {
	return o
}

func (o GetCatalogNodesNodeArrayOutput) ToGetCatalogNodesNodeArrayOutputWithContext(ctx context.Context) GetCatalogNodesNodeArrayOutput {
	return o
}

func (o GetCatalogNodesNodeArrayOutput) Index(i pulumi.IntInput) GetCatalogNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogNodesNode {
		return vs[0].([]GetCatalogNodesNode)[vs[1].(int)]
	}).(GetCatalogNodesNodeOutput)
}

type GetCatalogNodesQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to then the datacenter in the provider setup.
	Datacenter *string           `pulumi:"datacenter"`
	Near       *string           `pulumi:"near"`
	NodeMeta   map[string]string `pulumi:"nodeMeta"`
	Partition  *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetCatalogNodesQueryOptionInput is an input type that accepts GetCatalogNodesQueryOptionArgs and GetCatalogNodesQueryOptionOutput values.
// You can construct a concrete instance of `GetCatalogNodesQueryOptionInput` via:
//
//	GetCatalogNodesQueryOptionArgs{...}
type GetCatalogNodesQueryOptionInput interface {
	pulumi.Input

	ToGetCatalogNodesQueryOptionOutput() GetCatalogNodesQueryOptionOutput
	ToGetCatalogNodesQueryOptionOutputWithContext(context.Context) GetCatalogNodesQueryOptionOutput
}

type GetCatalogNodesQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to then the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	Near       pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta   pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition  pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetCatalogNodesQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesQueryOption)(nil)).Elem()
}

func (i GetCatalogNodesQueryOptionArgs) ToGetCatalogNodesQueryOptionOutput() GetCatalogNodesQueryOptionOutput {
	return i.ToGetCatalogNodesQueryOptionOutputWithContext(context.Background())
}

func (i GetCatalogNodesQueryOptionArgs) ToGetCatalogNodesQueryOptionOutputWithContext(ctx context.Context) GetCatalogNodesQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogNodesQueryOptionOutput)
}

// GetCatalogNodesQueryOptionArrayInput is an input type that accepts GetCatalogNodesQueryOptionArray and GetCatalogNodesQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetCatalogNodesQueryOptionArrayInput` via:
//
//	GetCatalogNodesQueryOptionArray{ GetCatalogNodesQueryOptionArgs{...} }
type GetCatalogNodesQueryOptionArrayInput interface {
	pulumi.Input

	ToGetCatalogNodesQueryOptionArrayOutput() GetCatalogNodesQueryOptionArrayOutput
	ToGetCatalogNodesQueryOptionArrayOutputWithContext(context.Context) GetCatalogNodesQueryOptionArrayOutput
}

type GetCatalogNodesQueryOptionArray []GetCatalogNodesQueryOptionInput

func (GetCatalogNodesQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogNodesQueryOption)(nil)).Elem()
}

func (i GetCatalogNodesQueryOptionArray) ToGetCatalogNodesQueryOptionArrayOutput() GetCatalogNodesQueryOptionArrayOutput {
	return i.ToGetCatalogNodesQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetCatalogNodesQueryOptionArray) ToGetCatalogNodesQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogNodesQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogNodesQueryOptionArrayOutput)
}

type GetCatalogNodesQueryOptionOutput struct{ *pulumi.OutputState }

func (GetCatalogNodesQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesQueryOption)(nil)).Elem()
}

func (o GetCatalogNodesQueryOptionOutput) ToGetCatalogNodesQueryOptionOutput() GetCatalogNodesQueryOptionOutput {
	return o
}

func (o GetCatalogNodesQueryOptionOutput) ToGetCatalogNodesQueryOptionOutputWithContext(ctx context.Context) GetCatalogNodesQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetCatalogNodesQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to then the datacenter in the provider setup.
func (o GetCatalogNodesQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

func (o GetCatalogNodesQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetCatalogNodesQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetCatalogNodesQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetCatalogNodesQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetCatalogNodesQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetCatalogNodesQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetCatalogNodesQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogNodesQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetCatalogNodesQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogNodesQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogNodesQueryOption)(nil)).Elem()
}

func (o GetCatalogNodesQueryOptionArrayOutput) ToGetCatalogNodesQueryOptionArrayOutput() GetCatalogNodesQueryOptionArrayOutput {
	return o
}

func (o GetCatalogNodesQueryOptionArrayOutput) ToGetCatalogNodesQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogNodesQueryOptionArrayOutput {
	return o
}

func (o GetCatalogNodesQueryOptionArrayOutput) Index(i pulumi.IntInput) GetCatalogNodesQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogNodesQueryOption {
		return vs[0].([]GetCatalogNodesQueryOption)[vs[1].(int)]
	}).(GetCatalogNodesQueryOptionOutput)
}

type GetCatalogServiceQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter *string `pulumi:"datacenter"`
	// The namespace to lookup the service.
	Namespace *string           `pulumi:"namespace"`
	Near      *string           `pulumi:"near"`
	NodeMeta  map[string]string `pulumi:"nodeMeta"`
	Partition *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetCatalogServiceQueryOptionInput is an input type that accepts GetCatalogServiceQueryOptionArgs and GetCatalogServiceQueryOptionOutput values.
// You can construct a concrete instance of `GetCatalogServiceQueryOptionInput` via:
//
//	GetCatalogServiceQueryOptionArgs{...}
type GetCatalogServiceQueryOptionInput interface {
	pulumi.Input

	ToGetCatalogServiceQueryOptionOutput() GetCatalogServiceQueryOptionOutput
	ToGetCatalogServiceQueryOptionOutputWithContext(context.Context) GetCatalogServiceQueryOptionOutput
}

type GetCatalogServiceQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// The namespace to lookup the service.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Near      pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta  pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetCatalogServiceQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceQueryOption)(nil)).Elem()
}

func (i GetCatalogServiceQueryOptionArgs) ToGetCatalogServiceQueryOptionOutput() GetCatalogServiceQueryOptionOutput {
	return i.ToGetCatalogServiceQueryOptionOutputWithContext(context.Background())
}

func (i GetCatalogServiceQueryOptionArgs) ToGetCatalogServiceQueryOptionOutputWithContext(ctx context.Context) GetCatalogServiceQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServiceQueryOptionOutput)
}

// GetCatalogServiceQueryOptionArrayInput is an input type that accepts GetCatalogServiceQueryOptionArray and GetCatalogServiceQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetCatalogServiceQueryOptionArrayInput` via:
//
//	GetCatalogServiceQueryOptionArray{ GetCatalogServiceQueryOptionArgs{...} }
type GetCatalogServiceQueryOptionArrayInput interface {
	pulumi.Input

	ToGetCatalogServiceQueryOptionArrayOutput() GetCatalogServiceQueryOptionArrayOutput
	ToGetCatalogServiceQueryOptionArrayOutputWithContext(context.Context) GetCatalogServiceQueryOptionArrayOutput
}

type GetCatalogServiceQueryOptionArray []GetCatalogServiceQueryOptionInput

func (GetCatalogServiceQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServiceQueryOption)(nil)).Elem()
}

func (i GetCatalogServiceQueryOptionArray) ToGetCatalogServiceQueryOptionArrayOutput() GetCatalogServiceQueryOptionArrayOutput {
	return i.ToGetCatalogServiceQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetCatalogServiceQueryOptionArray) ToGetCatalogServiceQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogServiceQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServiceQueryOptionArrayOutput)
}

type GetCatalogServiceQueryOptionOutput struct{ *pulumi.OutputState }

func (GetCatalogServiceQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceQueryOption)(nil)).Elem()
}

func (o GetCatalogServiceQueryOptionOutput) ToGetCatalogServiceQueryOptionOutput() GetCatalogServiceQueryOptionOutput {
	return o
}

func (o GetCatalogServiceQueryOptionOutput) ToGetCatalogServiceQueryOptionOutputWithContext(ctx context.Context) GetCatalogServiceQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetCatalogServiceQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to.
func (o GetCatalogServiceQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// The namespace to lookup the service.
func (o GetCatalogServiceQueryOptionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetCatalogServiceQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetCatalogServiceQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetCatalogServiceQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetCatalogServiceQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetCatalogServiceQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetCatalogServiceQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetCatalogServiceQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetCatalogServiceQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogServiceQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServiceQueryOption)(nil)).Elem()
}

func (o GetCatalogServiceQueryOptionArrayOutput) ToGetCatalogServiceQueryOptionArrayOutput() GetCatalogServiceQueryOptionArrayOutput {
	return o
}

func (o GetCatalogServiceQueryOptionArrayOutput) ToGetCatalogServiceQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogServiceQueryOptionArrayOutput {
	return o
}

func (o GetCatalogServiceQueryOptionArrayOutput) Index(i pulumi.IntInput) GetCatalogServiceQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogServiceQueryOption {
		return vs[0].([]GetCatalogServiceQueryOption)[vs[1].(int)]
	}).(GetCatalogServiceQueryOptionOutput)
}

type GetCatalogServiceService struct {
	Address           string            `pulumi:"address"`
	CreateIndex       string            `pulumi:"createIndex"`
	EnableTagOverride string            `pulumi:"enableTagOverride"`
	Id                string            `pulumi:"id"`
	Meta              map[string]string `pulumi:"meta"`
	ModifyIndex       string            `pulumi:"modifyIndex"`
	// The service name to select.
	Name        string `pulumi:"name"`
	NodeAddress string `pulumi:"nodeAddress"`
	// The Node ID of the Consul agent advertising the service.
	// * [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
	//   meta data tag information, if any.
	// * [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
	//   name of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
	//   The IP address of the service.  If the `ServiceAddress` in the Consul catalog
	//   is empty, this value is automatically populated with the `nodeAddress` (the
	//   `Address` in the Consul Catalog).
	// * [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
	//   Whether service tags can be overridden on this service.
	// * [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
	//   unique service instance identifier.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
	//   name of the service.
	// * [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
	//   Port number of the service.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	// * [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
	//   List of tags for the service.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
	//   data tag information, if any.
	NodeId          string            `pulumi:"nodeId"`
	NodeMeta        map[string]string `pulumi:"nodeMeta"`
	NodeName        string            `pulumi:"nodeName"`
	Port            string            `pulumi:"port"`
	TaggedAddresses map[string]string `pulumi:"taggedAddresses"`
	Tags            []string          `pulumi:"tags"`
}

// GetCatalogServiceServiceInput is an input type that accepts GetCatalogServiceServiceArgs and GetCatalogServiceServiceOutput values.
// You can construct a concrete instance of `GetCatalogServiceServiceInput` via:
//
//	GetCatalogServiceServiceArgs{...}
type GetCatalogServiceServiceInput interface {
	pulumi.Input

	ToGetCatalogServiceServiceOutput() GetCatalogServiceServiceOutput
	ToGetCatalogServiceServiceOutputWithContext(context.Context) GetCatalogServiceServiceOutput
}

type GetCatalogServiceServiceArgs struct {
	Address           pulumi.StringInput    `pulumi:"address"`
	CreateIndex       pulumi.StringInput    `pulumi:"createIndex"`
	EnableTagOverride pulumi.StringInput    `pulumi:"enableTagOverride"`
	Id                pulumi.StringInput    `pulumi:"id"`
	Meta              pulumi.StringMapInput `pulumi:"meta"`
	ModifyIndex       pulumi.StringInput    `pulumi:"modifyIndex"`
	// The service name to select.
	Name        pulumi.StringInput `pulumi:"name"`
	NodeAddress pulumi.StringInput `pulumi:"nodeAddress"`
	// The Node ID of the Consul agent advertising the service.
	// * [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
	//   meta data tag information, if any.
	// * [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
	//   name of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
	//   The IP address of the service.  If the `ServiceAddress` in the Consul catalog
	//   is empty, this value is automatically populated with the `nodeAddress` (the
	//   `Address` in the Consul Catalog).
	// * [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
	//   Whether service tags can be overridden on this service.
	// * [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
	//   unique service instance identifier.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
	//   name of the service.
	// * [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
	//   Port number of the service.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	// * [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
	//   List of tags for the service.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
	//   data tag information, if any.
	NodeId          pulumi.StringInput      `pulumi:"nodeId"`
	NodeMeta        pulumi.StringMapInput   `pulumi:"nodeMeta"`
	NodeName        pulumi.StringInput      `pulumi:"nodeName"`
	Port            pulumi.StringInput      `pulumi:"port"`
	TaggedAddresses pulumi.StringMapInput   `pulumi:"taggedAddresses"`
	Tags            pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetCatalogServiceServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceService)(nil)).Elem()
}

func (i GetCatalogServiceServiceArgs) ToGetCatalogServiceServiceOutput() GetCatalogServiceServiceOutput {
	return i.ToGetCatalogServiceServiceOutputWithContext(context.Background())
}

func (i GetCatalogServiceServiceArgs) ToGetCatalogServiceServiceOutputWithContext(ctx context.Context) GetCatalogServiceServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServiceServiceOutput)
}

// GetCatalogServiceServiceArrayInput is an input type that accepts GetCatalogServiceServiceArray and GetCatalogServiceServiceArrayOutput values.
// You can construct a concrete instance of `GetCatalogServiceServiceArrayInput` via:
//
//	GetCatalogServiceServiceArray{ GetCatalogServiceServiceArgs{...} }
type GetCatalogServiceServiceArrayInput interface {
	pulumi.Input

	ToGetCatalogServiceServiceArrayOutput() GetCatalogServiceServiceArrayOutput
	ToGetCatalogServiceServiceArrayOutputWithContext(context.Context) GetCatalogServiceServiceArrayOutput
}

type GetCatalogServiceServiceArray []GetCatalogServiceServiceInput

func (GetCatalogServiceServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServiceService)(nil)).Elem()
}

func (i GetCatalogServiceServiceArray) ToGetCatalogServiceServiceArrayOutput() GetCatalogServiceServiceArrayOutput {
	return i.ToGetCatalogServiceServiceArrayOutputWithContext(context.Background())
}

func (i GetCatalogServiceServiceArray) ToGetCatalogServiceServiceArrayOutputWithContext(ctx context.Context) GetCatalogServiceServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServiceServiceArrayOutput)
}

type GetCatalogServiceServiceOutput struct{ *pulumi.OutputState }

func (GetCatalogServiceServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceService)(nil)).Elem()
}

func (o GetCatalogServiceServiceOutput) ToGetCatalogServiceServiceOutput() GetCatalogServiceServiceOutput {
	return o
}

func (o GetCatalogServiceServiceOutput) ToGetCatalogServiceServiceOutputWithContext(ctx context.Context) GetCatalogServiceServiceOutput {
	return o
}

func (o GetCatalogServiceServiceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) CreateIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.CreateIndex }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) EnableTagOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.EnableTagOverride }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogServiceService) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o GetCatalogServiceServiceOutput) ModifyIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.ModifyIndex }).(pulumi.StringOutput)
}

// The service name to select.
func (o GetCatalogServiceServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) NodeAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.NodeAddress }).(pulumi.StringOutput)
}

// The Node ID of the Consul agent advertising the service.
//   - [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
//     meta data tag information, if any.
//   - [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
//     name of the Consul node.
//   - [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
//     The IP address of the service.  If the `ServiceAddress` in the Consul catalog
//     is empty, this value is automatically populated with the `nodeAddress` (the
//     `Address` in the Consul Catalog).
//   - [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
//     Whether service tags can be overridden on this service.
//   - [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
//     unique service instance identifier.
//   - [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
//     name of the service.
//   - [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
//     Port number of the service.
//   - [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
//     List of explicit LAN and WAN IP addresses for the agent.
//   - [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
//     List of tags for the service.
//   - [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
//     data tag information, if any.
func (o GetCatalogServiceServiceOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogServiceService) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetCatalogServiceServiceOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.NodeName }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceService) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetCatalogServiceServiceOutput) TaggedAddresses() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogServiceService) map[string]string { return v.TaggedAddresses }).(pulumi.StringMapOutput)
}

func (o GetCatalogServiceServiceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCatalogServiceService) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetCatalogServiceServiceArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogServiceServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServiceService)(nil)).Elem()
}

func (o GetCatalogServiceServiceArrayOutput) ToGetCatalogServiceServiceArrayOutput() GetCatalogServiceServiceArrayOutput {
	return o
}

func (o GetCatalogServiceServiceArrayOutput) ToGetCatalogServiceServiceArrayOutputWithContext(ctx context.Context) GetCatalogServiceServiceArrayOutput {
	return o
}

func (o GetCatalogServiceServiceArrayOutput) Index(i pulumi.IntInput) GetCatalogServiceServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogServiceService {
		return vs[0].([]GetCatalogServiceService)[vs[1].(int)]
	}).(GetCatalogServiceServiceOutput)
}

type GetCatalogServicesQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter *string `pulumi:"datacenter"`
	// The namespace to lookup the services.
	Namespace *string           `pulumi:"namespace"`
	Near      *string           `pulumi:"near"`
	NodeMeta  map[string]string `pulumi:"nodeMeta"`
	Partition *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetCatalogServicesQueryOptionInput is an input type that accepts GetCatalogServicesQueryOptionArgs and GetCatalogServicesQueryOptionOutput values.
// You can construct a concrete instance of `GetCatalogServicesQueryOptionInput` via:
//
//	GetCatalogServicesQueryOptionArgs{...}
type GetCatalogServicesQueryOptionInput interface {
	pulumi.Input

	ToGetCatalogServicesQueryOptionOutput() GetCatalogServicesQueryOptionOutput
	ToGetCatalogServicesQueryOptionOutputWithContext(context.Context) GetCatalogServicesQueryOptionOutput
}

type GetCatalogServicesQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// The namespace to lookup the services.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Near      pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta  pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetCatalogServicesQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServicesQueryOption)(nil)).Elem()
}

func (i GetCatalogServicesQueryOptionArgs) ToGetCatalogServicesQueryOptionOutput() GetCatalogServicesQueryOptionOutput {
	return i.ToGetCatalogServicesQueryOptionOutputWithContext(context.Background())
}

func (i GetCatalogServicesQueryOptionArgs) ToGetCatalogServicesQueryOptionOutputWithContext(ctx context.Context) GetCatalogServicesQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServicesQueryOptionOutput)
}

// GetCatalogServicesQueryOptionArrayInput is an input type that accepts GetCatalogServicesQueryOptionArray and GetCatalogServicesQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetCatalogServicesQueryOptionArrayInput` via:
//
//	GetCatalogServicesQueryOptionArray{ GetCatalogServicesQueryOptionArgs{...} }
type GetCatalogServicesQueryOptionArrayInput interface {
	pulumi.Input

	ToGetCatalogServicesQueryOptionArrayOutput() GetCatalogServicesQueryOptionArrayOutput
	ToGetCatalogServicesQueryOptionArrayOutputWithContext(context.Context) GetCatalogServicesQueryOptionArrayOutput
}

type GetCatalogServicesQueryOptionArray []GetCatalogServicesQueryOptionInput

func (GetCatalogServicesQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServicesQueryOption)(nil)).Elem()
}

func (i GetCatalogServicesQueryOptionArray) ToGetCatalogServicesQueryOptionArrayOutput() GetCatalogServicesQueryOptionArrayOutput {
	return i.ToGetCatalogServicesQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetCatalogServicesQueryOptionArray) ToGetCatalogServicesQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogServicesQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCatalogServicesQueryOptionArrayOutput)
}

type GetCatalogServicesQueryOptionOutput struct{ *pulumi.OutputState }

func (GetCatalogServicesQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServicesQueryOption)(nil)).Elem()
}

func (o GetCatalogServicesQueryOptionOutput) ToGetCatalogServicesQueryOptionOutput() GetCatalogServicesQueryOptionOutput {
	return o
}

func (o GetCatalogServicesQueryOptionOutput) ToGetCatalogServicesQueryOptionOutputWithContext(ctx context.Context) GetCatalogServicesQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetCatalogServicesQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to.
func (o GetCatalogServicesQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// The namespace to lookup the services.
func (o GetCatalogServicesQueryOptionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetCatalogServicesQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetCatalogServicesQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetCatalogServicesQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetCatalogServicesQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetCatalogServicesQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetCatalogServicesQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetCatalogServicesQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServicesQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetCatalogServicesQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetCatalogServicesQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCatalogServicesQueryOption)(nil)).Elem()
}

func (o GetCatalogServicesQueryOptionArrayOutput) ToGetCatalogServicesQueryOptionArrayOutput() GetCatalogServicesQueryOptionArrayOutput {
	return o
}

func (o GetCatalogServicesQueryOptionArrayOutput) ToGetCatalogServicesQueryOptionArrayOutputWithContext(ctx context.Context) GetCatalogServicesQueryOptionArrayOutput {
	return o
}

func (o GetCatalogServicesQueryOptionArrayOutput) Index(i pulumi.IntInput) GetCatalogServicesQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCatalogServicesQueryOption {
		return vs[0].([]GetCatalogServicesQueryOption)[vs[1].(int)]
	}).(GetCatalogServicesQueryOptionOutput)
}

type GetKeyPrefixSubkeyCollection struct {
	// This is the default value to set for `var.<name>`
	// if the key does not exist in Consul. Defaults to an empty string.
	Default *string `pulumi:"default"`
	// This is the name of the key. This value of the
	// key is exposed as `var.<name>`. This is not the path of the subkey
	// in Consul.
	Name string `pulumi:"name"`
	// This is the subkey path in Consul (which will be appended
	// to the given `pathPrefix`) to construct the full key that will be used
	// to read the value.
	Path string `pulumi:"path"`
}

// GetKeyPrefixSubkeyCollectionInput is an input type that accepts GetKeyPrefixSubkeyCollectionArgs and GetKeyPrefixSubkeyCollectionOutput values.
// You can construct a concrete instance of `GetKeyPrefixSubkeyCollectionInput` via:
//
//	GetKeyPrefixSubkeyCollectionArgs{...}
type GetKeyPrefixSubkeyCollectionInput interface {
	pulumi.Input

	ToGetKeyPrefixSubkeyCollectionOutput() GetKeyPrefixSubkeyCollectionOutput
	ToGetKeyPrefixSubkeyCollectionOutputWithContext(context.Context) GetKeyPrefixSubkeyCollectionOutput
}

type GetKeyPrefixSubkeyCollectionArgs struct {
	// This is the default value to set for `var.<name>`
	// if the key does not exist in Consul. Defaults to an empty string.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// This is the name of the key. This value of the
	// key is exposed as `var.<name>`. This is not the path of the subkey
	// in Consul.
	Name pulumi.StringInput `pulumi:"name"`
	// This is the subkey path in Consul (which will be appended
	// to the given `pathPrefix`) to construct the full key that will be used
	// to read the value.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetKeyPrefixSubkeyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPrefixSubkeyCollection)(nil)).Elem()
}

func (i GetKeyPrefixSubkeyCollectionArgs) ToGetKeyPrefixSubkeyCollectionOutput() GetKeyPrefixSubkeyCollectionOutput {
	return i.ToGetKeyPrefixSubkeyCollectionOutputWithContext(context.Background())
}

func (i GetKeyPrefixSubkeyCollectionArgs) ToGetKeyPrefixSubkeyCollectionOutputWithContext(ctx context.Context) GetKeyPrefixSubkeyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPrefixSubkeyCollectionOutput)
}

// GetKeyPrefixSubkeyCollectionArrayInput is an input type that accepts GetKeyPrefixSubkeyCollectionArray and GetKeyPrefixSubkeyCollectionArrayOutput values.
// You can construct a concrete instance of `GetKeyPrefixSubkeyCollectionArrayInput` via:
//
//	GetKeyPrefixSubkeyCollectionArray{ GetKeyPrefixSubkeyCollectionArgs{...} }
type GetKeyPrefixSubkeyCollectionArrayInput interface {
	pulumi.Input

	ToGetKeyPrefixSubkeyCollectionArrayOutput() GetKeyPrefixSubkeyCollectionArrayOutput
	ToGetKeyPrefixSubkeyCollectionArrayOutputWithContext(context.Context) GetKeyPrefixSubkeyCollectionArrayOutput
}

type GetKeyPrefixSubkeyCollectionArray []GetKeyPrefixSubkeyCollectionInput

func (GetKeyPrefixSubkeyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPrefixSubkeyCollection)(nil)).Elem()
}

func (i GetKeyPrefixSubkeyCollectionArray) ToGetKeyPrefixSubkeyCollectionArrayOutput() GetKeyPrefixSubkeyCollectionArrayOutput {
	return i.ToGetKeyPrefixSubkeyCollectionArrayOutputWithContext(context.Background())
}

func (i GetKeyPrefixSubkeyCollectionArray) ToGetKeyPrefixSubkeyCollectionArrayOutputWithContext(ctx context.Context) GetKeyPrefixSubkeyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPrefixSubkeyCollectionArrayOutput)
}

type GetKeyPrefixSubkeyCollectionOutput struct{ *pulumi.OutputState }

func (GetKeyPrefixSubkeyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPrefixSubkeyCollection)(nil)).Elem()
}

func (o GetKeyPrefixSubkeyCollectionOutput) ToGetKeyPrefixSubkeyCollectionOutput() GetKeyPrefixSubkeyCollectionOutput {
	return o
}

func (o GetKeyPrefixSubkeyCollectionOutput) ToGetKeyPrefixSubkeyCollectionOutputWithContext(ctx context.Context) GetKeyPrefixSubkeyCollectionOutput {
	return o
}

// This is the default value to set for `var.<name>`
// if the key does not exist in Consul. Defaults to an empty string.
func (o GetKeyPrefixSubkeyCollectionOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeyPrefixSubkeyCollection) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// This is the name of the key. This value of the
// key is exposed as `var.<name>`. This is not the path of the subkey
// in Consul.
func (o GetKeyPrefixSubkeyCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPrefixSubkeyCollection) string { return v.Name }).(pulumi.StringOutput)
}

// This is the subkey path in Consul (which will be appended
// to the given `pathPrefix`) to construct the full key that will be used
// to read the value.
func (o GetKeyPrefixSubkeyCollectionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPrefixSubkeyCollection) string { return v.Path }).(pulumi.StringOutput)
}

type GetKeyPrefixSubkeyCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetKeyPrefixSubkeyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPrefixSubkeyCollection)(nil)).Elem()
}

func (o GetKeyPrefixSubkeyCollectionArrayOutput) ToGetKeyPrefixSubkeyCollectionArrayOutput() GetKeyPrefixSubkeyCollectionArrayOutput {
	return o
}

func (o GetKeyPrefixSubkeyCollectionArrayOutput) ToGetKeyPrefixSubkeyCollectionArrayOutputWithContext(ctx context.Context) GetKeyPrefixSubkeyCollectionArrayOutput {
	return o
}

func (o GetKeyPrefixSubkeyCollectionArrayOutput) Index(i pulumi.IntInput) GetKeyPrefixSubkeyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyPrefixSubkeyCollection {
		return vs[0].([]GetKeyPrefixSubkeyCollection)[vs[1].(int)]
	}).(GetKeyPrefixSubkeyCollectionOutput)
}

type GetKeysKey struct {
	// This is the default value to set for `var.<name>` if the key does not exist in Consul. Defaults to an empty string.
	Default *string `pulumi:"default"`
	// This is the name of the key. This value of the key is exposed as `var.<name>`. This is not the path of the key in Consul.
	Name string `pulumi:"name"`
	// This is the path in Consul that should be read or written to.
	Path string `pulumi:"path"`
}

// GetKeysKeyInput is an input type that accepts GetKeysKeyArgs and GetKeysKeyOutput values.
// You can construct a concrete instance of `GetKeysKeyInput` via:
//
//	GetKeysKeyArgs{...}
type GetKeysKeyInput interface {
	pulumi.Input

	ToGetKeysKeyOutput() GetKeysKeyOutput
	ToGetKeysKeyOutputWithContext(context.Context) GetKeysKeyOutput
}

type GetKeysKeyArgs struct {
	// This is the default value to set for `var.<name>` if the key does not exist in Consul. Defaults to an empty string.
	Default pulumi.StringPtrInput `pulumi:"default"`
	// This is the name of the key. This value of the key is exposed as `var.<name>`. This is not the path of the key in Consul.
	Name pulumi.StringInput `pulumi:"name"`
	// This is the path in Consul that should be read or written to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetKeysKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return i.ToGetKeysKeyOutputWithContext(context.Background())
}

func (i GetKeysKeyArgs) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyOutput)
}

// GetKeysKeyArrayInput is an input type that accepts GetKeysKeyArray and GetKeysKeyArrayOutput values.
// You can construct a concrete instance of `GetKeysKeyArrayInput` via:
//
//	GetKeysKeyArray{ GetKeysKeyArgs{...} }
type GetKeysKeyArrayInput interface {
	pulumi.Input

	ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput
	ToGetKeysKeyArrayOutputWithContext(context.Context) GetKeysKeyArrayOutput
}

type GetKeysKeyArray []GetKeysKeyInput

func (GetKeysKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return i.ToGetKeysKeyArrayOutputWithContext(context.Background())
}

func (i GetKeysKeyArray) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeyArrayOutput)
}

type GetKeysKeyOutput struct{ *pulumi.OutputState }

func (GetKeysKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutput() GetKeysKeyOutput {
	return o
}

func (o GetKeysKeyOutput) ToGetKeysKeyOutputWithContext(ctx context.Context) GetKeysKeyOutput {
	return o
}

// This is the default value to set for `var.<name>` if the key does not exist in Consul. Defaults to an empty string.
func (o GetKeysKeyOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysKey) *string { return v.Default }).(pulumi.StringPtrOutput)
}

// This is the name of the key. This value of the key is exposed as `var.<name>`. This is not the path of the key in Consul.
func (o GetKeysKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Name }).(pulumi.StringOutput)
}

// This is the path in Consul that should be read or written to.
func (o GetKeysKeyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKey) string { return v.Path }).(pulumi.StringOutput)
}

type GetKeysKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKey)(nil)).Elem()
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutput() GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) ToGetKeysKeyArrayOutputWithContext(ctx context.Context) GetKeysKeyArrayOutput {
	return o
}

func (o GetKeysKeyArrayOutput) Index(i pulumi.IntInput) GetKeysKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKey {
		return vs[0].([]GetKeysKey)[vs[1].(int)]
	}).(GetKeysKeyOutput)
}

type GetNetworkAreaMembersMember struct {
	// The IP address of the server.
	Address string `pulumi:"address"`
	// The Consul version running on the node.
	Build string `pulumi:"build"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter string `pulumi:"datacenter"`
	// The node ID of the server.
	Id string `pulumi:"id"`
	// The node name of the server, with its datacenter appended.
	Name string `pulumi:"name"`
	// The server RPC port the node.
	Port int `pulumi:"port"`
	// The protocol version being spoken by the node.
	Protocol int `pulumi:"protocol"`
	// Role is always `"server"` since only Consul servers can participate
	// in network areas.
	Role string `pulumi:"role"`
	// An estimated network round trip time from the server answering the
	// query to the given server, in nanoseconds. This is computed using network
	// coordinates.
	Rtt int `pulumi:"rtt"`
	// The current health status of the node, as determined by the
	// network area distributed failure detector. This will be `"alive"`, `"leaving"`,
	// or `"failed"`. A `"failed"` status means that other servers are not able to
	// probe this server over its server RPC interface.
	Status string `pulumi:"status"`
}

// GetNetworkAreaMembersMemberInput is an input type that accepts GetNetworkAreaMembersMemberArgs and GetNetworkAreaMembersMemberOutput values.
// You can construct a concrete instance of `GetNetworkAreaMembersMemberInput` via:
//
//	GetNetworkAreaMembersMemberArgs{...}
type GetNetworkAreaMembersMemberInput interface {
	pulumi.Input

	ToGetNetworkAreaMembersMemberOutput() GetNetworkAreaMembersMemberOutput
	ToGetNetworkAreaMembersMemberOutputWithContext(context.Context) GetNetworkAreaMembersMemberOutput
}

type GetNetworkAreaMembersMemberArgs struct {
	// The IP address of the server.
	Address pulumi.StringInput `pulumi:"address"`
	// The Consul version running on the node.
	Build pulumi.StringInput `pulumi:"build"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The node ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The node name of the server, with its datacenter appended.
	Name pulumi.StringInput `pulumi:"name"`
	// The server RPC port the node.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol version being spoken by the node.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Role is always `"server"` since only Consul servers can participate
	// in network areas.
	Role pulumi.StringInput `pulumi:"role"`
	// An estimated network round trip time from the server answering the
	// query to the given server, in nanoseconds. This is computed using network
	// coordinates.
	Rtt pulumi.IntInput `pulumi:"rtt"`
	// The current health status of the node, as determined by the
	// network area distributed failure detector. This will be `"alive"`, `"leaving"`,
	// or `"failed"`. A `"failed"` status means that other servers are not able to
	// probe this server over its server RPC interface.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNetworkAreaMembersMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAreaMembersMember)(nil)).Elem()
}

func (i GetNetworkAreaMembersMemberArgs) ToGetNetworkAreaMembersMemberOutput() GetNetworkAreaMembersMemberOutput {
	return i.ToGetNetworkAreaMembersMemberOutputWithContext(context.Background())
}

func (i GetNetworkAreaMembersMemberArgs) ToGetNetworkAreaMembersMemberOutputWithContext(ctx context.Context) GetNetworkAreaMembersMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAreaMembersMemberOutput)
}

// GetNetworkAreaMembersMemberArrayInput is an input type that accepts GetNetworkAreaMembersMemberArray and GetNetworkAreaMembersMemberArrayOutput values.
// You can construct a concrete instance of `GetNetworkAreaMembersMemberArrayInput` via:
//
//	GetNetworkAreaMembersMemberArray{ GetNetworkAreaMembersMemberArgs{...} }
type GetNetworkAreaMembersMemberArrayInput interface {
	pulumi.Input

	ToGetNetworkAreaMembersMemberArrayOutput() GetNetworkAreaMembersMemberArrayOutput
	ToGetNetworkAreaMembersMemberArrayOutputWithContext(context.Context) GetNetworkAreaMembersMemberArrayOutput
}

type GetNetworkAreaMembersMemberArray []GetNetworkAreaMembersMemberInput

func (GetNetworkAreaMembersMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAreaMembersMember)(nil)).Elem()
}

func (i GetNetworkAreaMembersMemberArray) ToGetNetworkAreaMembersMemberArrayOutput() GetNetworkAreaMembersMemberArrayOutput {
	return i.ToGetNetworkAreaMembersMemberArrayOutputWithContext(context.Background())
}

func (i GetNetworkAreaMembersMemberArray) ToGetNetworkAreaMembersMemberArrayOutputWithContext(ctx context.Context) GetNetworkAreaMembersMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAreaMembersMemberArrayOutput)
}

type GetNetworkAreaMembersMemberOutput struct{ *pulumi.OutputState }

func (GetNetworkAreaMembersMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAreaMembersMember)(nil)).Elem()
}

func (o GetNetworkAreaMembersMemberOutput) ToGetNetworkAreaMembersMemberOutput() GetNetworkAreaMembersMemberOutput {
	return o
}

func (o GetNetworkAreaMembersMemberOutput) ToGetNetworkAreaMembersMemberOutputWithContext(ctx context.Context) GetNetworkAreaMembersMemberOutput {
	return o
}

// The IP address of the server.
func (o GetNetworkAreaMembersMemberOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Address }).(pulumi.StringOutput)
}

// The Consul version running on the node.
func (o GetNetworkAreaMembersMemberOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Build }).(pulumi.StringOutput)
}

// The datacenter to use. This overrides the
// agent's default datacenter and the datacenter in the provider setup.
func (o GetNetworkAreaMembersMemberOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The node ID of the server.
func (o GetNetworkAreaMembersMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Id }).(pulumi.StringOutput)
}

// The node name of the server, with its datacenter appended.
func (o GetNetworkAreaMembersMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Name }).(pulumi.StringOutput)
}

// The server RPC port the node.
func (o GetNetworkAreaMembersMemberOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol version being spoken by the node.
func (o GetNetworkAreaMembersMemberOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) int { return v.Protocol }).(pulumi.IntOutput)
}

// Role is always `"server"` since only Consul servers can participate
// in network areas.
func (o GetNetworkAreaMembersMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Role }).(pulumi.StringOutput)
}

// An estimated network round trip time from the server answering the
// query to the given server, in nanoseconds. This is computed using network
// coordinates.
func (o GetNetworkAreaMembersMemberOutput) Rtt() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) int { return v.Rtt }).(pulumi.IntOutput)
}

// The current health status of the node, as determined by the
// network area distributed failure detector. This will be `"alive"`, `"leaving"`,
// or `"failed"`. A `"failed"` status means that other servers are not able to
// probe this server over its server RPC interface.
func (o GetNetworkAreaMembersMemberOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAreaMembersMember) string { return v.Status }).(pulumi.StringOutput)
}

type GetNetworkAreaMembersMemberArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAreaMembersMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAreaMembersMember)(nil)).Elem()
}

func (o GetNetworkAreaMembersMemberArrayOutput) ToGetNetworkAreaMembersMemberArrayOutput() GetNetworkAreaMembersMemberArrayOutput {
	return o
}

func (o GetNetworkAreaMembersMemberArrayOutput) ToGetNetworkAreaMembersMemberArrayOutputWithContext(ctx context.Context) GetNetworkAreaMembersMemberArrayOutput {
	return o
}

func (o GetNetworkAreaMembersMemberArrayOutput) Index(i pulumi.IntInput) GetNetworkAreaMembersMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAreaMembersMember {
		return vs[0].([]GetNetworkAreaMembersMember)[vs[1].(int)]
	}).(GetNetworkAreaMembersMemberOutput)
}

type GetNodesNode struct {
	Address string `pulumi:"address"`
	// The Node ID of the Consul agent.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
	//   data tag information, if any.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
	//   of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
	//   IP address the node is advertising to the Consul cluster.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	Id              string            `pulumi:"id"`
	Meta            map[string]string `pulumi:"meta"`
	Name            string            `pulumi:"name"`
	TaggedAddresses map[string]string `pulumi:"taggedAddresses"`
}

// GetNodesNodeInput is an input type that accepts GetNodesNodeArgs and GetNodesNodeOutput values.
// You can construct a concrete instance of `GetNodesNodeInput` via:
//
//	GetNodesNodeArgs{...}
type GetNodesNodeInput interface {
	pulumi.Input

	ToGetNodesNodeOutput() GetNodesNodeOutput
	ToGetNodesNodeOutputWithContext(context.Context) GetNodesNodeOutput
}

type GetNodesNodeArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	// The Node ID of the Consul agent.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
	//   data tag information, if any.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
	//   of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
	//   IP address the node is advertising to the Consul cluster.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	Id              pulumi.StringInput    `pulumi:"id"`
	Meta            pulumi.StringMapInput `pulumi:"meta"`
	Name            pulumi.StringInput    `pulumi:"name"`
	TaggedAddresses pulumi.StringMapInput `pulumi:"taggedAddresses"`
}

func (GetNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return i.ToGetNodesNodeOutputWithContext(context.Background())
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeOutput)
}

// GetNodesNodeArrayInput is an input type that accepts GetNodesNodeArray and GetNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeArrayInput` via:
//
//	GetNodesNodeArray{ GetNodesNodeArgs{...} }
type GetNodesNodeArrayInput interface {
	pulumi.Input

	ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput
	ToGetNodesNodeArrayOutputWithContext(context.Context) GetNodesNodeArrayOutput
}

type GetNodesNodeArray []GetNodesNodeInput

func (GetNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return i.ToGetNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeArrayOutput)
}

type GetNodesNodeOutput struct{ *pulumi.OutputState }

func (GetNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return o
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return o
}

func (o GetNodesNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Address }).(pulumi.StringOutput)
}

// The Node ID of the Consul agent.
//   - [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node meta
//     data tag information, if any.
//   - [`name`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The name
//     of the Consul node.
//   - [`address`](https://www.consul.io/docs/agent/http/catalog.html#Address) - The
//     IP address the node is advertising to the Consul cluster.
//   - [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
//     List of explicit LAN and WAN IP addresses for the agent.
func (o GetNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNodesNode) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o GetNodesNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) TaggedAddresses() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNodesNode) map[string]string { return v.TaggedAddresses }).(pulumi.StringMapOutput)
}

type GetNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) Index(i pulumi.IntInput) GetNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNode {
		return vs[0].([]GetNodesNode)[vs[1].(int)]
	}).(GetNodesNodeOutput)
}

type GetNodesQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to then the datacenter in the provider setup.
	Datacenter *string           `pulumi:"datacenter"`
	Near       *string           `pulumi:"near"`
	NodeMeta   map[string]string `pulumi:"nodeMeta"`
	Partition  *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetNodesQueryOptionInput is an input type that accepts GetNodesQueryOptionArgs and GetNodesQueryOptionOutput values.
// You can construct a concrete instance of `GetNodesQueryOptionInput` via:
//
//	GetNodesQueryOptionArgs{...}
type GetNodesQueryOptionInput interface {
	pulumi.Input

	ToGetNodesQueryOptionOutput() GetNodesQueryOptionOutput
	ToGetNodesQueryOptionOutputWithContext(context.Context) GetNodesQueryOptionOutput
}

type GetNodesQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to then the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	Near       pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta   pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition  pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetNodesQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesQueryOption)(nil)).Elem()
}

func (i GetNodesQueryOptionArgs) ToGetNodesQueryOptionOutput() GetNodesQueryOptionOutput {
	return i.ToGetNodesQueryOptionOutputWithContext(context.Background())
}

func (i GetNodesQueryOptionArgs) ToGetNodesQueryOptionOutputWithContext(ctx context.Context) GetNodesQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesQueryOptionOutput)
}

// GetNodesQueryOptionArrayInput is an input type that accepts GetNodesQueryOptionArray and GetNodesQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetNodesQueryOptionArrayInput` via:
//
//	GetNodesQueryOptionArray{ GetNodesQueryOptionArgs{...} }
type GetNodesQueryOptionArrayInput interface {
	pulumi.Input

	ToGetNodesQueryOptionArrayOutput() GetNodesQueryOptionArrayOutput
	ToGetNodesQueryOptionArrayOutputWithContext(context.Context) GetNodesQueryOptionArrayOutput
}

type GetNodesQueryOptionArray []GetNodesQueryOptionInput

func (GetNodesQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesQueryOption)(nil)).Elem()
}

func (i GetNodesQueryOptionArray) ToGetNodesQueryOptionArrayOutput() GetNodesQueryOptionArrayOutput {
	return i.ToGetNodesQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetNodesQueryOptionArray) ToGetNodesQueryOptionArrayOutputWithContext(ctx context.Context) GetNodesQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesQueryOptionArrayOutput)
}

type GetNodesQueryOptionOutput struct{ *pulumi.OutputState }

func (GetNodesQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesQueryOption)(nil)).Elem()
}

func (o GetNodesQueryOptionOutput) ToGetNodesQueryOptionOutput() GetNodesQueryOptionOutput {
	return o
}

func (o GetNodesQueryOptionOutput) ToGetNodesQueryOptionOutputWithContext(ctx context.Context) GetNodesQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetNodesQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to then the datacenter in the provider setup.
func (o GetNodesQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

func (o GetNodesQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetNodesQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNodesQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetNodesQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetNodesQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetNodesQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetNodesQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetNodesQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodesQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetNodesQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetNodesQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesQueryOption)(nil)).Elem()
}

func (o GetNodesQueryOptionArrayOutput) ToGetNodesQueryOptionArrayOutput() GetNodesQueryOptionArrayOutput {
	return o
}

func (o GetNodesQueryOptionArrayOutput) ToGetNodesQueryOptionArrayOutputWithContext(ctx context.Context) GetNodesQueryOptionArrayOutput {
	return o
}

func (o GetNodesQueryOptionArrayOutput) Index(i pulumi.IntInput) GetNodesQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesQueryOption {
		return vs[0].([]GetNodesQueryOption)[vs[1].(int)]
	}).(GetNodesQueryOptionOutput)
}

type GetPeeringsPeer struct {
	DeletedAt           string            `pulumi:"deletedAt"`
	Id                  string            `pulumi:"id"`
	Meta                map[string]string `pulumi:"meta"`
	Name                string            `pulumi:"name"`
	Partition           string            `pulumi:"partition"`
	PeerCaPems          []string          `pulumi:"peerCaPems"`
	PeerId              string            `pulumi:"peerId"`
	PeerServerAddresses []string          `pulumi:"peerServerAddresses"`
	PeerServerName      string            `pulumi:"peerServerName"`
	State               string            `pulumi:"state"`
}

// GetPeeringsPeerInput is an input type that accepts GetPeeringsPeerArgs and GetPeeringsPeerOutput values.
// You can construct a concrete instance of `GetPeeringsPeerInput` via:
//
//	GetPeeringsPeerArgs{...}
type GetPeeringsPeerInput interface {
	pulumi.Input

	ToGetPeeringsPeerOutput() GetPeeringsPeerOutput
	ToGetPeeringsPeerOutputWithContext(context.Context) GetPeeringsPeerOutput
}

type GetPeeringsPeerArgs struct {
	DeletedAt           pulumi.StringInput      `pulumi:"deletedAt"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	Meta                pulumi.StringMapInput   `pulumi:"meta"`
	Name                pulumi.StringInput      `pulumi:"name"`
	Partition           pulumi.StringInput      `pulumi:"partition"`
	PeerCaPems          pulumi.StringArrayInput `pulumi:"peerCaPems"`
	PeerId              pulumi.StringInput      `pulumi:"peerId"`
	PeerServerAddresses pulumi.StringArrayInput `pulumi:"peerServerAddresses"`
	PeerServerName      pulumi.StringInput      `pulumi:"peerServerName"`
	State               pulumi.StringInput      `pulumi:"state"`
}

func (GetPeeringsPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringsPeer)(nil)).Elem()
}

func (i GetPeeringsPeerArgs) ToGetPeeringsPeerOutput() GetPeeringsPeerOutput {
	return i.ToGetPeeringsPeerOutputWithContext(context.Background())
}

func (i GetPeeringsPeerArgs) ToGetPeeringsPeerOutputWithContext(ctx context.Context) GetPeeringsPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringsPeerOutput)
}

// GetPeeringsPeerArrayInput is an input type that accepts GetPeeringsPeerArray and GetPeeringsPeerArrayOutput values.
// You can construct a concrete instance of `GetPeeringsPeerArrayInput` via:
//
//	GetPeeringsPeerArray{ GetPeeringsPeerArgs{...} }
type GetPeeringsPeerArrayInput interface {
	pulumi.Input

	ToGetPeeringsPeerArrayOutput() GetPeeringsPeerArrayOutput
	ToGetPeeringsPeerArrayOutputWithContext(context.Context) GetPeeringsPeerArrayOutput
}

type GetPeeringsPeerArray []GetPeeringsPeerInput

func (GetPeeringsPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringsPeer)(nil)).Elem()
}

func (i GetPeeringsPeerArray) ToGetPeeringsPeerArrayOutput() GetPeeringsPeerArrayOutput {
	return i.ToGetPeeringsPeerArrayOutputWithContext(context.Background())
}

func (i GetPeeringsPeerArray) ToGetPeeringsPeerArrayOutputWithContext(ctx context.Context) GetPeeringsPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringsPeerArrayOutput)
}

type GetPeeringsPeerOutput struct{ *pulumi.OutputState }

func (GetPeeringsPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringsPeer)(nil)).Elem()
}

func (o GetPeeringsPeerOutput) ToGetPeeringsPeerOutput() GetPeeringsPeerOutput {
	return o
}

func (o GetPeeringsPeerOutput) ToGetPeeringsPeerOutputWithContext(ctx context.Context) GetPeeringsPeerOutput {
	return o
}

func (o GetPeeringsPeerOutput) DeletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.DeletedAt }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPeeringsPeer) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o GetPeeringsPeerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) Partition() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.Partition }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) PeerCaPems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringsPeer) []string { return v.PeerCaPems }).(pulumi.StringArrayOutput)
}

func (o GetPeeringsPeerOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.PeerId }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) PeerServerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringsPeer) []string { return v.PeerServerAddresses }).(pulumi.StringArrayOutput)
}

func (o GetPeeringsPeerOutput) PeerServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.PeerServerName }).(pulumi.StringOutput)
}

func (o GetPeeringsPeerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringsPeer) string { return v.State }).(pulumi.StringOutput)
}

type GetPeeringsPeerArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringsPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringsPeer)(nil)).Elem()
}

func (o GetPeeringsPeerArrayOutput) ToGetPeeringsPeerArrayOutput() GetPeeringsPeerArrayOutput {
	return o
}

func (o GetPeeringsPeerArrayOutput) ToGetPeeringsPeerArrayOutputWithContext(ctx context.Context) GetPeeringsPeerArrayOutput {
	return o
}

func (o GetPeeringsPeerArrayOutput) Index(i pulumi.IntInput) GetPeeringsPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringsPeer {
		return vs[0].([]GetPeeringsPeer)[vs[1].(int)]
	}).(GetPeeringsPeerOutput)
}

type GetServiceHealthResult struct {
	Checks []GetServiceHealthResultCheck `pulumi:"checks"`
	// The name of the node associated with this health-check.
	Nodes    []GetServiceHealthResultNode    `pulumi:"nodes"`
	Services []GetServiceHealthResultService `pulumi:"services"`
}

// GetServiceHealthResultInput is an input type that accepts GetServiceHealthResultArgs and GetServiceHealthResultOutput values.
// You can construct a concrete instance of `GetServiceHealthResultInput` via:
//
//	GetServiceHealthResultArgs{...}
type GetServiceHealthResultInput interface {
	pulumi.Input

	ToGetServiceHealthResultOutput() GetServiceHealthResultOutput
	ToGetServiceHealthResultOutputWithContext(context.Context) GetServiceHealthResultOutput
}

type GetServiceHealthResultArgs struct {
	Checks GetServiceHealthResultCheckArrayInput `pulumi:"checks"`
	// The name of the node associated with this health-check.
	Nodes    GetServiceHealthResultNodeArrayInput    `pulumi:"nodes"`
	Services GetServiceHealthResultServiceArrayInput `pulumi:"services"`
}

func (GetServiceHealthResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResult)(nil)).Elem()
}

func (i GetServiceHealthResultArgs) ToGetServiceHealthResultOutput() GetServiceHealthResultOutput {
	return i.ToGetServiceHealthResultOutputWithContext(context.Background())
}

func (i GetServiceHealthResultArgs) ToGetServiceHealthResultOutputWithContext(ctx context.Context) GetServiceHealthResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultOutput)
}

// GetServiceHealthResultArrayInput is an input type that accepts GetServiceHealthResultArray and GetServiceHealthResultArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthResultArrayInput` via:
//
//	GetServiceHealthResultArray{ GetServiceHealthResultArgs{...} }
type GetServiceHealthResultArrayInput interface {
	pulumi.Input

	ToGetServiceHealthResultArrayOutput() GetServiceHealthResultArrayOutput
	ToGetServiceHealthResultArrayOutputWithContext(context.Context) GetServiceHealthResultArrayOutput
}

type GetServiceHealthResultArray []GetServiceHealthResultInput

func (GetServiceHealthResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResult)(nil)).Elem()
}

func (i GetServiceHealthResultArray) ToGetServiceHealthResultArrayOutput() GetServiceHealthResultArrayOutput {
	return i.ToGetServiceHealthResultArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthResultArray) ToGetServiceHealthResultArrayOutputWithContext(ctx context.Context) GetServiceHealthResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultArrayOutput)
}

type GetServiceHealthResultOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResult)(nil)).Elem()
}

func (o GetServiceHealthResultOutput) ToGetServiceHealthResultOutput() GetServiceHealthResultOutput {
	return o
}

func (o GetServiceHealthResultOutput) ToGetServiceHealthResultOutputWithContext(ctx context.Context) GetServiceHealthResultOutput {
	return o
}

func (o GetServiceHealthResultOutput) Checks() GetServiceHealthResultCheckArrayOutput {
	return o.ApplyT(func(v GetServiceHealthResult) []GetServiceHealthResultCheck { return v.Checks }).(GetServiceHealthResultCheckArrayOutput)
}

// The name of the node associated with this health-check.
func (o GetServiceHealthResultOutput) Nodes() GetServiceHealthResultNodeArrayOutput {
	return o.ApplyT(func(v GetServiceHealthResult) []GetServiceHealthResultNode { return v.Nodes }).(GetServiceHealthResultNodeArrayOutput)
}

func (o GetServiceHealthResultOutput) Services() GetServiceHealthResultServiceArrayOutput {
	return o.ApplyT(func(v GetServiceHealthResult) []GetServiceHealthResultService { return v.Services }).(GetServiceHealthResultServiceArrayOutput)
}

type GetServiceHealthResultArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResult)(nil)).Elem()
}

func (o GetServiceHealthResultArrayOutput) ToGetServiceHealthResultArrayOutput() GetServiceHealthResultArrayOutput {
	return o
}

func (o GetServiceHealthResultArrayOutput) ToGetServiceHealthResultArrayOutputWithContext(ctx context.Context) GetServiceHealthResultArrayOutput {
	return o
}

func (o GetServiceHealthResultArrayOutput) Index(i pulumi.IntInput) GetServiceHealthResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthResult {
		return vs[0].([]GetServiceHealthResult)[vs[1].(int)]
	}).(GetServiceHealthResultOutput)
}

type GetServiceHealthResultCheck struct {
	// The ID of this health-check.
	Id string `pulumi:"id"`
	// The service name to select.
	Name string `pulumi:"name"`
	// The name of the node associated with this health-check.
	Node string `pulumi:"node"`
	// A human readable description of the current state of the health-check.
	Notes string `pulumi:"notes"`
	// The output of the health-check.
	Output string `pulumi:"output"`
	// The ID of the service associated to this health-check.
	ServiceId string `pulumi:"serviceId"`
	// The name of the service associated with this health-check.
	ServiceName string `pulumi:"serviceName"`
	// The list of tags associated with this health-check.
	ServiceTags []string `pulumi:"serviceTags"`
	// The status of this health-check.
	Status string `pulumi:"status"`
}

// GetServiceHealthResultCheckInput is an input type that accepts GetServiceHealthResultCheckArgs and GetServiceHealthResultCheckOutput values.
// You can construct a concrete instance of `GetServiceHealthResultCheckInput` via:
//
//	GetServiceHealthResultCheckArgs{...}
type GetServiceHealthResultCheckInput interface {
	pulumi.Input

	ToGetServiceHealthResultCheckOutput() GetServiceHealthResultCheckOutput
	ToGetServiceHealthResultCheckOutputWithContext(context.Context) GetServiceHealthResultCheckOutput
}

type GetServiceHealthResultCheckArgs struct {
	// The ID of this health-check.
	Id pulumi.StringInput `pulumi:"id"`
	// The service name to select.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the node associated with this health-check.
	Node pulumi.StringInput `pulumi:"node"`
	// A human readable description of the current state of the health-check.
	Notes pulumi.StringInput `pulumi:"notes"`
	// The output of the health-check.
	Output pulumi.StringInput `pulumi:"output"`
	// The ID of the service associated to this health-check.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// The name of the service associated with this health-check.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The list of tags associated with this health-check.
	ServiceTags pulumi.StringArrayInput `pulumi:"serviceTags"`
	// The status of this health-check.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetServiceHealthResultCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultCheck)(nil)).Elem()
}

func (i GetServiceHealthResultCheckArgs) ToGetServiceHealthResultCheckOutput() GetServiceHealthResultCheckOutput {
	return i.ToGetServiceHealthResultCheckOutputWithContext(context.Background())
}

func (i GetServiceHealthResultCheckArgs) ToGetServiceHealthResultCheckOutputWithContext(ctx context.Context) GetServiceHealthResultCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultCheckOutput)
}

// GetServiceHealthResultCheckArrayInput is an input type that accepts GetServiceHealthResultCheckArray and GetServiceHealthResultCheckArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthResultCheckArrayInput` via:
//
//	GetServiceHealthResultCheckArray{ GetServiceHealthResultCheckArgs{...} }
type GetServiceHealthResultCheckArrayInput interface {
	pulumi.Input

	ToGetServiceHealthResultCheckArrayOutput() GetServiceHealthResultCheckArrayOutput
	ToGetServiceHealthResultCheckArrayOutputWithContext(context.Context) GetServiceHealthResultCheckArrayOutput
}

type GetServiceHealthResultCheckArray []GetServiceHealthResultCheckInput

func (GetServiceHealthResultCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultCheck)(nil)).Elem()
}

func (i GetServiceHealthResultCheckArray) ToGetServiceHealthResultCheckArrayOutput() GetServiceHealthResultCheckArrayOutput {
	return i.ToGetServiceHealthResultCheckArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthResultCheckArray) ToGetServiceHealthResultCheckArrayOutputWithContext(ctx context.Context) GetServiceHealthResultCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultCheckArrayOutput)
}

type GetServiceHealthResultCheckOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultCheck)(nil)).Elem()
}

func (o GetServiceHealthResultCheckOutput) ToGetServiceHealthResultCheckOutput() GetServiceHealthResultCheckOutput {
	return o
}

func (o GetServiceHealthResultCheckOutput) ToGetServiceHealthResultCheckOutputWithContext(ctx context.Context) GetServiceHealthResultCheckOutput {
	return o
}

// The ID of this health-check.
func (o GetServiceHealthResultCheckOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Id }).(pulumi.StringOutput)
}

// The service name to select.
func (o GetServiceHealthResultCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the node associated with this health-check.
func (o GetServiceHealthResultCheckOutput) Node() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Node }).(pulumi.StringOutput)
}

// A human readable description of the current state of the health-check.
func (o GetServiceHealthResultCheckOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Notes }).(pulumi.StringOutput)
}

// The output of the health-check.
func (o GetServiceHealthResultCheckOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Output }).(pulumi.StringOutput)
}

// The ID of the service associated to this health-check.
func (o GetServiceHealthResultCheckOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.ServiceId }).(pulumi.StringOutput)
}

// The name of the service associated with this health-check.
func (o GetServiceHealthResultCheckOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The list of tags associated with this health-check.
func (o GetServiceHealthResultCheckOutput) ServiceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) []string { return v.ServiceTags }).(pulumi.StringArrayOutput)
}

// The status of this health-check.
func (o GetServiceHealthResultCheckOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultCheck) string { return v.Status }).(pulumi.StringOutput)
}

type GetServiceHealthResultCheckArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultCheck)(nil)).Elem()
}

func (o GetServiceHealthResultCheckArrayOutput) ToGetServiceHealthResultCheckArrayOutput() GetServiceHealthResultCheckArrayOutput {
	return o
}

func (o GetServiceHealthResultCheckArrayOutput) ToGetServiceHealthResultCheckArrayOutputWithContext(ctx context.Context) GetServiceHealthResultCheckArrayOutput {
	return o
}

func (o GetServiceHealthResultCheckArrayOutput) Index(i pulumi.IntInput) GetServiceHealthResultCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthResultCheck {
		return vs[0].([]GetServiceHealthResultCheck)[vs[1].(int)]
	}).(GetServiceHealthResultCheckOutput)
}

type GetServiceHealthResultNode struct {
	// The address of this instance.
	Address string `pulumi:"address"`
	// The Consul datacenter to query.
	Datacenter string `pulumi:"datacenter"`
	// The ID of this health-check.
	Id string `pulumi:"id"`
	// Service metadata tag information, if any.
	Meta map[string]string `pulumi:"meta"`
	// The service name to select.
	Name            string            `pulumi:"name"`
	TaggedAddresses map[string]string `pulumi:"taggedAddresses"`
}

// GetServiceHealthResultNodeInput is an input type that accepts GetServiceHealthResultNodeArgs and GetServiceHealthResultNodeOutput values.
// You can construct a concrete instance of `GetServiceHealthResultNodeInput` via:
//
//	GetServiceHealthResultNodeArgs{...}
type GetServiceHealthResultNodeInput interface {
	pulumi.Input

	ToGetServiceHealthResultNodeOutput() GetServiceHealthResultNodeOutput
	ToGetServiceHealthResultNodeOutputWithContext(context.Context) GetServiceHealthResultNodeOutput
}

type GetServiceHealthResultNodeArgs struct {
	// The address of this instance.
	Address pulumi.StringInput `pulumi:"address"`
	// The Consul datacenter to query.
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// The ID of this health-check.
	Id pulumi.StringInput `pulumi:"id"`
	// Service metadata tag information, if any.
	Meta pulumi.StringMapInput `pulumi:"meta"`
	// The service name to select.
	Name            pulumi.StringInput    `pulumi:"name"`
	TaggedAddresses pulumi.StringMapInput `pulumi:"taggedAddresses"`
}

func (GetServiceHealthResultNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultNode)(nil)).Elem()
}

func (i GetServiceHealthResultNodeArgs) ToGetServiceHealthResultNodeOutput() GetServiceHealthResultNodeOutput {
	return i.ToGetServiceHealthResultNodeOutputWithContext(context.Background())
}

func (i GetServiceHealthResultNodeArgs) ToGetServiceHealthResultNodeOutputWithContext(ctx context.Context) GetServiceHealthResultNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultNodeOutput)
}

// GetServiceHealthResultNodeArrayInput is an input type that accepts GetServiceHealthResultNodeArray and GetServiceHealthResultNodeArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthResultNodeArrayInput` via:
//
//	GetServiceHealthResultNodeArray{ GetServiceHealthResultNodeArgs{...} }
type GetServiceHealthResultNodeArrayInput interface {
	pulumi.Input

	ToGetServiceHealthResultNodeArrayOutput() GetServiceHealthResultNodeArrayOutput
	ToGetServiceHealthResultNodeArrayOutputWithContext(context.Context) GetServiceHealthResultNodeArrayOutput
}

type GetServiceHealthResultNodeArray []GetServiceHealthResultNodeInput

func (GetServiceHealthResultNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultNode)(nil)).Elem()
}

func (i GetServiceHealthResultNodeArray) ToGetServiceHealthResultNodeArrayOutput() GetServiceHealthResultNodeArrayOutput {
	return i.ToGetServiceHealthResultNodeArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthResultNodeArray) ToGetServiceHealthResultNodeArrayOutputWithContext(ctx context.Context) GetServiceHealthResultNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultNodeArrayOutput)
}

type GetServiceHealthResultNodeOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultNode)(nil)).Elem()
}

func (o GetServiceHealthResultNodeOutput) ToGetServiceHealthResultNodeOutput() GetServiceHealthResultNodeOutput {
	return o
}

func (o GetServiceHealthResultNodeOutput) ToGetServiceHealthResultNodeOutputWithContext(ctx context.Context) GetServiceHealthResultNodeOutput {
	return o
}

// The address of this instance.
func (o GetServiceHealthResultNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) string { return v.Address }).(pulumi.StringOutput)
}

// The Consul datacenter to query.
func (o GetServiceHealthResultNodeOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The ID of this health-check.
func (o GetServiceHealthResultNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) string { return v.Id }).(pulumi.StringOutput)
}

// Service metadata tag information, if any.
func (o GetServiceHealthResultNodeOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

// The service name to select.
func (o GetServiceHealthResultNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServiceHealthResultNodeOutput) TaggedAddresses() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceHealthResultNode) map[string]string { return v.TaggedAddresses }).(pulumi.StringMapOutput)
}

type GetServiceHealthResultNodeArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultNode)(nil)).Elem()
}

func (o GetServiceHealthResultNodeArrayOutput) ToGetServiceHealthResultNodeArrayOutput() GetServiceHealthResultNodeArrayOutput {
	return o
}

func (o GetServiceHealthResultNodeArrayOutput) ToGetServiceHealthResultNodeArrayOutputWithContext(ctx context.Context) GetServiceHealthResultNodeArrayOutput {
	return o
}

func (o GetServiceHealthResultNodeArrayOutput) Index(i pulumi.IntInput) GetServiceHealthResultNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthResultNode {
		return vs[0].([]GetServiceHealthResultNode)[vs[1].(int)]
	}).(GetServiceHealthResultNodeOutput)
}

type GetServiceHealthResultService struct {
	// The address of this instance.
	Address string `pulumi:"address"`
	// The ID of this health-check.
	Id string `pulumi:"id"`
	// Service metadata tag information, if any.
	Meta map[string]string `pulumi:"meta"`
	// The service name to select.
	Name string `pulumi:"name"`
	// The port of this instance.
	Port int `pulumi:"port"`
	// The list of tags associated with this instance.
	Tags []string `pulumi:"tags"`
}

// GetServiceHealthResultServiceInput is an input type that accepts GetServiceHealthResultServiceArgs and GetServiceHealthResultServiceOutput values.
// You can construct a concrete instance of `GetServiceHealthResultServiceInput` via:
//
//	GetServiceHealthResultServiceArgs{...}
type GetServiceHealthResultServiceInput interface {
	pulumi.Input

	ToGetServiceHealthResultServiceOutput() GetServiceHealthResultServiceOutput
	ToGetServiceHealthResultServiceOutputWithContext(context.Context) GetServiceHealthResultServiceOutput
}

type GetServiceHealthResultServiceArgs struct {
	// The address of this instance.
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of this health-check.
	Id pulumi.StringInput `pulumi:"id"`
	// Service metadata tag information, if any.
	Meta pulumi.StringMapInput `pulumi:"meta"`
	// The service name to select.
	Name pulumi.StringInput `pulumi:"name"`
	// The port of this instance.
	Port pulumi.IntInput `pulumi:"port"`
	// The list of tags associated with this instance.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetServiceHealthResultServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultService)(nil)).Elem()
}

func (i GetServiceHealthResultServiceArgs) ToGetServiceHealthResultServiceOutput() GetServiceHealthResultServiceOutput {
	return i.ToGetServiceHealthResultServiceOutputWithContext(context.Background())
}

func (i GetServiceHealthResultServiceArgs) ToGetServiceHealthResultServiceOutputWithContext(ctx context.Context) GetServiceHealthResultServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultServiceOutput)
}

// GetServiceHealthResultServiceArrayInput is an input type that accepts GetServiceHealthResultServiceArray and GetServiceHealthResultServiceArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthResultServiceArrayInput` via:
//
//	GetServiceHealthResultServiceArray{ GetServiceHealthResultServiceArgs{...} }
type GetServiceHealthResultServiceArrayInput interface {
	pulumi.Input

	ToGetServiceHealthResultServiceArrayOutput() GetServiceHealthResultServiceArrayOutput
	ToGetServiceHealthResultServiceArrayOutputWithContext(context.Context) GetServiceHealthResultServiceArrayOutput
}

type GetServiceHealthResultServiceArray []GetServiceHealthResultServiceInput

func (GetServiceHealthResultServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultService)(nil)).Elem()
}

func (i GetServiceHealthResultServiceArray) ToGetServiceHealthResultServiceArrayOutput() GetServiceHealthResultServiceArrayOutput {
	return i.ToGetServiceHealthResultServiceArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthResultServiceArray) ToGetServiceHealthResultServiceArrayOutputWithContext(ctx context.Context) GetServiceHealthResultServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthResultServiceArrayOutput)
}

type GetServiceHealthResultServiceOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthResultService)(nil)).Elem()
}

func (o GetServiceHealthResultServiceOutput) ToGetServiceHealthResultServiceOutput() GetServiceHealthResultServiceOutput {
	return o
}

func (o GetServiceHealthResultServiceOutput) ToGetServiceHealthResultServiceOutputWithContext(ctx context.Context) GetServiceHealthResultServiceOutput {
	return o
}

// The address of this instance.
func (o GetServiceHealthResultServiceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of this health-check.
func (o GetServiceHealthResultServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) string { return v.Id }).(pulumi.StringOutput)
}

// Service metadata tag information, if any.
func (o GetServiceHealthResultServiceOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

// The service name to select.
func (o GetServiceHealthResultServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) string { return v.Name }).(pulumi.StringOutput)
}

// The port of this instance.
func (o GetServiceHealthResultServiceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) int { return v.Port }).(pulumi.IntOutput)
}

// The list of tags associated with this instance.
func (o GetServiceHealthResultServiceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceHealthResultService) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetServiceHealthResultServiceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthResultServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthResultService)(nil)).Elem()
}

func (o GetServiceHealthResultServiceArrayOutput) ToGetServiceHealthResultServiceArrayOutput() GetServiceHealthResultServiceArrayOutput {
	return o
}

func (o GetServiceHealthResultServiceArrayOutput) ToGetServiceHealthResultServiceArrayOutputWithContext(ctx context.Context) GetServiceHealthResultServiceArrayOutput {
	return o
}

func (o GetServiceHealthResultServiceArrayOutput) Index(i pulumi.IntInput) GetServiceHealthResultServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthResultService {
		return vs[0].([]GetServiceHealthResultService)[vs[1].(int)]
	}).(GetServiceHealthResultServiceOutput)
}

type GetServiceQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter *string `pulumi:"datacenter"`
	// The namespace to lookup the service.
	Namespace *string           `pulumi:"namespace"`
	Near      *string           `pulumi:"near"`
	NodeMeta  map[string]string `pulumi:"nodeMeta"`
	Partition *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetServiceQueryOptionInput is an input type that accepts GetServiceQueryOptionArgs and GetServiceQueryOptionOutput values.
// You can construct a concrete instance of `GetServiceQueryOptionInput` via:
//
//	GetServiceQueryOptionArgs{...}
type GetServiceQueryOptionInput interface {
	pulumi.Input

	ToGetServiceQueryOptionOutput() GetServiceQueryOptionOutput
	ToGetServiceQueryOptionOutputWithContext(context.Context) GetServiceQueryOptionOutput
}

type GetServiceQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// The namespace to lookup the service.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Near      pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta  pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetServiceQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceQueryOption)(nil)).Elem()
}

func (i GetServiceQueryOptionArgs) ToGetServiceQueryOptionOutput() GetServiceQueryOptionOutput {
	return i.ToGetServiceQueryOptionOutputWithContext(context.Background())
}

func (i GetServiceQueryOptionArgs) ToGetServiceQueryOptionOutputWithContext(ctx context.Context) GetServiceQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceQueryOptionOutput)
}

// GetServiceQueryOptionArrayInput is an input type that accepts GetServiceQueryOptionArray and GetServiceQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetServiceQueryOptionArrayInput` via:
//
//	GetServiceQueryOptionArray{ GetServiceQueryOptionArgs{...} }
type GetServiceQueryOptionArrayInput interface {
	pulumi.Input

	ToGetServiceQueryOptionArrayOutput() GetServiceQueryOptionArrayOutput
	ToGetServiceQueryOptionArrayOutputWithContext(context.Context) GetServiceQueryOptionArrayOutput
}

type GetServiceQueryOptionArray []GetServiceQueryOptionInput

func (GetServiceQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceQueryOption)(nil)).Elem()
}

func (i GetServiceQueryOptionArray) ToGetServiceQueryOptionArrayOutput() GetServiceQueryOptionArrayOutput {
	return i.ToGetServiceQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetServiceQueryOptionArray) ToGetServiceQueryOptionArrayOutputWithContext(ctx context.Context) GetServiceQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceQueryOptionArrayOutput)
}

type GetServiceQueryOptionOutput struct{ *pulumi.OutputState }

func (GetServiceQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceQueryOption)(nil)).Elem()
}

func (o GetServiceQueryOptionOutput) ToGetServiceQueryOptionOutput() GetServiceQueryOptionOutput {
	return o
}

func (o GetServiceQueryOptionOutput) ToGetServiceQueryOptionOutputWithContext(ctx context.Context) GetServiceQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetServiceQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to.
func (o GetServiceQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// The namespace to lookup the service.
func (o GetServiceQueryOptionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetServiceQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetServiceQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetServiceQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetServiceQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetServiceQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetServiceQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetServiceQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetServiceQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetServiceQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceQueryOption)(nil)).Elem()
}

func (o GetServiceQueryOptionArrayOutput) ToGetServiceQueryOptionArrayOutput() GetServiceQueryOptionArrayOutput {
	return o
}

func (o GetServiceQueryOptionArrayOutput) ToGetServiceQueryOptionArrayOutputWithContext(ctx context.Context) GetServiceQueryOptionArrayOutput {
	return o
}

func (o GetServiceQueryOptionArrayOutput) Index(i pulumi.IntInput) GetServiceQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceQueryOption {
		return vs[0].([]GetServiceQueryOption)[vs[1].(int)]
	}).(GetServiceQueryOptionOutput)
}

type GetServiceService struct {
	Address           string            `pulumi:"address"`
	CreateIndex       string            `pulumi:"createIndex"`
	EnableTagOverride string            `pulumi:"enableTagOverride"`
	Id                string            `pulumi:"id"`
	Meta              map[string]string `pulumi:"meta"`
	ModifyIndex       string            `pulumi:"modifyIndex"`
	// The service name to select.
	Name        string `pulumi:"name"`
	NodeAddress string `pulumi:"nodeAddress"`
	// The Node ID of the Consul agent advertising the service.
	// * [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
	//   meta data tag information, if any.
	// * [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
	//   name of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
	//   The IP address of the service.  If the `ServiceAddress` in the Consul catalog
	//   is empty, this value is automatically populated with the `nodeAddress` (the
	//   `Address` in the Consul Catalog).
	// * [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
	//   Whether service tags can be overridden on this service.
	// * [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
	//   unique service instance identifier.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
	//   name of the service.
	// * [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
	//   Port number of the service.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	// * [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
	//   List of tags for the service.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
	//   data tag information, if any.
	NodeId          string            `pulumi:"nodeId"`
	NodeMeta        map[string]string `pulumi:"nodeMeta"`
	NodeName        string            `pulumi:"nodeName"`
	Port            string            `pulumi:"port"`
	TaggedAddresses map[string]string `pulumi:"taggedAddresses"`
	Tags            []string          `pulumi:"tags"`
}

// GetServiceServiceInput is an input type that accepts GetServiceServiceArgs and GetServiceServiceOutput values.
// You can construct a concrete instance of `GetServiceServiceInput` via:
//
//	GetServiceServiceArgs{...}
type GetServiceServiceInput interface {
	pulumi.Input

	ToGetServiceServiceOutput() GetServiceServiceOutput
	ToGetServiceServiceOutputWithContext(context.Context) GetServiceServiceOutput
}

type GetServiceServiceArgs struct {
	Address           pulumi.StringInput    `pulumi:"address"`
	CreateIndex       pulumi.StringInput    `pulumi:"createIndex"`
	EnableTagOverride pulumi.StringInput    `pulumi:"enableTagOverride"`
	Id                pulumi.StringInput    `pulumi:"id"`
	Meta              pulumi.StringMapInput `pulumi:"meta"`
	ModifyIndex       pulumi.StringInput    `pulumi:"modifyIndex"`
	// The service name to select.
	Name        pulumi.StringInput `pulumi:"name"`
	NodeAddress pulumi.StringInput `pulumi:"nodeAddress"`
	// The Node ID of the Consul agent advertising the service.
	// * [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
	//   meta data tag information, if any.
	// * [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
	//   name of the Consul node.
	// * [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
	//   The IP address of the service.  If the `ServiceAddress` in the Consul catalog
	//   is empty, this value is automatically populated with the `nodeAddress` (the
	//   `Address` in the Consul Catalog).
	// * [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
	//   Whether service tags can be overridden on this service.
	// * [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
	//   unique service instance identifier.
	// * [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
	//   name of the service.
	// * [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
	//   Port number of the service.
	// * [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
	//   List of explicit LAN and WAN IP addresses for the agent.
	// * [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
	//   List of tags for the service.
	// * [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
	//   data tag information, if any.
	NodeId          pulumi.StringInput      `pulumi:"nodeId"`
	NodeMeta        pulumi.StringMapInput   `pulumi:"nodeMeta"`
	NodeName        pulumi.StringInput      `pulumi:"nodeName"`
	Port            pulumi.StringInput      `pulumi:"port"`
	TaggedAddresses pulumi.StringMapInput   `pulumi:"taggedAddresses"`
	Tags            pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetServiceServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceService)(nil)).Elem()
}

func (i GetServiceServiceArgs) ToGetServiceServiceOutput() GetServiceServiceOutput {
	return i.ToGetServiceServiceOutputWithContext(context.Background())
}

func (i GetServiceServiceArgs) ToGetServiceServiceOutputWithContext(ctx context.Context) GetServiceServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceServiceOutput)
}

// GetServiceServiceArrayInput is an input type that accepts GetServiceServiceArray and GetServiceServiceArrayOutput values.
// You can construct a concrete instance of `GetServiceServiceArrayInput` via:
//
//	GetServiceServiceArray{ GetServiceServiceArgs{...} }
type GetServiceServiceArrayInput interface {
	pulumi.Input

	ToGetServiceServiceArrayOutput() GetServiceServiceArrayOutput
	ToGetServiceServiceArrayOutputWithContext(context.Context) GetServiceServiceArrayOutput
}

type GetServiceServiceArray []GetServiceServiceInput

func (GetServiceServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceService)(nil)).Elem()
}

func (i GetServiceServiceArray) ToGetServiceServiceArrayOutput() GetServiceServiceArrayOutput {
	return i.ToGetServiceServiceArrayOutputWithContext(context.Background())
}

func (i GetServiceServiceArray) ToGetServiceServiceArrayOutputWithContext(ctx context.Context) GetServiceServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceServiceArrayOutput)
}

type GetServiceServiceOutput struct{ *pulumi.OutputState }

func (GetServiceServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceService)(nil)).Elem()
}

func (o GetServiceServiceOutput) ToGetServiceServiceOutput() GetServiceServiceOutput {
	return o
}

func (o GetServiceServiceOutput) ToGetServiceServiceOutputWithContext(ctx context.Context) GetServiceServiceOutput {
	return o
}

func (o GetServiceServiceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) CreateIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.CreateIndex }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) EnableTagOverride() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.EnableTagOverride }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceService) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o GetServiceServiceOutput) ModifyIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.ModifyIndex }).(pulumi.StringOutput)
}

// The service name to select.
func (o GetServiceServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) NodeAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.NodeAddress }).(pulumi.StringOutput)
}

// The Node ID of the Consul agent advertising the service.
//   - [`nodeMeta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Node
//     meta data tag information, if any.
//   - [`nodeName`](https://www.consul.io/docs/agent/http/catalog.html#Node) - The
//     name of the Consul node.
//   - [`address`](https://www.consul.io/docs/agent/http/catalog.html#ServiceAddress) -
//     The IP address of the service.  If the `ServiceAddress` in the Consul catalog
//     is empty, this value is automatically populated with the `nodeAddress` (the
//     `Address` in the Consul Catalog).
//   - [`enableTagOverride`](https://www.consul.io/docs/agent/http/catalog.html#ServiceEnableTagOverride) -
//     Whether service tags can be overridden on this service.
//   - [`id`](https://www.consul.io/docs/agent/http/catalog.html#ServiceID) - A
//     unique service instance identifier.
//   - [`name`](https://www.consul.io/docs/agent/http/catalog.html#ServiceName) - The
//     name of the service.
//   - [`port`](https://www.consul.io/docs/agent/http/catalog.html#ServicePort) -
//     Port number of the service.
//   - [`taggedAddresses`](https://www.consul.io/docs/agent/http/catalog.html#TaggedAddresses) -
//     List of explicit LAN and WAN IP addresses for the agent.
//   - [`tags`](https://www.consul.io/docs/agent/http/catalog.html#ServiceTags) -
//     List of tags for the service.
//   - [`meta`](https://www.consul.io/docs/agent/http/catalog.html#Meta) - Service meta
//     data tag information, if any.
func (o GetServiceServiceOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceService) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetServiceServiceOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.NodeName }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceService) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetServiceServiceOutput) TaggedAddresses() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServiceService) map[string]string { return v.TaggedAddresses }).(pulumi.StringMapOutput)
}

func (o GetServiceServiceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceService) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetServiceServiceArrayOutput struct{ *pulumi.OutputState }

func (GetServiceServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceService)(nil)).Elem()
}

func (o GetServiceServiceArrayOutput) ToGetServiceServiceArrayOutput() GetServiceServiceArrayOutput {
	return o
}

func (o GetServiceServiceArrayOutput) ToGetServiceServiceArrayOutputWithContext(ctx context.Context) GetServiceServiceArrayOutput {
	return o
}

func (o GetServiceServiceArrayOutput) Index(i pulumi.IntInput) GetServiceServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceService {
		return vs[0].([]GetServiceService)[vs[1].(int)]
	}).(GetServiceServiceOutput)
}

type GetServicesQueryOption struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale *bool `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter *string `pulumi:"datacenter"`
	// The namespace to lookup the services.
	Namespace *string           `pulumi:"namespace"`
	Near      *string           `pulumi:"near"`
	NodeMeta  map[string]string `pulumi:"nodeMeta"`
	Partition *string           `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent *bool `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token *string `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex *int `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime *string `pulumi:"waitTime"`
}

// GetServicesQueryOptionInput is an input type that accepts GetServicesQueryOptionArgs and GetServicesQueryOptionOutput values.
// You can construct a concrete instance of `GetServicesQueryOptionInput` via:
//
//	GetServicesQueryOptionArgs{...}
type GetServicesQueryOptionInput interface {
	pulumi.Input

	ToGetServicesQueryOptionOutput() GetServicesQueryOptionOutput
	ToGetServicesQueryOptionOutputWithContext(context.Context) GetServicesQueryOptionOutput
}

type GetServicesQueryOptionArgs struct {
	// When `true`, the default, allow responses from
	// Consul servers that are followers.
	AllowStale pulumi.BoolPtrInput `pulumi:"allowStale"`
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// The namespace to lookup the services.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Near      pulumi.StringPtrInput `pulumi:"near"`
	NodeMeta  pulumi.StringMapInput `pulumi:"nodeMeta"`
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	// When `true` force the client to perform a
	// read on at least quorum servers and verify the result is the same.  Defaults
	// to `false`.
	RequireConsistent pulumi.BoolPtrInput `pulumi:"requireConsistent"`
	// Specify the Consul ACL token to use when performing the
	// request.  This defaults to the same API token configured by the `consul`
	// provider but may be overridden if necessary.
	Token pulumi.StringPtrInput `pulumi:"token"`
	// Index number used to enable blocking queries.
	WaitIndex pulumi.IntPtrInput `pulumi:"waitIndex"`
	// Max time the client should wait for a blocking query
	// to return.
	WaitTime pulumi.StringPtrInput `pulumi:"waitTime"`
}

func (GetServicesQueryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesQueryOption)(nil)).Elem()
}

func (i GetServicesQueryOptionArgs) ToGetServicesQueryOptionOutput() GetServicesQueryOptionOutput {
	return i.ToGetServicesQueryOptionOutputWithContext(context.Background())
}

func (i GetServicesQueryOptionArgs) ToGetServicesQueryOptionOutputWithContext(ctx context.Context) GetServicesQueryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesQueryOptionOutput)
}

// GetServicesQueryOptionArrayInput is an input type that accepts GetServicesQueryOptionArray and GetServicesQueryOptionArrayOutput values.
// You can construct a concrete instance of `GetServicesQueryOptionArrayInput` via:
//
//	GetServicesQueryOptionArray{ GetServicesQueryOptionArgs{...} }
type GetServicesQueryOptionArrayInput interface {
	pulumi.Input

	ToGetServicesQueryOptionArrayOutput() GetServicesQueryOptionArrayOutput
	ToGetServicesQueryOptionArrayOutputWithContext(context.Context) GetServicesQueryOptionArrayOutput
}

type GetServicesQueryOptionArray []GetServicesQueryOptionInput

func (GetServicesQueryOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesQueryOption)(nil)).Elem()
}

func (i GetServicesQueryOptionArray) ToGetServicesQueryOptionArrayOutput() GetServicesQueryOptionArrayOutput {
	return i.ToGetServicesQueryOptionArrayOutputWithContext(context.Background())
}

func (i GetServicesQueryOptionArray) ToGetServicesQueryOptionArrayOutputWithContext(ctx context.Context) GetServicesQueryOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServicesQueryOptionArrayOutput)
}

type GetServicesQueryOptionOutput struct{ *pulumi.OutputState }

func (GetServicesQueryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesQueryOption)(nil)).Elem()
}

func (o GetServicesQueryOptionOutput) ToGetServicesQueryOptionOutput() GetServicesQueryOptionOutput {
	return o
}

func (o GetServicesQueryOptionOutput) ToGetServicesQueryOptionOutputWithContext(ctx context.Context) GetServicesQueryOptionOutput {
	return o
}

// When `true`, the default, allow responses from
// Consul servers that are followers.
func (o GetServicesQueryOptionOutput) AllowStale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *bool { return v.AllowStale }).(pulumi.BoolPtrOutput)
}

// The Consul datacenter to query.  Defaults to the
// same value found in `queryOptions` parameter specified below, or if that is
// empty, the `datacenter` value found in the Consul agent that this provider is
// configured to talk to.
func (o GetServicesQueryOptionOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// The namespace to lookup the services.
func (o GetServicesQueryOptionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetServicesQueryOptionOutput) Near() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.Near }).(pulumi.StringPtrOutput)
}

func (o GetServicesQueryOptionOutput) NodeMeta() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetServicesQueryOption) map[string]string { return v.NodeMeta }).(pulumi.StringMapOutput)
}

func (o GetServicesQueryOptionOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// When `true` force the client to perform a
// read on at least quorum servers and verify the result is the same.  Defaults
// to `false`.
func (o GetServicesQueryOptionOutput) RequireConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *bool { return v.RequireConsistent }).(pulumi.BoolPtrOutput)
}

// Specify the Consul ACL token to use when performing the
// request.  This defaults to the same API token configured by the `consul`
// provider but may be overridden if necessary.
func (o GetServicesQueryOptionOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// Index number used to enable blocking queries.
func (o GetServicesQueryOptionOutput) WaitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *int { return v.WaitIndex }).(pulumi.IntPtrOutput)
}

// Max time the client should wait for a blocking query
// to return.
func (o GetServicesQueryOptionOutput) WaitTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesQueryOption) *string { return v.WaitTime }).(pulumi.StringPtrOutput)
}

type GetServicesQueryOptionArrayOutput struct{ *pulumi.OutputState }

func (GetServicesQueryOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServicesQueryOption)(nil)).Elem()
}

func (o GetServicesQueryOptionArrayOutput) ToGetServicesQueryOptionArrayOutput() GetServicesQueryOptionArrayOutput {
	return o
}

func (o GetServicesQueryOptionArrayOutput) ToGetServicesQueryOptionArrayOutputWithContext(ctx context.Context) GetServicesQueryOptionArrayOutput {
	return o
}

func (o GetServicesQueryOptionArrayOutput) Index(i pulumi.IntInput) GetServicesQueryOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServicesQueryOption {
		return vs[0].([]GetServicesQueryOption)[vs[1].(int)]
	}).(GetServicesQueryOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclAuthMethodNamespaceRuleInput)(nil)).Elem(), AclAuthMethodNamespaceRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclAuthMethodNamespaceRuleArrayInput)(nil)).Elem(), AclAuthMethodNamespaceRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclBindingRuleBindVarsInput)(nil)).Elem(), AclBindingRuleBindVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclBindingRuleBindVarsPtrInput)(nil)).Elem(), AclBindingRuleBindVarsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleNodeIdentityInput)(nil)).Elem(), AclRoleNodeIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleNodeIdentityArrayInput)(nil)).Elem(), AclRoleNodeIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleServiceIdentityInput)(nil)).Elem(), AclRoleServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleServiceIdentityArrayInput)(nil)).Elem(), AclRoleServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleTemplatedPolicyInput)(nil)).Elem(), AclRoleTemplatedPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleTemplatedPolicyArrayInput)(nil)).Elem(), AclRoleTemplatedPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleTemplatedPolicyTemplateVariablesInput)(nil)).Elem(), AclRoleTemplatedPolicyTemplateVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRoleTemplatedPolicyTemplateVariablesPtrInput)(nil)).Elem(), AclRoleTemplatedPolicyTemplateVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenNodeIdentityInput)(nil)).Elem(), AclTokenNodeIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenNodeIdentityArrayInput)(nil)).Elem(), AclTokenNodeIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenServiceIdentityInput)(nil)).Elem(), AclTokenServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenServiceIdentityArrayInput)(nil)).Elem(), AclTokenServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenTemplatedPolicyInput)(nil)).Elem(), AclTokenTemplatedPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenTemplatedPolicyArrayInput)(nil)).Elem(), AclTokenTemplatedPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenTemplatedPolicyTemplateVariablesInput)(nil)).Elem(), AclTokenTemplatedPolicyTemplateVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenTemplatedPolicyTemplateVariablesPtrInput)(nil)).Elem(), AclTokenTemplatedPolicyTemplateVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntryServiceInput)(nil)).Elem(), CatalogEntryServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntryServiceArrayInput)(nil)).Elem(), CatalogEntryServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsDestinationInput)(nil)).Elem(), ConfigEntryServiceDefaultsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsDestinationArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsEnvoyExtensionInput)(nil)).Elem(), ConfigEntryServiceDefaultsEnvoyExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsEnvoyExtensionArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsEnvoyExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsExposeInput)(nil)).Elem(), ConfigEntryServiceDefaultsExposeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsExposeArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsExposeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsExposePathInput)(nil)).Elem(), ConfigEntryServiceDefaultsExposePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsExposePathArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsExposePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsMeshGatewayInput)(nil)).Elem(), ConfigEntryServiceDefaultsMeshGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsMeshGatewayArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsMeshGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsTransparentProxyInput)(nil)).Elem(), ConfigEntryServiceDefaultsTransparentProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsTransparentProxyArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsTransparentProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayInput)(nil)).Elem(), ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderVerifyClaimInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtProviderVerifyClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsJwtProviderVerifyClaimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourceInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourceArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpHeaderInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayInput)(nil)).Elem(), ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverFailoverInput)(nil)).Elem(), ConfigEntryServiceResolverFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverFailoverArrayInput)(nil)).Elem(), ConfigEntryServiceResolverFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverFailoverTargetInput)(nil)).Elem(), ConfigEntryServiceResolverFailoverTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverFailoverTargetArrayInput)(nil)).Elem(), ConfigEntryServiceResolverFailoverTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerArrayInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerHashPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyArrayInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerHashPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerLeastRequestConfigInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerRingHashConfigInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerRingHashConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayInput)(nil)).Elem(), ConfigEntryServiceResolverLoadBalancerRingHashConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverRedirectInput)(nil)).Elem(), ConfigEntryServiceResolverRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverRedirectArrayInput)(nil)).Elem(), ConfigEntryServiceResolverRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverSubsetInput)(nil)).Elem(), ConfigEntryServiceResolverSubsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceResolverSubsetArrayInput)(nil)).Elem(), ConfigEntryServiceResolverSubsetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteInput)(nil)).Elem(), ConfigEntryServiceRouterRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteArrayInput)(nil)).Elem(), ConfigEntryServiceRouterRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationPtrInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationRequestHeadersInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationRequestHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationResponseHeadersInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrInput)(nil)).Elem(), ConfigEntryServiceRouterRouteDestinationResponseHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchPtrInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpPtrInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpHeaderInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpHeaderArrayInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpQueryParamInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayInput)(nil)).Elem(), ConfigEntryServiceRouterRouteMatchHttpQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitArrayInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitRequestHeadersInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitRequestHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitRequestHeadersPtrInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitRequestHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitResponseHeadersInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitResponseHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryServiceSplitterSplitResponseHeadersPtrInput)(nil)).Elem(), ConfigEntryServiceSplitterSplitResponseHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyPrefixSubkeyCollectionInput)(nil)).Elem(), KeyPrefixSubkeyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyPrefixSubkeyCollectionArrayInput)(nil)).Elem(), KeyPrefixSubkeyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeysKeyInput)(nil)).Elem(), KeysKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeysKeyArrayInput)(nil)).Elem(), KeysKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryDnsInput)(nil)).Elem(), PreparedQueryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryDnsPtrInput)(nil)).Elem(), PreparedQueryDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryFailoverInput)(nil)).Elem(), PreparedQueryFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryFailoverPtrInput)(nil)).Elem(), PreparedQueryFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryFailoverTargetInput)(nil)).Elem(), PreparedQueryFailoverTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryFailoverTargetArrayInput)(nil)).Elem(), PreparedQueryFailoverTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryTemplateInput)(nil)).Elem(), PreparedQueryTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreparedQueryTemplatePtrInput)(nil)).Elem(), PreparedQueryTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthJwtInput)(nil)).Elem(), ProviderAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthJwtPtrInput)(nil)).Elem(), ProviderAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderHeaderInput)(nil)).Elem(), ProviderHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderHeaderArrayInput)(nil)).Elem(), ProviderHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCheckInput)(nil)).Elem(), ServiceCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCheckArrayInput)(nil)).Elem(), ServiceCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCheckHeaderInput)(nil)).Elem(), ServiceCheckHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCheckHeaderArrayInput)(nil)).Elem(), ServiceCheckHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclAuthMethodNamespaceRuleInput)(nil)).Elem(), GetAclAuthMethodNamespaceRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclAuthMethodNamespaceRuleArrayInput)(nil)).Elem(), GetAclAuthMethodNamespaceRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleNodeIdentityInput)(nil)).Elem(), GetAclRoleNodeIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleNodeIdentityArrayInput)(nil)).Elem(), GetAclRoleNodeIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRolePolicyInput)(nil)).Elem(), GetAclRolePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRolePolicyArrayInput)(nil)).Elem(), GetAclRolePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleServiceIdentityInput)(nil)).Elem(), GetAclRoleServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleServiceIdentityArrayInput)(nil)).Elem(), GetAclRoleServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleTemplatedPolicyInput)(nil)).Elem(), GetAclRoleTemplatedPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleTemplatedPolicyArrayInput)(nil)).Elem(), GetAclRoleTemplatedPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleTemplatedPolicyTemplateVariableInput)(nil)).Elem(), GetAclRoleTemplatedPolicyTemplateVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclRoleTemplatedPolicyTemplateVariableArrayInput)(nil)).Elem(), GetAclRoleTemplatedPolicyTemplateVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenNodeIdentityInput)(nil)).Elem(), GetAclTokenNodeIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenNodeIdentityArrayInput)(nil)).Elem(), GetAclTokenNodeIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenPolicyInput)(nil)).Elem(), GetAclTokenPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenPolicyArrayInput)(nil)).Elem(), GetAclTokenPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenRoleInput)(nil)).Elem(), GetAclTokenRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenRoleArrayInput)(nil)).Elem(), GetAclTokenRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenServiceIdentityInput)(nil)).Elem(), GetAclTokenServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenServiceIdentityArrayInput)(nil)).Elem(), GetAclTokenServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenTemplatedPolicyInput)(nil)).Elem(), GetAclTokenTemplatedPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenTemplatedPolicyArrayInput)(nil)).Elem(), GetAclTokenTemplatedPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenTemplatedPolicyTemplateVariableInput)(nil)).Elem(), GetAclTokenTemplatedPolicyTemplateVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclTokenTemplatedPolicyTemplateVariableArrayInput)(nil)).Elem(), GetAclTokenTemplatedPolicyTemplateVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutopilotHealthServerInput)(nil)).Elem(), GetAutopilotHealthServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutopilotHealthServerArrayInput)(nil)).Elem(), GetAutopilotHealthServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogNodesNodeInput)(nil)).Elem(), GetCatalogNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogNodesNodeArrayInput)(nil)).Elem(), GetCatalogNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogNodesQueryOptionInput)(nil)).Elem(), GetCatalogNodesQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogNodesQueryOptionArrayInput)(nil)).Elem(), GetCatalogNodesQueryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServiceQueryOptionInput)(nil)).Elem(), GetCatalogServiceQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServiceQueryOptionArrayInput)(nil)).Elem(), GetCatalogServiceQueryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServiceServiceInput)(nil)).Elem(), GetCatalogServiceServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServiceServiceArrayInput)(nil)).Elem(), GetCatalogServiceServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServicesQueryOptionInput)(nil)).Elem(), GetCatalogServicesQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCatalogServicesQueryOptionArrayInput)(nil)).Elem(), GetCatalogServicesQueryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyPrefixSubkeyCollectionInput)(nil)).Elem(), GetKeyPrefixSubkeyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyPrefixSubkeyCollectionArrayInput)(nil)).Elem(), GetKeyPrefixSubkeyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyInput)(nil)).Elem(), GetKeysKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeysKeyArrayInput)(nil)).Elem(), GetKeysKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAreaMembersMemberInput)(nil)).Elem(), GetNetworkAreaMembersMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAreaMembersMemberArrayInput)(nil)).Elem(), GetNetworkAreaMembersMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeInput)(nil)).Elem(), GetNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeArrayInput)(nil)).Elem(), GetNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesQueryOptionInput)(nil)).Elem(), GetNodesQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesQueryOptionArrayInput)(nil)).Elem(), GetNodesQueryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringsPeerInput)(nil)).Elem(), GetPeeringsPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringsPeerArrayInput)(nil)).Elem(), GetPeeringsPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultInput)(nil)).Elem(), GetServiceHealthResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultArrayInput)(nil)).Elem(), GetServiceHealthResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultCheckInput)(nil)).Elem(), GetServiceHealthResultCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultCheckArrayInput)(nil)).Elem(), GetServiceHealthResultCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultNodeInput)(nil)).Elem(), GetServiceHealthResultNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultNodeArrayInput)(nil)).Elem(), GetServiceHealthResultNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultServiceInput)(nil)).Elem(), GetServiceHealthResultServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthResultServiceArrayInput)(nil)).Elem(), GetServiceHealthResultServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceQueryOptionInput)(nil)).Elem(), GetServiceQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceQueryOptionArrayInput)(nil)).Elem(), GetServiceQueryOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceServiceInput)(nil)).Elem(), GetServiceServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceServiceArrayInput)(nil)).Elem(), GetServiceServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesQueryOptionInput)(nil)).Elem(), GetServicesQueryOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServicesQueryOptionArrayInput)(nil)).Elem(), GetServicesQueryOptionArray{})
	pulumi.RegisterOutputType(AclAuthMethodNamespaceRuleOutput{})
	pulumi.RegisterOutputType(AclAuthMethodNamespaceRuleArrayOutput{})
	pulumi.RegisterOutputType(AclBindingRuleBindVarsOutput{})
	pulumi.RegisterOutputType(AclBindingRuleBindVarsPtrOutput{})
	pulumi.RegisterOutputType(AclRoleNodeIdentityOutput{})
	pulumi.RegisterOutputType(AclRoleNodeIdentityArrayOutput{})
	pulumi.RegisterOutputType(AclRoleServiceIdentityOutput{})
	pulumi.RegisterOutputType(AclRoleServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(AclRoleTemplatedPolicyOutput{})
	pulumi.RegisterOutputType(AclRoleTemplatedPolicyArrayOutput{})
	pulumi.RegisterOutputType(AclRoleTemplatedPolicyTemplateVariablesOutput{})
	pulumi.RegisterOutputType(AclRoleTemplatedPolicyTemplateVariablesPtrOutput{})
	pulumi.RegisterOutputType(AclTokenNodeIdentityOutput{})
	pulumi.RegisterOutputType(AclTokenNodeIdentityArrayOutput{})
	pulumi.RegisterOutputType(AclTokenServiceIdentityOutput{})
	pulumi.RegisterOutputType(AclTokenServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(AclTokenTemplatedPolicyOutput{})
	pulumi.RegisterOutputType(AclTokenTemplatedPolicyArrayOutput{})
	pulumi.RegisterOutputType(AclTokenTemplatedPolicyTemplateVariablesOutput{})
	pulumi.RegisterOutputType(AclTokenTemplatedPolicyTemplateVariablesPtrOutput{})
	pulumi.RegisterOutputType(CatalogEntryServiceOutput{})
	pulumi.RegisterOutputType(CatalogEntryServiceArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsDestinationOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsDestinationArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsEnvoyExtensionOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsEnvoyExtensionArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsExposeOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsExposeArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsExposePathOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsExposePathArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsMeshGatewayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsMeshGatewayArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsTransparentProxyOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsTransparentProxyArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultLimitArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultMeshGatewayArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigDefaultPassiveHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideLimitArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverrideMeshGatewayArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceDefaultsUpstreamConfigOverridePassiveHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtProviderOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtProviderArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtProviderVerifyClaimOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsJwtProviderVerifyClaimArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourceOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourceArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionHttpOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionHttpArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceIntentionsSourcePermissionHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverFailoverOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverFailoverArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverFailoverTargetOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverFailoverTargetArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerHashPolicyOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerHashPolicyArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerHashPolicyCookieConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerLeastRequestConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerRingHashConfigOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverLoadBalancerRingHashConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverRedirectOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverRedirectArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverSubsetOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceResolverSubsetArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationRequestHeadersOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationRequestHeadersPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationResponseHeadersOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteDestinationResponseHeadersPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpHeaderOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpQueryParamOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceRouterRouteMatchHttpQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitRequestHeadersOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitRequestHeadersPtrOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitResponseHeadersOutput{})
	pulumi.RegisterOutputType(ConfigEntryServiceSplitterSplitResponseHeadersPtrOutput{})
	pulumi.RegisterOutputType(KeyPrefixSubkeyCollectionOutput{})
	pulumi.RegisterOutputType(KeyPrefixSubkeyCollectionArrayOutput{})
	pulumi.RegisterOutputType(KeysKeyOutput{})
	pulumi.RegisterOutputType(KeysKeyArrayOutput{})
	pulumi.RegisterOutputType(PreparedQueryDnsOutput{})
	pulumi.RegisterOutputType(PreparedQueryDnsPtrOutput{})
	pulumi.RegisterOutputType(PreparedQueryFailoverOutput{})
	pulumi.RegisterOutputType(PreparedQueryFailoverPtrOutput{})
	pulumi.RegisterOutputType(PreparedQueryFailoverTargetOutput{})
	pulumi.RegisterOutputType(PreparedQueryFailoverTargetArrayOutput{})
	pulumi.RegisterOutputType(PreparedQueryTemplateOutput{})
	pulumi.RegisterOutputType(PreparedQueryTemplatePtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthJwtOutput{})
	pulumi.RegisterOutputType(ProviderAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(ProviderHeaderOutput{})
	pulumi.RegisterOutputType(ProviderHeaderArrayOutput{})
	pulumi.RegisterOutputType(ServiceCheckOutput{})
	pulumi.RegisterOutputType(ServiceCheckArrayOutput{})
	pulumi.RegisterOutputType(ServiceCheckHeaderOutput{})
	pulumi.RegisterOutputType(ServiceCheckHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAclAuthMethodNamespaceRuleOutput{})
	pulumi.RegisterOutputType(GetAclAuthMethodNamespaceRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAclRoleNodeIdentityOutput{})
	pulumi.RegisterOutputType(GetAclRoleNodeIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetAclRolePolicyOutput{})
	pulumi.RegisterOutputType(GetAclRolePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAclRoleServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetAclRoleServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetAclRoleTemplatedPolicyOutput{})
	pulumi.RegisterOutputType(GetAclRoleTemplatedPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAclRoleTemplatedPolicyTemplateVariableOutput{})
	pulumi.RegisterOutputType(GetAclRoleTemplatedPolicyTemplateVariableArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenNodeIdentityOutput{})
	pulumi.RegisterOutputType(GetAclTokenNodeIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenPolicyOutput{})
	pulumi.RegisterOutputType(GetAclTokenPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenRoleOutput{})
	pulumi.RegisterOutputType(GetAclTokenRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetAclTokenServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenTemplatedPolicyOutput{})
	pulumi.RegisterOutputType(GetAclTokenTemplatedPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAclTokenTemplatedPolicyTemplateVariableOutput{})
	pulumi.RegisterOutputType(GetAclTokenTemplatedPolicyTemplateVariableArrayOutput{})
	pulumi.RegisterOutputType(GetAutopilotHealthServerOutput{})
	pulumi.RegisterOutputType(GetAutopilotHealthServerArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogNodesNodeOutput{})
	pulumi.RegisterOutputType(GetCatalogNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogNodesQueryOptionOutput{})
	pulumi.RegisterOutputType(GetCatalogNodesQueryOptionArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogServiceQueryOptionOutput{})
	pulumi.RegisterOutputType(GetCatalogServiceQueryOptionArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogServiceServiceOutput{})
	pulumi.RegisterOutputType(GetCatalogServiceServiceArrayOutput{})
	pulumi.RegisterOutputType(GetCatalogServicesQueryOptionOutput{})
	pulumi.RegisterOutputType(GetCatalogServicesQueryOptionArrayOutput{})
	pulumi.RegisterOutputType(GetKeyPrefixSubkeyCollectionOutput{})
	pulumi.RegisterOutputType(GetKeyPrefixSubkeyCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeyOutput{})
	pulumi.RegisterOutputType(GetKeysKeyArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAreaMembersMemberOutput{})
	pulumi.RegisterOutputType(GetNetworkAreaMembersMemberArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeOutput{})
	pulumi.RegisterOutputType(GetNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetNodesQueryOptionOutput{})
	pulumi.RegisterOutputType(GetNodesQueryOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringsPeerOutput{})
	pulumi.RegisterOutputType(GetPeeringsPeerArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultCheckOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultCheckArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultNodeOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultNodeArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultServiceOutput{})
	pulumi.RegisterOutputType(GetServiceHealthResultServiceArrayOutput{})
	pulumi.RegisterOutputType(GetServiceQueryOptionOutput{})
	pulumi.RegisterOutputType(GetServiceQueryOptionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceServiceOutput{})
	pulumi.RegisterOutputType(GetServiceServiceArrayOutput{})
	pulumi.RegisterOutputType(GetServicesQueryOptionOutput{})
	pulumi.RegisterOutputType(GetServicesQueryOptionArrayOutput{})
}
