// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package consul

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Starting with Consul 1.5.0, the .AclRole can be used to managed Consul ACL roles.
//
//
//
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/acl_role.markdown.
type AclRole struct {
	pulumi.CustomResourceState

	// A free form human readable description of the role.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the ACL role.
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace to create the role within.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// The list of policies that should be applied to the role.
	Policies pulumi.StringArrayOutput `pulumi:"policies"`
	// The list of service identities that should
	// be applied to the role.
	ServiceIdentities AclRoleServiceIdentityArrayOutput `pulumi:"serviceIdentities"`
}

// NewAclRole registers a new resource with the given unique name, arguments, and options.
func NewAclRole(ctx *pulumi.Context,
	name string, args *AclRoleArgs, opts ...pulumi.ResourceOption) (*AclRole, error) {
	if args == nil {
		args = &AclRoleArgs{}
	}
	var resource AclRole
	err := ctx.RegisterResource("consul:index/aclRole:AclRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAclRole gets an existing AclRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAclRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AclRoleState, opts ...pulumi.ResourceOption) (*AclRole, error) {
	var resource AclRole
	err := ctx.ReadResource("consul:index/aclRole:AclRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AclRole resources.
type aclRoleState struct {
	// A free form human readable description of the role.
	Description *string `pulumi:"description"`
	// The name of the ACL role.
	Name *string `pulumi:"name"`
	// The namespace to create the role within.
	Namespace *string `pulumi:"namespace"`
	// The list of policies that should be applied to the role.
	Policies []string `pulumi:"policies"`
	// The list of service identities that should
	// be applied to the role.
	ServiceIdentities []AclRoleServiceIdentity `pulumi:"serviceIdentities"`
}

type AclRoleState struct {
	// A free form human readable description of the role.
	Description pulumi.StringPtrInput
	// The name of the ACL role.
	Name pulumi.StringPtrInput
	// The namespace to create the role within.
	Namespace pulumi.StringPtrInput
	// The list of policies that should be applied to the role.
	Policies pulumi.StringArrayInput
	// The list of service identities that should
	// be applied to the role.
	ServiceIdentities AclRoleServiceIdentityArrayInput
}

func (AclRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*aclRoleState)(nil)).Elem()
}

type aclRoleArgs struct {
	// A free form human readable description of the role.
	Description *string `pulumi:"description"`
	// The name of the ACL role.
	Name *string `pulumi:"name"`
	// The namespace to create the role within.
	Namespace *string `pulumi:"namespace"`
	// The list of policies that should be applied to the role.
	Policies []string `pulumi:"policies"`
	// The list of service identities that should
	// be applied to the role.
	ServiceIdentities []AclRoleServiceIdentity `pulumi:"serviceIdentities"`
}

// The set of arguments for constructing a AclRole resource.
type AclRoleArgs struct {
	// A free form human readable description of the role.
	Description pulumi.StringPtrInput
	// The name of the ACL role.
	Name pulumi.StringPtrInput
	// The namespace to create the role within.
	Namespace pulumi.StringPtrInput
	// The list of policies that should be applied to the role.
	Policies pulumi.StringArrayInput
	// The list of service identities that should
	// be applied to the role.
	ServiceIdentities AclRoleServiceIdentityArrayInput
}

func (AclRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aclRoleArgs)(nil)).Elem()
}
