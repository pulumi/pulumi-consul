// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ## Import
//
// `consul_acl_token_role_attachment` can be imported. This is especially useful to manage the policies attached to the anonymous and the master tokens with Terraform:
//
// ```sh
//
//	$ pulumi import consul:index/aclTokenRoleAttachment:AclTokenRoleAttachment anonymous token_id:role_id
//
// ```
type AclTokenRoleAttachment struct {
	pulumi.CustomResourceState

	// The role name.
	Role pulumi.StringOutput `pulumi:"role"`
	// The id of the token.
	TokenId pulumi.StringOutput `pulumi:"tokenId"`
}

// NewAclTokenRoleAttachment registers a new resource with the given unique name, arguments, and options.
func NewAclTokenRoleAttachment(ctx *pulumi.Context,
	name string, args *AclTokenRoleAttachmentArgs, opts ...pulumi.ResourceOption) (*AclTokenRoleAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.TokenId == nil {
		return nil, errors.New("invalid value for required argument 'TokenId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AclTokenRoleAttachment
	err := ctx.RegisterResource("consul:index/aclTokenRoleAttachment:AclTokenRoleAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAclTokenRoleAttachment gets an existing AclTokenRoleAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAclTokenRoleAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AclTokenRoleAttachmentState, opts ...pulumi.ResourceOption) (*AclTokenRoleAttachment, error) {
	var resource AclTokenRoleAttachment
	err := ctx.ReadResource("consul:index/aclTokenRoleAttachment:AclTokenRoleAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AclTokenRoleAttachment resources.
type aclTokenRoleAttachmentState struct {
	// The role name.
	Role *string `pulumi:"role"`
	// The id of the token.
	TokenId *string `pulumi:"tokenId"`
}

type AclTokenRoleAttachmentState struct {
	// The role name.
	Role pulumi.StringPtrInput
	// The id of the token.
	TokenId pulumi.StringPtrInput
}

func (AclTokenRoleAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*aclTokenRoleAttachmentState)(nil)).Elem()
}

type aclTokenRoleAttachmentArgs struct {
	// The role name.
	Role string `pulumi:"role"`
	// The id of the token.
	TokenId string `pulumi:"tokenId"`
}

// The set of arguments for constructing a AclTokenRoleAttachment resource.
type AclTokenRoleAttachmentArgs struct {
	// The role name.
	Role pulumi.StringInput
	// The id of the token.
	TokenId pulumi.StringInput
}

func (AclTokenRoleAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aclTokenRoleAttachmentArgs)(nil)).Elem()
}

type AclTokenRoleAttachmentInput interface {
	pulumi.Input

	ToAclTokenRoleAttachmentOutput() AclTokenRoleAttachmentOutput
	ToAclTokenRoleAttachmentOutputWithContext(ctx context.Context) AclTokenRoleAttachmentOutput
}

func (*AclTokenRoleAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AclTokenRoleAttachment)(nil)).Elem()
}

func (i *AclTokenRoleAttachment) ToAclTokenRoleAttachmentOutput() AclTokenRoleAttachmentOutput {
	return i.ToAclTokenRoleAttachmentOutputWithContext(context.Background())
}

func (i *AclTokenRoleAttachment) ToAclTokenRoleAttachmentOutputWithContext(ctx context.Context) AclTokenRoleAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenRoleAttachmentOutput)
}

func (i *AclTokenRoleAttachment) ToOutput(ctx context.Context) pulumix.Output[*AclTokenRoleAttachment] {
	return pulumix.Output[*AclTokenRoleAttachment]{
		OutputState: i.ToAclTokenRoleAttachmentOutputWithContext(ctx).OutputState,
	}
}

// AclTokenRoleAttachmentArrayInput is an input type that accepts AclTokenRoleAttachmentArray and AclTokenRoleAttachmentArrayOutput values.
// You can construct a concrete instance of `AclTokenRoleAttachmentArrayInput` via:
//
//	AclTokenRoleAttachmentArray{ AclTokenRoleAttachmentArgs{...} }
type AclTokenRoleAttachmentArrayInput interface {
	pulumi.Input

	ToAclTokenRoleAttachmentArrayOutput() AclTokenRoleAttachmentArrayOutput
	ToAclTokenRoleAttachmentArrayOutputWithContext(context.Context) AclTokenRoleAttachmentArrayOutput
}

type AclTokenRoleAttachmentArray []AclTokenRoleAttachmentInput

func (AclTokenRoleAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AclTokenRoleAttachment)(nil)).Elem()
}

func (i AclTokenRoleAttachmentArray) ToAclTokenRoleAttachmentArrayOutput() AclTokenRoleAttachmentArrayOutput {
	return i.ToAclTokenRoleAttachmentArrayOutputWithContext(context.Background())
}

func (i AclTokenRoleAttachmentArray) ToAclTokenRoleAttachmentArrayOutputWithContext(ctx context.Context) AclTokenRoleAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenRoleAttachmentArrayOutput)
}

func (i AclTokenRoleAttachmentArray) ToOutput(ctx context.Context) pulumix.Output[[]*AclTokenRoleAttachment] {
	return pulumix.Output[[]*AclTokenRoleAttachment]{
		OutputState: i.ToAclTokenRoleAttachmentArrayOutputWithContext(ctx).OutputState,
	}
}

// AclTokenRoleAttachmentMapInput is an input type that accepts AclTokenRoleAttachmentMap and AclTokenRoleAttachmentMapOutput values.
// You can construct a concrete instance of `AclTokenRoleAttachmentMapInput` via:
//
//	AclTokenRoleAttachmentMap{ "key": AclTokenRoleAttachmentArgs{...} }
type AclTokenRoleAttachmentMapInput interface {
	pulumi.Input

	ToAclTokenRoleAttachmentMapOutput() AclTokenRoleAttachmentMapOutput
	ToAclTokenRoleAttachmentMapOutputWithContext(context.Context) AclTokenRoleAttachmentMapOutput
}

type AclTokenRoleAttachmentMap map[string]AclTokenRoleAttachmentInput

func (AclTokenRoleAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AclTokenRoleAttachment)(nil)).Elem()
}

func (i AclTokenRoleAttachmentMap) ToAclTokenRoleAttachmentMapOutput() AclTokenRoleAttachmentMapOutput {
	return i.ToAclTokenRoleAttachmentMapOutputWithContext(context.Background())
}

func (i AclTokenRoleAttachmentMap) ToAclTokenRoleAttachmentMapOutputWithContext(ctx context.Context) AclTokenRoleAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclTokenRoleAttachmentMapOutput)
}

func (i AclTokenRoleAttachmentMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AclTokenRoleAttachment] {
	return pulumix.Output[map[string]*AclTokenRoleAttachment]{
		OutputState: i.ToAclTokenRoleAttachmentMapOutputWithContext(ctx).OutputState,
	}
}

type AclTokenRoleAttachmentOutput struct{ *pulumi.OutputState }

func (AclTokenRoleAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclTokenRoleAttachment)(nil)).Elem()
}

func (o AclTokenRoleAttachmentOutput) ToAclTokenRoleAttachmentOutput() AclTokenRoleAttachmentOutput {
	return o
}

func (o AclTokenRoleAttachmentOutput) ToAclTokenRoleAttachmentOutputWithContext(ctx context.Context) AclTokenRoleAttachmentOutput {
	return o
}

func (o AclTokenRoleAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[*AclTokenRoleAttachment] {
	return pulumix.Output[*AclTokenRoleAttachment]{
		OutputState: o.OutputState,
	}
}

// The role name.
func (o AclTokenRoleAttachmentOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AclTokenRoleAttachment) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The id of the token.
func (o AclTokenRoleAttachmentOutput) TokenId() pulumi.StringOutput {
	return o.ApplyT(func(v *AclTokenRoleAttachment) pulumi.StringOutput { return v.TokenId }).(pulumi.StringOutput)
}

type AclTokenRoleAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AclTokenRoleAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AclTokenRoleAttachment)(nil)).Elem()
}

func (o AclTokenRoleAttachmentArrayOutput) ToAclTokenRoleAttachmentArrayOutput() AclTokenRoleAttachmentArrayOutput {
	return o
}

func (o AclTokenRoleAttachmentArrayOutput) ToAclTokenRoleAttachmentArrayOutputWithContext(ctx context.Context) AclTokenRoleAttachmentArrayOutput {
	return o
}

func (o AclTokenRoleAttachmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AclTokenRoleAttachment] {
	return pulumix.Output[[]*AclTokenRoleAttachment]{
		OutputState: o.OutputState,
	}
}

func (o AclTokenRoleAttachmentArrayOutput) Index(i pulumi.IntInput) AclTokenRoleAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AclTokenRoleAttachment {
		return vs[0].([]*AclTokenRoleAttachment)[vs[1].(int)]
	}).(AclTokenRoleAttachmentOutput)
}

type AclTokenRoleAttachmentMapOutput struct{ *pulumi.OutputState }

func (AclTokenRoleAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AclTokenRoleAttachment)(nil)).Elem()
}

func (o AclTokenRoleAttachmentMapOutput) ToAclTokenRoleAttachmentMapOutput() AclTokenRoleAttachmentMapOutput {
	return o
}

func (o AclTokenRoleAttachmentMapOutput) ToAclTokenRoleAttachmentMapOutputWithContext(ctx context.Context) AclTokenRoleAttachmentMapOutput {
	return o
}

func (o AclTokenRoleAttachmentMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AclTokenRoleAttachment] {
	return pulumix.Output[map[string]*AclTokenRoleAttachment]{
		OutputState: o.OutputState,
	}
}

func (o AclTokenRoleAttachmentMapOutput) MapIndex(k pulumi.StringInput) AclTokenRoleAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AclTokenRoleAttachment {
		return vs[0].(map[string]*AclTokenRoleAttachment)[vs[1].(string)]
	}).(AclTokenRoleAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenRoleAttachmentInput)(nil)).Elem(), &AclTokenRoleAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenRoleAttachmentArrayInput)(nil)).Elem(), AclTokenRoleAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclTokenRoleAttachmentMapInput)(nil)).Elem(), AclTokenRoleAttachmentMap{})
	pulumi.RegisterOutputType(AclTokenRoleAttachmentOutput{})
	pulumi.RegisterOutputType(AclTokenRoleAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AclTokenRoleAttachmentMapOutput{})
}
