// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `.Service` provides details about a specific Consul service in a
// given datacenter.  The results include a list of nodes advertising the specified
// service, the node's IP address, port number, node ID, etc.  By specifying a
// different datacenter in the `queryOptions` it is possible to retrieve a list of
// services from a different WAN-attached Consul datacenter.
// 
// This data source is different from the `.getServices` (plural) data
// source, which provides a summary of the current Consul services.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/d/service.html.markdown.
func LookupService(ctx *pulumi.Context, args *GetServiceArgs) (*GetServiceResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["datacenter"] = args.Datacenter
		inputs["name"] = args.Name
		inputs["queryOptions"] = args.QueryOptions
		inputs["tag"] = args.Tag
	}
	outputs, err := ctx.Invoke("consul:index/getService:getService", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServiceResult{
		Datacenter: outputs["datacenter"],
		Name: outputs["name"],
		QueryOptions: outputs["queryOptions"],
		Services: outputs["services"],
		Tag: outputs["tag"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter interface{}
	// The service name to select.
	Name interface{}
	// See below.
	QueryOptions interface{}
	// A single tag that can be used to filter the list of nodes
	// to return based on a single matching tag..
	Tag interface{}
}

// A collection of values returned by getService.
type GetServiceResult struct {
	// The datacenter the keys are being read from to.
	Datacenter interface{}
	// The name of the service
	Name interface{}
	QueryOptions interface{}
	// A list of nodes and details about each endpoint advertising a
	// service.  Each element in the list is a map of attributes that correspond to
	// each individual node.  The list of per-node attributes is detailed below.
	Services interface{}
	// The name of the tag used to filter the list of nodes in `service`.
	Tag interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
