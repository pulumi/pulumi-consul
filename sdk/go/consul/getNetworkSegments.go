// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// > **NOTE:** This feature requires [Consul Enterprise](https://www.consul.io/docs/enterprise/index.html).
//
// The `consulNetworkSegment` data source can be used to retrieve the network
// segments defined in the configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			segmentsNetworkSegments, err := consul.GetNetworkSegments(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("segments", segmentsNetworkSegments.Segments)
//			return nil
//		})
//	}
//
// ```
func GetNetworkSegments(ctx *pulumi.Context, args *GetNetworkSegmentsArgs, opts ...pulumi.InvokeOption) (*GetNetworkSegmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetworkSegmentsResult
	err := ctx.Invoke("consul:index/getNetworkSegments:getNetworkSegments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkSegments.
type GetNetworkSegmentsArgs struct {
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// The ACL token to use. This overrides the
	// token that the agent provides by default.
	//
	// Deprecated: The token argument has been deprecated and will be removed in a future release.
	// Please use the token argument in the provider configuration
	Token *string `pulumi:"token"`
}

// A collection of values returned by getNetworkSegments.
type GetNetworkSegmentsResult struct {
	// The datacenter the segments are being read from.
	Datacenter string `pulumi:"datacenter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of network segments.
	Segments []string `pulumi:"segments"`
	// Deprecated: The token argument has been deprecated and will be removed in a future release.
	// Please use the token argument in the provider configuration
	Token *string `pulumi:"token"`
}

func GetNetworkSegmentsOutput(ctx *pulumi.Context, args GetNetworkSegmentsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkSegmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkSegmentsResult, error) {
			args := v.(GetNetworkSegmentsArgs)
			r, err := GetNetworkSegments(ctx, &args, opts...)
			var s GetNetworkSegmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworkSegmentsResultOutput)
}

// A collection of arguments for invoking getNetworkSegments.
type GetNetworkSegmentsOutputArgs struct {
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// The ACL token to use. This overrides the
	// token that the agent provides by default.
	//
	// Deprecated: The token argument has been deprecated and will be removed in a future release.
	// Please use the token argument in the provider configuration
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (GetNetworkSegmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSegmentsArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkSegments.
type GetNetworkSegmentsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkSegmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSegmentsResult)(nil)).Elem()
}

func (o GetNetworkSegmentsResultOutput) ToGetNetworkSegmentsResultOutput() GetNetworkSegmentsResultOutput {
	return o
}

func (o GetNetworkSegmentsResultOutput) ToGetNetworkSegmentsResultOutputWithContext(ctx context.Context) GetNetworkSegmentsResultOutput {
	return o
}

func (o GetNetworkSegmentsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkSegmentsResult] {
	return pulumix.Output[GetNetworkSegmentsResult]{
		OutputState: o.OutputState,
	}
}

// The datacenter the segments are being read from.
func (o GetNetworkSegmentsResultOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSegmentsResult) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkSegmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSegmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of network segments.
func (o GetNetworkSegmentsResultOutput) Segments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSegmentsResult) []string { return v.Segments }).(pulumi.StringArrayOutput)
}

// Deprecated: The token argument has been deprecated and will be removed in a future release.
// Please use the token argument in the provider configuration
func (o GetNetworkSegmentsResultOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkSegmentsResult) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkSegmentsResultOutput{})
}
