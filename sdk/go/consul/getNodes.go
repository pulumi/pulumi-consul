// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getNodes` data source returns a list of Consul nodes that have
// been registered with the Consul cluster in a given datacenter.  By specifying a
// different datacenter in the `queryOptions` it is possible to retrieve a list of
// nodes from a different WAN-attached Consul datacenter.
func GetNodes(ctx *pulumi.Context, args *GetNodesArgs, opts ...pulumi.InvokeOption) (*GetNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNodesResult
	err := ctx.Invoke("consul:index/getNodes:getNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodes.
type GetNodesArgs struct {
	// See below.
	QueryOptions []GetNodesQueryOption `pulumi:"queryOptions"`
}

// A collection of values returned by getNodes.
type GetNodesResult struct {
	// The datacenter the keys are being read from to.
	Datacenter string `pulumi:"datacenter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of the Consul node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// A list of the Consul node names.
	NodeNames []string `pulumi:"nodeNames"`
	// A list of nodes and details about each Consul agent.  The list of
	// per-node attributes is detailed below.
	Nodes        []GetNodesNode        `pulumi:"nodes"`
	QueryOptions []GetNodesQueryOption `pulumi:"queryOptions"`
}

func GetNodesOutput(ctx *pulumi.Context, args GetNodesOutputArgs, opts ...pulumi.InvokeOption) GetNodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNodesResultOutput, error) {
			args := v.(GetNodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("consul:index/getNodes:getNodes", args, GetNodesResultOutput{}, options).(GetNodesResultOutput), nil
		}).(GetNodesResultOutput)
}

// A collection of arguments for invoking getNodes.
type GetNodesOutputArgs struct {
	// See below.
	QueryOptions GetNodesQueryOptionArrayInput `pulumi:"queryOptions"`
}

func (GetNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesArgs)(nil)).Elem()
}

// A collection of values returned by getNodes.
type GetNodesResultOutput struct{ *pulumi.OutputState }

func (GetNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesResult)(nil)).Elem()
}

func (o GetNodesResultOutput) ToGetNodesResultOutput() GetNodesResultOutput {
	return o
}

func (o GetNodesResultOutput) ToGetNodesResultOutputWithContext(ctx context.Context) GetNodesResultOutput {
	return o
}

// The datacenter the keys are being read from to.
func (o GetNodesResultOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesResult) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of the Consul node IDs.
func (o GetNodesResultOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodesResult) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// A list of the Consul node names.
func (o GetNodesResultOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodesResult) []string { return v.NodeNames }).(pulumi.StringArrayOutput)
}

// A list of nodes and details about each Consul agent.  The list of
// per-node attributes is detailed below.
func (o GetNodesResultOutput) Nodes() GetNodesNodeArrayOutput {
	return o.ApplyT(func(v GetNodesResult) []GetNodesNode { return v.Nodes }).(GetNodesNodeArrayOutput)
}

func (o GetNodesResultOutput) QueryOptions() GetNodesQueryOptionArrayOutput {
	return o.ApplyT(func(v GetNodesResult) []GetNodesQueryOption { return v.QueryOptions }).(GetNodesQueryOptionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNodesResultOutput{})
}
