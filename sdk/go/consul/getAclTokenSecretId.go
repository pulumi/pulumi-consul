// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testAclPolicy, err := consul.NewAclPolicy(ctx, "testAclPolicy", &consul.AclPolicyArgs{
//				Rules: pulumi.String("node \"\" { policy = \"read\" }"),
//				Datacenters: pulumi.StringArray{
//					pulumi.String("dc1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			testAclToken, err := consul.NewAclToken(ctx, "testAclToken", &consul.AclTokenArgs{
//				Description: pulumi.String("test"),
//				Policies: pulumi.StringArray{
//					testAclPolicy.Name,
//				},
//				Local: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			read := consul.GetAclTokenSecretIdOutput(ctx, consul.GetAclTokenSecretIdOutputArgs{
//				AccessorId: testAclToken.ID(),
//				PgpKey:     pulumi.String("keybase:my_username"),
//			}, nil)
//			ctx.Export("consulAclTokenSecretId", read.ApplyT(func(read consul.GetAclTokenSecretIdResult) (*string, error) {
//				return &read.EncryptedSecretId, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
func GetAclTokenSecretId(ctx *pulumi.Context, args *GetAclTokenSecretIdArgs, opts ...pulumi.InvokeOption) (*GetAclTokenSecretIdResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAclTokenSecretIdResult
	err := ctx.Invoke("consul:index/getAclTokenSecretId:getAclTokenSecretId", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAclTokenSecretId.
type GetAclTokenSecretIdArgs struct {
	// The accessor ID of the ACL token.
	AccessorId string `pulumi:"accessorId"`
	// The namespace to lookup the token.
	Namespace *string `pulumi:"namespace"`
	// The partition to lookup the token.
	Partition *string `pulumi:"partition"`
	PgpKey    *string `pulumi:"pgpKey"`
}

// A collection of values returned by getAclTokenSecretId.
type GetAclTokenSecretIdResult struct {
	AccessorId        string `pulumi:"accessorId"`
	EncryptedSecretId string `pulumi:"encryptedSecretId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Namespace *string `pulumi:"namespace"`
	Partition *string `pulumi:"partition"`
	PgpKey    *string `pulumi:"pgpKey"`
	// The secret ID of the ACL token if `pgpKey` has not been set.
	SecretId string `pulumi:"secretId"`
}

func GetAclTokenSecretIdOutput(ctx *pulumi.Context, args GetAclTokenSecretIdOutputArgs, opts ...pulumi.InvokeOption) GetAclTokenSecretIdResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAclTokenSecretIdResult, error) {
			args := v.(GetAclTokenSecretIdArgs)
			r, err := GetAclTokenSecretId(ctx, &args, opts...)
			var s GetAclTokenSecretIdResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAclTokenSecretIdResultOutput)
}

// A collection of arguments for invoking getAclTokenSecretId.
type GetAclTokenSecretIdOutputArgs struct {
	// The accessor ID of the ACL token.
	AccessorId pulumi.StringInput `pulumi:"accessorId"`
	// The namespace to lookup the token.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The partition to lookup the token.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	PgpKey    pulumi.StringPtrInput `pulumi:"pgpKey"`
}

func (GetAclTokenSecretIdOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenSecretIdArgs)(nil)).Elem()
}

// A collection of values returned by getAclTokenSecretId.
type GetAclTokenSecretIdResultOutput struct{ *pulumi.OutputState }

func (GetAclTokenSecretIdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclTokenSecretIdResult)(nil)).Elem()
}

func (o GetAclTokenSecretIdResultOutput) ToGetAclTokenSecretIdResultOutput() GetAclTokenSecretIdResultOutput {
	return o
}

func (o GetAclTokenSecretIdResultOutput) ToGetAclTokenSecretIdResultOutputWithContext(ctx context.Context) GetAclTokenSecretIdResultOutput {
	return o
}

func (o GetAclTokenSecretIdResultOutput) AccessorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) string { return v.AccessorId }).(pulumi.StringOutput)
}

func (o GetAclTokenSecretIdResultOutput) EncryptedSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) string { return v.EncryptedSecretId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAclTokenSecretIdResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclTokenSecretIdResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetAclTokenSecretIdResultOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o GetAclTokenSecretIdResultOutput) PgpKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) *string { return v.PgpKey }).(pulumi.StringPtrOutput)
}

// The secret ID of the ACL token if `pgpKey` has not been set.
func (o GetAclTokenSecretIdResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclTokenSecretIdResult) string { return v.SecretId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAclTokenSecretIdResultOutput{})
}
