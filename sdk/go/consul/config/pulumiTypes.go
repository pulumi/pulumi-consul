// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AuthJwt struct {
	// The name of the auth method to use for login.
	AuthMethod string `pulumi:"authMethod"`
	// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
	BearerToken *string `pulumi:"bearerToken"`
	// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
	Meta                              map[string]string `pulumi:"meta"`
	UseTerraformCloudWorkloadIdentity *bool             `pulumi:"useTerraformCloudWorkloadIdentity"`
}

// AuthJwtInput is an input type that accepts AuthJwtArgs and AuthJwtOutput values.
// You can construct a concrete instance of `AuthJwtInput` via:
//
//	AuthJwtArgs{...}
type AuthJwtInput interface {
	pulumi.Input

	ToAuthJwtOutput() AuthJwtOutput
	ToAuthJwtOutputWithContext(context.Context) AuthJwtOutput
}

type AuthJwtArgs struct {
	// The name of the auth method to use for login.
	AuthMethod pulumi.StringInput `pulumi:"authMethod"`
	// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
	Meta                              pulumi.StringMapInput `pulumi:"meta"`
	UseTerraformCloudWorkloadIdentity pulumi.BoolPtrInput   `pulumi:"useTerraformCloudWorkloadIdentity"`
}

func (AuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthJwt)(nil)).Elem()
}

func (i AuthJwtArgs) ToAuthJwtOutput() AuthJwtOutput {
	return i.ToAuthJwtOutputWithContext(context.Background())
}

func (i AuthJwtArgs) ToAuthJwtOutputWithContext(ctx context.Context) AuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthJwtOutput)
}

type AuthJwtOutput struct{ *pulumi.OutputState }

func (AuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthJwt)(nil)).Elem()
}

func (o AuthJwtOutput) ToAuthJwtOutput() AuthJwtOutput {
	return o
}

func (o AuthJwtOutput) ToAuthJwtOutputWithContext(ctx context.Context) AuthJwtOutput {
	return o
}

// The name of the auth method to use for login.
func (o AuthJwtOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v AuthJwt) string { return v.AuthMethod }).(pulumi.StringOutput)
}

// The bearer token to present to the auth method during login for authentication purposes. For the Kubernetes auth method this is a [Service Account Token (JWT)](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens).
func (o AuthJwtOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthJwt) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// Specifies arbitrary KV metadata linked to the token. Can be useful to track origins.
func (o AuthJwtOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v AuthJwt) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o AuthJwtOutput) UseTerraformCloudWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthJwt) *bool { return v.UseTerraformCloudWorkloadIdentity }).(pulumi.BoolPtrOutput)
}

type Headers struct {
	// The name of the header.
	Name string `pulumi:"name"`
	// The value of the header.
	Value string `pulumi:"value"`
}

// HeadersInput is an input type that accepts HeadersArgs and HeadersOutput values.
// You can construct a concrete instance of `HeadersInput` via:
//
//	HeadersArgs{...}
type HeadersInput interface {
	pulumi.Input

	ToHeadersOutput() HeadersOutput
	ToHeadersOutputWithContext(context.Context) HeadersOutput
}

type HeadersArgs struct {
	// The name of the header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Headers)(nil)).Elem()
}

func (i HeadersArgs) ToHeadersOutput() HeadersOutput {
	return i.ToHeadersOutputWithContext(context.Background())
}

func (i HeadersArgs) ToHeadersOutputWithContext(ctx context.Context) HeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeadersOutput)
}

// HeadersArrayInput is an input type that accepts HeadersArray and HeadersArrayOutput values.
// You can construct a concrete instance of `HeadersArrayInput` via:
//
//	HeadersArray{ HeadersArgs{...} }
type HeadersArrayInput interface {
	pulumi.Input

	ToHeadersArrayOutput() HeadersArrayOutput
	ToHeadersArrayOutputWithContext(context.Context) HeadersArrayOutput
}

type HeadersArray []HeadersInput

func (HeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Headers)(nil)).Elem()
}

func (i HeadersArray) ToHeadersArrayOutput() HeadersArrayOutput {
	return i.ToHeadersArrayOutputWithContext(context.Background())
}

func (i HeadersArray) ToHeadersArrayOutputWithContext(ctx context.Context) HeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeadersArrayOutput)
}

type HeadersOutput struct{ *pulumi.OutputState }

func (HeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Headers)(nil)).Elem()
}

func (o HeadersOutput) ToHeadersOutput() HeadersOutput {
	return o
}

func (o HeadersOutput) ToHeadersOutputWithContext(ctx context.Context) HeadersOutput {
	return o
}

// The name of the header.
func (o HeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Headers) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the header.
func (o HeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v Headers) string { return v.Value }).(pulumi.StringOutput)
}

type HeadersArrayOutput struct{ *pulumi.OutputState }

func (HeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Headers)(nil)).Elem()
}

func (o HeadersArrayOutput) ToHeadersArrayOutput() HeadersArrayOutput {
	return o
}

func (o HeadersArrayOutput) ToHeadersArrayOutputWithContext(ctx context.Context) HeadersArrayOutput {
	return o
}

func (o HeadersArrayOutput) Index(i pulumi.IntInput) HeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Headers {
		return vs[0].([]Headers)[vs[1].(int)]
	}).(HeadersOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthJwtInput)(nil)).Elem(), AuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeadersInput)(nil)).Elem(), HeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HeadersArrayInput)(nil)).Elem(), HeadersArray{})
	pulumi.RegisterOutputType(AuthJwtOutput{})
	pulumi.RegisterOutputType(HeadersOutput{})
	pulumi.RegisterOutputType(HeadersArrayOutput{})
}
