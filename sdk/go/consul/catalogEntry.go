// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// !> The `.CatalogEntry` resource has been deprecated in version 2.0.0 of the provider
// and will be removed in a future release. Please read the [upgrade guide](https://www.terraform.io/docs/providers/consul/guides/upgrading.html#deprecation-of-consul_catalog_entry)
// for more information.
//
// Registers a node or service with the [Consul Catalog](https://www.consul.io/docs/agent/http/catalog.html#catalog_register).
// Currently, defining health checks is not supported.
type CatalogEntry struct {
	pulumi.CustomResourceState

	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringOutput `pulumi:"address"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringOutput `pulumi:"datacenter"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Node pulumi.StringOutput `pulumi:"node"`
	// A service to optionally associated with
	// the node. Supported values are documented below.
	Services CatalogEntryServiceArrayOutput `pulumi:"services"`
	// ACL token.
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewCatalogEntry registers a new resource with the given unique name, arguments, and options.
func NewCatalogEntry(ctx *pulumi.Context,
	name string, args *CatalogEntryArgs, opts ...pulumi.ResourceOption) (*CatalogEntry, error) {
	if args == nil || args.Address == nil {
		return nil, errors.New("missing required argument 'Address'")
	}
	if args == nil || args.Node == nil {
		return nil, errors.New("missing required argument 'Node'")
	}
	if args == nil {
		args = &CatalogEntryArgs{}
	}
	var resource CatalogEntry
	err := ctx.RegisterResource("consul:index/catalogEntry:CatalogEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogEntry gets an existing CatalogEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogEntryState, opts ...pulumi.ResourceOption) (*CatalogEntry, error) {
	var resource CatalogEntry
	err := ctx.ReadResource("consul:index/catalogEntry:CatalogEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CatalogEntry resources.
type catalogEntryState struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address *string `pulumi:"address"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Node *string `pulumi:"node"`
	// A service to optionally associated with
	// the node. Supported values are documented below.
	Services []CatalogEntryService `pulumi:"services"`
	// ACL token.
	Token *string `pulumi:"token"`
}

type CatalogEntryState struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringPtrInput
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// The name of the node being added to, or
	// referenced in the catalog.
	Node pulumi.StringPtrInput
	// A service to optionally associated with
	// the node. Supported values are documented below.
	Services CatalogEntryServiceArrayInput
	// ACL token.
	Token pulumi.StringPtrInput
}

func (CatalogEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogEntryState)(nil)).Elem()
}

type catalogEntryArgs struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address string `pulumi:"address"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Node string `pulumi:"node"`
	// A service to optionally associated with
	// the node. Supported values are documented below.
	Services []CatalogEntryService `pulumi:"services"`
	// ACL token.
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a CatalogEntry resource.
type CatalogEntryArgs struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringInput
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// The name of the node being added to, or
	// referenced in the catalog.
	Node pulumi.StringInput
	// A service to optionally associated with
	// the node. Supported values are documented below.
	Services CatalogEntryServiceArrayInput
	// ACL token.
	Token pulumi.StringPtrInput
}

func (CatalogEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogEntryArgs)(nil)).Elem()
}
