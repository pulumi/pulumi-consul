// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The [Configuration Entry](https://www.consul.io/docs/agent/config_entries.html)
// resource can be used to provide cluster-wide defaults for various aspects of
// Consul.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/config_entry.html.markdown.
type ConfigEntry struct {
	s *pulumi.ResourceState
}

// NewConfigEntry registers a new resource with the given unique name, arguments, and options.
func NewConfigEntry(ctx *pulumi.Context,
	name string, args *ConfigEntryArgs, opts ...pulumi.ResourceOpt) (*ConfigEntry, error) {
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["configJson"] = nil
		inputs["kind"] = nil
		inputs["name"] = nil
	} else {
		inputs["configJson"] = args.ConfigJson
		inputs["kind"] = args.Kind
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("consul:index/configEntry:ConfigEntry", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ConfigEntry{s: s}, nil
}

// GetConfigEntry gets an existing ConfigEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigEntry(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ConfigEntryState, opts ...pulumi.ResourceOpt) (*ConfigEntry, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["configJson"] = state.ConfigJson
		inputs["kind"] = state.Kind
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("consul:index/configEntry:ConfigEntry", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ConfigEntry{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ConfigEntry) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ConfigEntry) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// An arbitrary map of configuration values.
func (r *ConfigEntry) ConfigJson() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["configJson"])
}

// The kind of configuration entry to register.
func (r *ConfigEntry) Kind() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["kind"])
}

// The name of the configuration entry being registred.
func (r *ConfigEntry) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering ConfigEntry resources.
type ConfigEntryState struct {
	// An arbitrary map of configuration values.
	ConfigJson interface{}
	// The kind of configuration entry to register.
	Kind interface{}
	// The name of the configuration entry being registred.
	Name interface{}
}

// The set of arguments for constructing a ConfigEntry resource.
type ConfigEntryArgs struct {
	// An arbitrary map of configuration values.
	ConfigJson interface{}
	// The kind of configuration entry to register.
	Kind interface{}
	// The name of the configuration entry being registred.
	Name interface{}
}
