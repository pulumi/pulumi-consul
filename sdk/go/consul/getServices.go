// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `.getServices` data source returns a list of Consul services that
// have been registered with the Consul cluster in a given datacenter.  By
// specifying a different datacenter in the `queryOptions` it is possible to
// retrieve a list of services from a different WAN-attached Consul datacenter.
// 
// This data source is different from the `.Service` (singular) data
// source, which provides a detailed response about a specific Consul service.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/d/services.html.markdown.
func LookupServices(ctx *pulumi.Context, args *GetServicesArgs) (*GetServicesResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["queryOptions"] = args.QueryOptions
	}
	outputs, err := ctx.Invoke("consul:index/getServices:getServices", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServicesResult{
		Datacenter: outputs["datacenter"],
		Names: outputs["names"],
		QueryOptions: outputs["queryOptions"],
		Services: outputs["services"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getServices.
type GetServicesArgs struct {
	// See below.
	QueryOptions interface{}
}

// A collection of values returned by getServices.
type GetServicesResult struct {
	// The datacenter the keys are being read from to.
	Datacenter interface{}
	Names interface{}
	QueryOptions interface{}
	Services interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
