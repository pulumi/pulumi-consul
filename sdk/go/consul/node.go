// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package consul

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides access to Node data in Consul. This can be used to define a
// node. Currently, defining health checks is not supported.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/node.html.markdown.
type Node struct {
	pulumi.CustomResourceState

	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringOutput `pulumi:"address"`
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringOutput `pulumi:"datacenter"`
	// Key/value pairs that are associated with the node.
	Meta pulumi.StringMapOutput `pulumi:"meta"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Name pulumi.StringOutput `pulumi:"name"`
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewNode registers a new resource with the given unique name, arguments, and options.
func NewNode(ctx *pulumi.Context,
	name string, args *NodeArgs, opts ...pulumi.ResourceOption) (*Node, error) {
	if args == nil || args.Address == nil {
		return nil, errors.New("missing required argument 'Address'")
	}
	if args == nil {
		args = &NodeArgs{}
	}
	var resource Node
	err := ctx.RegisterResource("consul:index/node:Node", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNode gets an existing Node resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeState, opts ...pulumi.ResourceOption) (*Node, error) {
	var resource Node
	err := ctx.ReadResource("consul:index/node:Node", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Node resources.
type nodeState struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address *string `pulumi:"address"`
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// Key/value pairs that are associated with the node.
	Meta map[string]string `pulumi:"meta"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Name *string `pulumi:"name"`
	Token *string `pulumi:"token"`
}

type NodeState struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringPtrInput
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// Key/value pairs that are associated with the node.
	Meta pulumi.StringMapInput
	// The name of the node being added to, or
	// referenced in the catalog.
	Name pulumi.StringPtrInput
	Token pulumi.StringPtrInput
}

func (NodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeState)(nil)).Elem()
}

type nodeArgs struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address string `pulumi:"address"`
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// Key/value pairs that are associated with the node.
	Meta map[string]string `pulumi:"meta"`
	// The name of the node being added to, or
	// referenced in the catalog.
	Name *string `pulumi:"name"`
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a Node resource.
type NodeArgs struct {
	// The address of the node being added to,
	// or referenced in the catalog.
	Address pulumi.StringInput
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// Key/value pairs that are associated with the node.
	Meta pulumi.StringMapInput
	// The name of the node being added to, or
	// referenced in the catalog.
	Name pulumi.StringPtrInput
	Token pulumi.StringPtrInput
}

func (NodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeArgs)(nil)).Elem()
}

