// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/d/key_prefix.html.markdown.
func LookupKeyPrefix(ctx *pulumi.Context, args *GetKeyPrefixArgs) (*GetKeyPrefixResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["datacenter"] = args.Datacenter
		inputs["pathPrefix"] = args.PathPrefix
		inputs["subkeyCollection"] = args.SubkeyCollection
		inputs["token"] = args.Token
	}
	outputs, err := ctx.Invoke("consul:index/getKeyPrefix:getKeyPrefix", inputs)
	if err != nil {
		return nil, err
	}
	return &GetKeyPrefixResult{
		Datacenter: outputs["datacenter"],
		PathPrefix: outputs["pathPrefix"],
		SubkeyCollection: outputs["subkeyCollection"],
		Subkeys: outputs["subkeys"],
		Token: outputs["token"],
		Var: outputs["var"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getKeyPrefix.
type GetKeyPrefixArgs struct {
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter interface{}
	// Specifies the common prefix shared by all keys
	// that will be read by this data source instance. In most cases, this will
	// end with a slash to read a "folder" of subkeys.
	PathPrefix interface{}
	// Specifies a subkey in Consul to be read. Supported
	// values documented below. Multiple blocks supported.
	SubkeyCollection interface{}
	// The ACL token to use. This overrides the
	// token that the agent provides by default.
	Token interface{}
}

// A collection of values returned by getKeyPrefix.
type GetKeyPrefixResult struct {
	// The datacenter the keys are being read from.
	Datacenter interface{}
	// the common prefix shared by all keys being read.
	// * `var.<name>` - For each name given, the corresponding attribute
	// has the value of the key.
	PathPrefix interface{}
	SubkeyCollection interface{}
	// A map of the subkeys and values is set if no `subkey`
	// block is provided.
	Subkeys interface{}
	Token interface{}
	Var interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
