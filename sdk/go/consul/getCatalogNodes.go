// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getNodes` data source returns a list of Consul nodes that have
// been registered with the Consul cluster in a given datacenter.  By specifying a
// different datacenter in the `queryOptions` it is possible to retrieve a list of
// nodes from a different WAN-attached Consul datacenter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul"
//	"github.com/pulumi/pulumi-example/sdk/go/example"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := consul.GetNodes(ctx, &consul.GetNodesArgs{
//				QueryOptions: []consul.GetNodesQueryOption{
//					{
//						Datacenter: pulumi.StringRef("dc1"),
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Set the description to a whitespace delimited list of the node names
//			_, err = example.NewResource(ctx, "app", &example.ResourceArgs{
//				Description: std.Join(ctx, &std.JoinArgs{
//					Separator: " ",
//					Input: std.Formatlist(ctx, &std.FormatlistArgs{
//						Input: "%s",
//						Args: []interface{}{
//							nodeNames,
//						},
//					}, nil).Result,
//				}, nil).Result,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: getCatalogNodes has been deprecated in favor of getNodes
func GetCatalogNodes(ctx *pulumi.Context, args *GetCatalogNodesArgs, opts ...pulumi.InvokeOption) (*GetCatalogNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCatalogNodesResult
	err := ctx.Invoke("consul:index/getCatalogNodes:getCatalogNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogNodes.
type GetCatalogNodesArgs struct {
	// See below.
	QueryOptions []GetCatalogNodesQueryOption `pulumi:"queryOptions"`
}

// A collection of values returned by getCatalogNodes.
type GetCatalogNodesResult struct {
	// The datacenter the keys are being read from to.
	Datacenter string `pulumi:"datacenter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of the Consul node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// A list of the Consul node names.
	NodeNames []string `pulumi:"nodeNames"`
	// A list of nodes and details about each Consul agent.  The list of
	// per-node attributes is detailed below.
	Nodes        []GetCatalogNodesNode        `pulumi:"nodes"`
	QueryOptions []GetCatalogNodesQueryOption `pulumi:"queryOptions"`
}

func GetCatalogNodesOutput(ctx *pulumi.Context, args GetCatalogNodesOutputArgs, opts ...pulumi.InvokeOption) GetCatalogNodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCatalogNodesResultOutput, error) {
			args := v.(GetCatalogNodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("consul:index/getCatalogNodes:getCatalogNodes", args, GetCatalogNodesResultOutput{}, options).(GetCatalogNodesResultOutput), nil
		}).(GetCatalogNodesResultOutput)
}

// A collection of arguments for invoking getCatalogNodes.
type GetCatalogNodesOutputArgs struct {
	// See below.
	QueryOptions GetCatalogNodesQueryOptionArrayInput `pulumi:"queryOptions"`
}

func (GetCatalogNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogNodes.
type GetCatalogNodesResultOutput struct{ *pulumi.OutputState }

func (GetCatalogNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogNodesResult)(nil)).Elem()
}

func (o GetCatalogNodesResultOutput) ToGetCatalogNodesResultOutput() GetCatalogNodesResultOutput {
	return o
}

func (o GetCatalogNodesResultOutput) ToGetCatalogNodesResultOutputWithContext(ctx context.Context) GetCatalogNodesResultOutput {
	return o
}

// The datacenter the keys are being read from to.
func (o GetCatalogNodesResultOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) string { return v.Datacenter }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCatalogNodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of the Consul node IDs.
func (o GetCatalogNodesResultOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// A list of the Consul node names.
func (o GetCatalogNodesResultOutput) NodeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) []string { return v.NodeNames }).(pulumi.StringArrayOutput)
}

// A list of nodes and details about each Consul agent.  The list of
// per-node attributes is detailed below.
func (o GetCatalogNodesResultOutput) Nodes() GetCatalogNodesNodeArrayOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) []GetCatalogNodesNode { return v.Nodes }).(GetCatalogNodesNodeArrayOutput)
}

func (o GetCatalogNodesResultOutput) QueryOptions() GetCatalogNodesQueryOptionArrayOutput {
	return o.ApplyT(func(v GetCatalogNodesResult) []GetCatalogNodesQueryOption { return v.QueryOptions }).(GetCatalogNodesQueryOptionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCatalogNodesResultOutput{})
}
