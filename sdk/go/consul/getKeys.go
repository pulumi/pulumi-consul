// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `Keys` resource reads values from the Consul key/value store.
// This is a powerful way dynamically set values in templates.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2"
// 	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "nyc1"
// 		opt1 := "abcd"
// 		appKeys, err := consul.LookupKeys(ctx, &consul.LookupKeysArgs{
// 			Datacenter: &opt0,
// 			Keys: []consul.GetKeysKey{
// 				consul.GetKeysKey{
// 					Default: "ami-1234",
// 					Name:    "ami",
// 					Path:    "service/app/launch_ami",
// 				},
// 			},
// 			Token: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ec2.NewInstance(ctx, "appInstance", &ec2.InstanceArgs{
// 			Ami: pulumi.String(appKeys.Var.Ami),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupKeys(ctx *pulumi.Context, args *LookupKeysArgs, opts ...pulumi.InvokeOption) (*LookupKeysResult, error) {
	var rv LookupKeysResult
	err := ctx.Invoke("consul:index/getKeys:getKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeys.
type LookupKeysArgs struct {
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// Specifies a key in Consul to be read. Supported
	// values documented below. Multiple blocks supported.
	Keys []GetKeysKey `pulumi:"keys"`
	// The namespace to lookup the keys.
	Namespace *string `pulumi:"namespace"`
	// The ACL token to use. This overrides the
	// token that the agent provides by default.
	Token *string `pulumi:"token"`
}

// A collection of values returned by getKeys.
type LookupKeysResult struct {
	// The datacenter the keys are being read from.
	// * `var.<name>` - For each name given, the corresponding attribute
	//   has the value of the key.
	Datacenter string `pulumi:"datacenter"`
	// The provider-assigned unique ID for this managed resource.
	Id        string            `pulumi:"id"`
	Keys      []GetKeysKey      `pulumi:"keys"`
	Namespace *string           `pulumi:"namespace"`
	Token     *string           `pulumi:"token"`
	Var       map[string]string `pulumi:"var"`
}
