// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `.getAutopilotHealth` data source returns
// [autopilot health information](https://www.consul.io/api/operator/autopilot.html#read-health)
// about the current Consul cluster.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/d/autopilot_health.html.markdown.
func LookupAutopilotHealth(ctx *pulumi.Context, args *GetAutopilotHealthArgs) (*GetAutopilotHealthResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["datacenter"] = args.Datacenter
	}
	outputs, err := ctx.Invoke("consul:index/getAutopilotHealth:getAutopilotHealth", inputs)
	if err != nil {
		return nil, err
	}
	return &GetAutopilotHealthResult{
		Datacenter: outputs["datacenter"],
		FailureTolerance: outputs["failureTolerance"],
		Healthy: outputs["healthy"],
		Servers: outputs["servers"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getAutopilotHealth.
type GetAutopilotHealthArgs struct {
	// The datacenter to use. This overrides the agent's
	// default datacenter and the datacenter in the provider setup.
	Datacenter interface{}
}

// A collection of values returned by getAutopilotHealth.
type GetAutopilotHealthResult struct {
	Datacenter interface{}
	// The number of redundant healthy servers that could fail
	// without causing an outage
	FailureTolerance interface{}
	// Whether the server is healthy according to the current Autopilot
	// configuration
	Healthy interface{}
	// A list of server health information. See below for details on the
	// available information.
	Servers interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
