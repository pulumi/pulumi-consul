// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The `AclPolicy` data source returns the information related to a
// [Consul ACL Policy](https://www.consul.io/docs/acl/acl-system.html#acl-policies).
func LookupAclPolicy(ctx *pulumi.Context, args *LookupAclPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAclPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAclPolicyResult
	err := ctx.Invoke("consul:index/getAclPolicy:getAclPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAclPolicy.
type LookupAclPolicyArgs struct {
	// The name of the ACL Policy.
	Name string `pulumi:"name"`
	// The namespace to lookup the policy.
	Namespace *string `pulumi:"namespace"`
	// The partition to lookup the policy.
	Partition *string `pulumi:"partition"`
}

// A collection of values returned by getAclPolicy.
type LookupAclPolicyResult struct {
	// The datacenters associated with the ACL Policy.
	Datacenters []string `pulumi:"datacenters"`
	// The description of the ACL Policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
	Partition *string `pulumi:"partition"`
	// The rules associated with the ACL Policy.
	Rules string `pulumi:"rules"`
}

func LookupAclPolicyOutput(ctx *pulumi.Context, args LookupAclPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAclPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAclPolicyResult, error) {
			args := v.(LookupAclPolicyArgs)
			r, err := LookupAclPolicy(ctx, &args, opts...)
			var s LookupAclPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAclPolicyResultOutput)
}

// A collection of arguments for invoking getAclPolicy.
type LookupAclPolicyOutputArgs struct {
	// The name of the ACL Policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace to lookup the policy.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The partition to lookup the policy.
	Partition pulumi.StringPtrInput `pulumi:"partition"`
}

func (LookupAclPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAclPolicy.
type LookupAclPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAclPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclPolicyResult)(nil)).Elem()
}

func (o LookupAclPolicyResultOutput) ToLookupAclPolicyResultOutput() LookupAclPolicyResultOutput {
	return o
}

func (o LookupAclPolicyResultOutput) ToLookupAclPolicyResultOutputWithContext(ctx context.Context) LookupAclPolicyResultOutput {
	return o
}

func (o LookupAclPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAclPolicyResult] {
	return pulumix.Output[LookupAclPolicyResult]{
		OutputState: o.OutputState,
	}
}

// The datacenters associated with the ACL Policy.
func (o LookupAclPolicyResultOutput) Datacenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) []string { return v.Datacenters }).(pulumi.StringArrayOutput)
}

// The description of the ACL Policy.
func (o LookupAclPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAclPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAclPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAclPolicyResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o LookupAclPolicyResultOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

// The rules associated with the ACL Policy.
func (o LookupAclPolicyResultOutput) Rules() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclPolicyResult) string { return v.Rules }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAclPolicyResultOutput{})
}
