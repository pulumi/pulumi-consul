// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `Service` provides details about a specific Consul service in a
// given datacenter.  The results include a list of nodes advertising the specified
// service, the node's IP address, port number, node ID, etc.  By specifying a
// different datacenter in the `queryOptions` it is possible to retrieve a list of
// services from a different WAN-attached Consul datacenter.
//
// This data source is different from the `getServices` (plural) data
// source, which provides a summary of the current Consul services.
//
// Deprecated: getCatalogService has been deprecated in favor of getService
func GetCatalogService(ctx *pulumi.Context, args *GetCatalogServiceArgs, opts ...pulumi.InvokeOption) (*GetCatalogServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCatalogServiceResult
	err := ctx.Invoke("consul:index/getCatalogService:getCatalogService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogService.
type GetCatalogServiceArgs struct {
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter *string `pulumi:"datacenter"`
	// A filter expression to refine the query, see https://www.consul.io/api-docs/features/filtering
	// and https://www.consul.io/api-docs/catalog#filtering-1.
	Filter *string `pulumi:"filter"`
	// The service name to select.
	Name string `pulumi:"name"`
	// See below.
	QueryOptions []GetCatalogServiceQueryOption `pulumi:"queryOptions"`
	// A single tag that can be used to filter the list of nodes
	// to return based on a single matching tag..
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by getCatalogService.
type GetCatalogServiceResult struct {
	// The datacenter the keys are being read from to.
	Datacenter *string `pulumi:"datacenter"`
	Filter     *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the service
	Name         string                         `pulumi:"name"`
	QueryOptions []GetCatalogServiceQueryOption `pulumi:"queryOptions"`
	// A list of nodes and details about each endpoint advertising a
	// service.  Each element in the list is a map of attributes that correspond to
	// each individual node.  The list of per-node attributes is detailed below.
	Services []GetCatalogServiceService `pulumi:"services"`
	// The name of the tag used to filter the list of nodes in `service`.
	Tag *string `pulumi:"tag"`
}

func GetCatalogServiceOutput(ctx *pulumi.Context, args GetCatalogServiceOutputArgs, opts ...pulumi.InvokeOption) GetCatalogServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCatalogServiceResult, error) {
			args := v.(GetCatalogServiceArgs)
			r, err := GetCatalogService(ctx, &args, opts...)
			var s GetCatalogServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCatalogServiceResultOutput)
}

// A collection of arguments for invoking getCatalogService.
type GetCatalogServiceOutputArgs struct {
	// The Consul datacenter to query.  Defaults to the
	// same value found in `queryOptions` parameter specified below, or if that is
	// empty, the `datacenter` value found in the Consul agent that this provider is
	// configured to talk to.
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// A filter expression to refine the query, see https://www.consul.io/api-docs/features/filtering
	// and https://www.consul.io/api-docs/catalog#filtering-1.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The service name to select.
	Name pulumi.StringInput `pulumi:"name"`
	// See below.
	QueryOptions GetCatalogServiceQueryOptionArrayInput `pulumi:"queryOptions"`
	// A single tag that can be used to filter the list of nodes
	// to return based on a single matching tag..
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetCatalogServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogService.
type GetCatalogServiceResultOutput struct{ *pulumi.OutputState }

func (GetCatalogServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogServiceResult)(nil)).Elem()
}

func (o GetCatalogServiceResultOutput) ToGetCatalogServiceResultOutput() GetCatalogServiceResultOutput {
	return o
}

func (o GetCatalogServiceResultOutput) ToGetCatalogServiceResultOutputWithContext(ctx context.Context) GetCatalogServiceResultOutput {
	return o
}

// The datacenter the keys are being read from to.
func (o GetCatalogServiceResultOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

func (o GetCatalogServiceResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCatalogServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the service
func (o GetCatalogServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCatalogServiceResultOutput) QueryOptions() GetCatalogServiceQueryOptionArrayOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) []GetCatalogServiceQueryOption { return v.QueryOptions }).(GetCatalogServiceQueryOptionArrayOutput)
}

// A list of nodes and details about each endpoint advertising a
// service.  Each element in the list is a map of attributes that correspond to
// each individual node.  The list of per-node attributes is detailed below.
func (o GetCatalogServiceResultOutput) Services() GetCatalogServiceServiceArrayOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) []GetCatalogServiceService { return v.Services }).(GetCatalogServiceServiceArrayOutput)
}

// The name of the tag used to filter the list of nodes in `service`.
func (o GetCatalogServiceResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogServiceResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCatalogServiceResultOutput{})
}
