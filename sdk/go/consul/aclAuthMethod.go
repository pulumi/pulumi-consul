// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package consul

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Starting with Consul 1.5.0, the .AclAuthMethod resource can be used to
// managed Consul ACL auth methods.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/acl_auth_method.markdown.
type AclAuthMethod struct {
	pulumi.CustomResourceState

	// The raw configuration for this ACL auth method.
	Config pulumi.MapOutput `pulumi:"config"`
	// A free form human readable description of the auth method.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the ACL auth method.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of the ACL auth method.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAclAuthMethod registers a new resource with the given unique name, arguments, and options.
func NewAclAuthMethod(ctx *pulumi.Context,
	name string, args *AclAuthMethodArgs, opts ...pulumi.ResourceOption) (*AclAuthMethod, error) {
	if args == nil || args.Config == nil {
		return nil, errors.New("missing required argument 'Config'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &AclAuthMethodArgs{}
	}
	var resource AclAuthMethod
	err := ctx.RegisterResource("consul:index/aclAuthMethod:AclAuthMethod", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAclAuthMethod gets an existing AclAuthMethod resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAclAuthMethod(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AclAuthMethodState, opts ...pulumi.ResourceOption) (*AclAuthMethod, error) {
	var resource AclAuthMethod
	err := ctx.ReadResource("consul:index/aclAuthMethod:AclAuthMethod", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AclAuthMethod resources.
type aclAuthMethodState struct {
	// The raw configuration for this ACL auth method.
	Config map[string]interface{} `pulumi:"config"`
	// A free form human readable description of the auth method.
	Description *string `pulumi:"description"`
	// The name of the ACL auth method.
	Name *string `pulumi:"name"`
	// The type of the ACL auth method.
	Type *string `pulumi:"type"`
}

type AclAuthMethodState struct {
	// The raw configuration for this ACL auth method.
	Config pulumi.MapInput
	// A free form human readable description of the auth method.
	Description pulumi.StringPtrInput
	// The name of the ACL auth method.
	Name pulumi.StringPtrInput
	// The type of the ACL auth method.
	Type pulumi.StringPtrInput
}

func (AclAuthMethodState) ElementType() reflect.Type {
	return reflect.TypeOf((*aclAuthMethodState)(nil)).Elem()
}

type aclAuthMethodArgs struct {
	// The raw configuration for this ACL auth method.
	Config map[string]interface{} `pulumi:"config"`
	// A free form human readable description of the auth method.
	Description *string `pulumi:"description"`
	// The name of the ACL auth method.
	Name *string `pulumi:"name"`
	// The type of the ACL auth method.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AclAuthMethod resource.
type AclAuthMethodArgs struct {
	// The raw configuration for this ACL auth method.
	Config pulumi.MapInput
	// A free form human readable description of the auth method.
	Description pulumi.StringPtrInput
	// The name of the ACL auth method.
	Name pulumi.StringPtrInput
	// The type of the ACL auth method.
	Type pulumi.StringInput
}

func (AclAuthMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aclAuthMethodArgs)(nil)).Elem()
}

