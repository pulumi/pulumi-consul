// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "consul:index/aclAuthMethod:AclAuthMethod":
		r = &AclAuthMethod{}
	case "consul:index/aclBindingRule:AclBindingRule":
		r = &AclBindingRule{}
	case "consul:index/aclPolicy:AclPolicy":
		r = &AclPolicy{}
	case "consul:index/aclRole:AclRole":
		r = &AclRole{}
	case "consul:index/aclRolePolicyAttachment:AclRolePolicyAttachment":
		r = &AclRolePolicyAttachment{}
	case "consul:index/aclToken:AclToken":
		r = &AclToken{}
	case "consul:index/aclTokenPolicyAttachment:AclTokenPolicyAttachment":
		r = &AclTokenPolicyAttachment{}
	case "consul:index/aclTokenRoleAttachment:AclTokenRoleAttachment":
		r = &AclTokenRoleAttachment{}
	case "consul:index/adminPartition:AdminPartition":
		r = &AdminPartition{}
	case "consul:index/agentService:AgentService":
		r = &AgentService{}
	case "consul:index/autopilotConfig:AutopilotConfig":
		r = &AutopilotConfig{}
	case "consul:index/catalogEntry:CatalogEntry":
		r = &CatalogEntry{}
	case "consul:index/certificateAuthority:CertificateAuthority":
		r = &CertificateAuthority{}
	case "consul:index/configEntry:ConfigEntry":
		r = &ConfigEntry{}
	case "consul:index/configEntryServiceDefaults:ConfigEntryServiceDefaults":
		r = &ConfigEntryServiceDefaults{}
	case "consul:index/configEntryServiceIntentions:ConfigEntryServiceIntentions":
		r = &ConfigEntryServiceIntentions{}
	case "consul:index/configEntryServiceResolver:ConfigEntryServiceResolver":
		r = &ConfigEntryServiceResolver{}
	case "consul:index/configEntryServiceRouter:ConfigEntryServiceRouter":
		r = &ConfigEntryServiceRouter{}
	case "consul:index/configEntryServiceSplitter:ConfigEntryServiceSplitter":
		r = &ConfigEntryServiceSplitter{}
	case "consul:index/intention:Intention":
		r = &Intention{}
	case "consul:index/keyPrefix:KeyPrefix":
		r = &KeyPrefix{}
	case "consul:index/keys:Keys":
		r = &Keys{}
	case "consul:index/license:License":
		r = &License{}
	case "consul:index/namespace:Namespace":
		r = &Namespace{}
	case "consul:index/namespacePolicyAttachment:NamespacePolicyAttachment":
		r = &NamespacePolicyAttachment{}
	case "consul:index/namespaceRoleAttachment:NamespaceRoleAttachment":
		r = &NamespaceRoleAttachment{}
	case "consul:index/networkArea:NetworkArea":
		r = &NetworkArea{}
	case "consul:index/node:Node":
		r = &Node{}
	case "consul:index/peering:Peering":
		r = &Peering{}
	case "consul:index/peeringToken:PeeringToken":
		r = &PeeringToken{}
	case "consul:index/preparedQuery:PreparedQuery":
		r = &PreparedQuery{}
	case "consul:index/service:Service":
		r = &Service{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:consul" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclAuthMethod",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclBindingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclRolePolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclTokenPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclTokenRoleAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/adminPartition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/agentService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/autopilotConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/catalogEntry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/certificateAuthority",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntryServiceDefaults",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntryServiceIntentions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntryServiceResolver",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntryServiceRouter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntryServiceSplitter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/intention",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/keyPrefix",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/keys",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/license",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/namespace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/namespacePolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/namespaceRoleAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/networkArea",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/node",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/peering",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/peeringToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/preparedQuery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"consul",
		&pkg{version},
	)
}
