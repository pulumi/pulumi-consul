// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "consul:index/aclAuthMethod:AclAuthMethod":
		r, err = NewAclAuthMethod(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/aclBindingRule:AclBindingRule":
		r, err = NewAclBindingRule(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/aclPolicy:AclPolicy":
		r, err = NewAclPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/aclRole:AclRole":
		r, err = NewAclRole(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/aclToken:AclToken":
		r, err = NewAclToken(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/aclTokenPolicyAttachment:AclTokenPolicyAttachment":
		r, err = NewAclTokenPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/agentService:AgentService":
		r, err = NewAgentService(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/autopilotConfig:AutopilotConfig":
		r, err = NewAutopilotConfig(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/catalogEntry:CatalogEntry":
		r, err = NewCatalogEntry(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/certificateAuthority:CertificateAuthority":
		r, err = NewCertificateAuthority(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/configEntry:ConfigEntry":
		r, err = NewConfigEntry(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/intention:Intention":
		r, err = NewIntention(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/keyPrefix:KeyPrefix":
		r, err = NewKeyPrefix(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/keys:Keys":
		r, err = NewKeys(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/license:License":
		r, err = NewLicense(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/namespace:Namespace":
		r, err = NewNamespace(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/networkArea:NetworkArea":
		r, err = NewNetworkArea(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/node:Node":
		r, err = NewNode(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/preparedQuery:PreparedQuery":
		r, err = NewPreparedQuery(ctx, name, nil, pulumi.URN_(urn))
	case "consul:index/service:Service":
		r, err = NewService(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:consul" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	return NewProvider(ctx, name, nil, pulumi.URN_(urn))
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclAuthMethod",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclBindingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/aclTokenPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/agentService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/autopilotConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/catalogEntry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/certificateAuthority",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/configEntry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/intention",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/keyPrefix",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/keys",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/license",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/namespace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/networkArea",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/node",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/preparedQuery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"consul",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"consul",
		&pkg{version},
	)
}
