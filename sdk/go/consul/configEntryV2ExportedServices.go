// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigEntryV2ExportedServices struct {
	pulumi.CustomResourceState

	// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The name of the config entry to read.
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace the config entry is associated with.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// The partition the config entry is associated with.
	Partition pulumi.StringOutput `pulumi:"partition"`
	// The exported service partition consumers.
	PartitionConsumers pulumi.StringArrayOutput `pulumi:"partitionConsumers"`
	// The exported service peer consumers.
	PeerConsumers pulumi.StringArrayOutput `pulumi:"peerConsumers"`
	// The exported service sameness group consumers.
	SamenessGroupConsumers pulumi.StringArrayOutput `pulumi:"samenessGroupConsumers"`
	// The exported services.
	Services pulumi.StringArrayOutput `pulumi:"services"`
}

// NewConfigEntryV2ExportedServices registers a new resource with the given unique name, arguments, and options.
func NewConfigEntryV2ExportedServices(ctx *pulumi.Context,
	name string, args *ConfigEntryV2ExportedServicesArgs, opts ...pulumi.ResourceOption) (*ConfigEntryV2ExportedServices, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.Partition == nil {
		return nil, errors.New("invalid value for required argument 'Partition'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigEntryV2ExportedServices
	err := ctx.RegisterResource("consul:index/configEntryV2ExportedServices:ConfigEntryV2ExportedServices", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigEntryV2ExportedServices gets an existing ConfigEntryV2ExportedServices resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigEntryV2ExportedServices(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigEntryV2ExportedServicesState, opts ...pulumi.ResourceOption) (*ConfigEntryV2ExportedServices, error) {
	var resource ConfigEntryV2ExportedServices
	err := ctx.ReadResource("consul:index/configEntryV2ExportedServices:ConfigEntryV2ExportedServices", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigEntryV2ExportedServices resources.
type configEntryV2ExportedServicesState struct {
	// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
	Kind *string `pulumi:"kind"`
	// The name of the config entry to read.
	Name *string `pulumi:"name"`
	// The namespace the config entry is associated with.
	Namespace *string `pulumi:"namespace"`
	// The partition the config entry is associated with.
	Partition *string `pulumi:"partition"`
	// The exported service partition consumers.
	PartitionConsumers []string `pulumi:"partitionConsumers"`
	// The exported service peer consumers.
	PeerConsumers []string `pulumi:"peerConsumers"`
	// The exported service sameness group consumers.
	SamenessGroupConsumers []string `pulumi:"samenessGroupConsumers"`
	// The exported services.
	Services []string `pulumi:"services"`
}

type ConfigEntryV2ExportedServicesState struct {
	// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
	Kind pulumi.StringPtrInput
	// The name of the config entry to read.
	Name pulumi.StringPtrInput
	// The namespace the config entry is associated with.
	Namespace pulumi.StringPtrInput
	// The partition the config entry is associated with.
	Partition pulumi.StringPtrInput
	// The exported service partition consumers.
	PartitionConsumers pulumi.StringArrayInput
	// The exported service peer consumers.
	PeerConsumers pulumi.StringArrayInput
	// The exported service sameness group consumers.
	SamenessGroupConsumers pulumi.StringArrayInput
	// The exported services.
	Services pulumi.StringArrayInput
}

func (ConfigEntryV2ExportedServicesState) ElementType() reflect.Type {
	return reflect.TypeOf((*configEntryV2ExportedServicesState)(nil)).Elem()
}

type configEntryV2ExportedServicesArgs struct {
	// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
	Kind string `pulumi:"kind"`
	// The name of the config entry to read.
	Name *string `pulumi:"name"`
	// The namespace the config entry is associated with.
	Namespace *string `pulumi:"namespace"`
	// The partition the config entry is associated with.
	Partition string `pulumi:"partition"`
	// The exported service partition consumers.
	PartitionConsumers []string `pulumi:"partitionConsumers"`
	// The exported service peer consumers.
	PeerConsumers []string `pulumi:"peerConsumers"`
	// The exported service sameness group consumers.
	SamenessGroupConsumers []string `pulumi:"samenessGroupConsumers"`
	// The exported services.
	Services []string `pulumi:"services"`
}

// The set of arguments for constructing a ConfigEntryV2ExportedServices resource.
type ConfigEntryV2ExportedServicesArgs struct {
	// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
	Kind pulumi.StringInput
	// The name of the config entry to read.
	Name pulumi.StringPtrInput
	// The namespace the config entry is associated with.
	Namespace pulumi.StringPtrInput
	// The partition the config entry is associated with.
	Partition pulumi.StringInput
	// The exported service partition consumers.
	PartitionConsumers pulumi.StringArrayInput
	// The exported service peer consumers.
	PeerConsumers pulumi.StringArrayInput
	// The exported service sameness group consumers.
	SamenessGroupConsumers pulumi.StringArrayInput
	// The exported services.
	Services pulumi.StringArrayInput
}

func (ConfigEntryV2ExportedServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configEntryV2ExportedServicesArgs)(nil)).Elem()
}

type ConfigEntryV2ExportedServicesInput interface {
	pulumi.Input

	ToConfigEntryV2ExportedServicesOutput() ConfigEntryV2ExportedServicesOutput
	ToConfigEntryV2ExportedServicesOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesOutput
}

func (*ConfigEntryV2ExportedServices) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (i *ConfigEntryV2ExportedServices) ToConfigEntryV2ExportedServicesOutput() ConfigEntryV2ExportedServicesOutput {
	return i.ToConfigEntryV2ExportedServicesOutputWithContext(context.Background())
}

func (i *ConfigEntryV2ExportedServices) ToConfigEntryV2ExportedServicesOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryV2ExportedServicesOutput)
}

// ConfigEntryV2ExportedServicesArrayInput is an input type that accepts ConfigEntryV2ExportedServicesArray and ConfigEntryV2ExportedServicesArrayOutput values.
// You can construct a concrete instance of `ConfigEntryV2ExportedServicesArrayInput` via:
//
//	ConfigEntryV2ExportedServicesArray{ ConfigEntryV2ExportedServicesArgs{...} }
type ConfigEntryV2ExportedServicesArrayInput interface {
	pulumi.Input

	ToConfigEntryV2ExportedServicesArrayOutput() ConfigEntryV2ExportedServicesArrayOutput
	ToConfigEntryV2ExportedServicesArrayOutputWithContext(context.Context) ConfigEntryV2ExportedServicesArrayOutput
}

type ConfigEntryV2ExportedServicesArray []ConfigEntryV2ExportedServicesInput

func (ConfigEntryV2ExportedServicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (i ConfigEntryV2ExportedServicesArray) ToConfigEntryV2ExportedServicesArrayOutput() ConfigEntryV2ExportedServicesArrayOutput {
	return i.ToConfigEntryV2ExportedServicesArrayOutputWithContext(context.Background())
}

func (i ConfigEntryV2ExportedServicesArray) ToConfigEntryV2ExportedServicesArrayOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryV2ExportedServicesArrayOutput)
}

// ConfigEntryV2ExportedServicesMapInput is an input type that accepts ConfigEntryV2ExportedServicesMap and ConfigEntryV2ExportedServicesMapOutput values.
// You can construct a concrete instance of `ConfigEntryV2ExportedServicesMapInput` via:
//
//	ConfigEntryV2ExportedServicesMap{ "key": ConfigEntryV2ExportedServicesArgs{...} }
type ConfigEntryV2ExportedServicesMapInput interface {
	pulumi.Input

	ToConfigEntryV2ExportedServicesMapOutput() ConfigEntryV2ExportedServicesMapOutput
	ToConfigEntryV2ExportedServicesMapOutputWithContext(context.Context) ConfigEntryV2ExportedServicesMapOutput
}

type ConfigEntryV2ExportedServicesMap map[string]ConfigEntryV2ExportedServicesInput

func (ConfigEntryV2ExportedServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (i ConfigEntryV2ExportedServicesMap) ToConfigEntryV2ExportedServicesMapOutput() ConfigEntryV2ExportedServicesMapOutput {
	return i.ToConfigEntryV2ExportedServicesMapOutputWithContext(context.Background())
}

func (i ConfigEntryV2ExportedServicesMap) ToConfigEntryV2ExportedServicesMapOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigEntryV2ExportedServicesMapOutput)
}

type ConfigEntryV2ExportedServicesOutput struct{ *pulumi.OutputState }

func (ConfigEntryV2ExportedServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (o ConfigEntryV2ExportedServicesOutput) ToConfigEntryV2ExportedServicesOutput() ConfigEntryV2ExportedServicesOutput {
	return o
}

func (o ConfigEntryV2ExportedServicesOutput) ToConfigEntryV2ExportedServicesOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesOutput {
	return o
}

// The kind of exported services config (ExportedServices, NamespaceExportedServices, PartitionExportedServices).
func (o ConfigEntryV2ExportedServicesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The name of the config entry to read.
func (o ConfigEntryV2ExportedServicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The namespace the config entry is associated with.
func (o ConfigEntryV2ExportedServicesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The partition the config entry is associated with.
func (o ConfigEntryV2ExportedServicesOutput) Partition() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringOutput { return v.Partition }).(pulumi.StringOutput)
}

// The exported service partition consumers.
func (o ConfigEntryV2ExportedServicesOutput) PartitionConsumers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringArrayOutput { return v.PartitionConsumers }).(pulumi.StringArrayOutput)
}

// The exported service peer consumers.
func (o ConfigEntryV2ExportedServicesOutput) PeerConsumers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringArrayOutput { return v.PeerConsumers }).(pulumi.StringArrayOutput)
}

// The exported service sameness group consumers.
func (o ConfigEntryV2ExportedServicesOutput) SamenessGroupConsumers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringArrayOutput { return v.SamenessGroupConsumers }).(pulumi.StringArrayOutput)
}

// The exported services.
func (o ConfigEntryV2ExportedServicesOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigEntryV2ExportedServices) pulumi.StringArrayOutput { return v.Services }).(pulumi.StringArrayOutput)
}

type ConfigEntryV2ExportedServicesArrayOutput struct{ *pulumi.OutputState }

func (ConfigEntryV2ExportedServicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (o ConfigEntryV2ExportedServicesArrayOutput) ToConfigEntryV2ExportedServicesArrayOutput() ConfigEntryV2ExportedServicesArrayOutput {
	return o
}

func (o ConfigEntryV2ExportedServicesArrayOutput) ToConfigEntryV2ExportedServicesArrayOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesArrayOutput {
	return o
}

func (o ConfigEntryV2ExportedServicesArrayOutput) Index(i pulumi.IntInput) ConfigEntryV2ExportedServicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigEntryV2ExportedServices {
		return vs[0].([]*ConfigEntryV2ExportedServices)[vs[1].(int)]
	}).(ConfigEntryV2ExportedServicesOutput)
}

type ConfigEntryV2ExportedServicesMapOutput struct{ *pulumi.OutputState }

func (ConfigEntryV2ExportedServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigEntryV2ExportedServices)(nil)).Elem()
}

func (o ConfigEntryV2ExportedServicesMapOutput) ToConfigEntryV2ExportedServicesMapOutput() ConfigEntryV2ExportedServicesMapOutput {
	return o
}

func (o ConfigEntryV2ExportedServicesMapOutput) ToConfigEntryV2ExportedServicesMapOutputWithContext(ctx context.Context) ConfigEntryV2ExportedServicesMapOutput {
	return o
}

func (o ConfigEntryV2ExportedServicesMapOutput) MapIndex(k pulumi.StringInput) ConfigEntryV2ExportedServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigEntryV2ExportedServices {
		return vs[0].(map[string]*ConfigEntryV2ExportedServices)[vs[1].(string)]
	}).(ConfigEntryV2ExportedServicesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryV2ExportedServicesInput)(nil)).Elem(), &ConfigEntryV2ExportedServices{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryV2ExportedServicesArrayInput)(nil)).Elem(), ConfigEntryV2ExportedServicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigEntryV2ExportedServicesMapInput)(nil)).Elem(), ConfigEntryV2ExportedServicesMap{})
	pulumi.RegisterOutputType(ConfigEntryV2ExportedServicesOutput{})
	pulumi.RegisterOutputType(ConfigEntryV2ExportedServicesArrayOutput{})
	pulumi.RegisterOutputType(ConfigEntryV2ExportedServicesMapOutput{})
}
