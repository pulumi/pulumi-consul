// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package consul

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/prepared_query.html.markdown.
type PreparedQuery struct {
	pulumi.CustomResourceState

	// When `true` the prepared query will return connect
	// proxy services for a queried service.  Conditions such as `tags` in the
	// prepared query will be matched against the proxy service. Defaults to false.
	Connect pulumi.BoolPtrOutput `pulumi:"connect"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrOutput `pulumi:"datacenter"`
	// Settings for controlling the DNS response details.
	Dns PreparedQueryDnsPtrOutput `pulumi:"dns"`
	// Options for controlling behavior when no healthy
	// nodes are available in the local DC.
	Failover PreparedQueryFailoverPtrOutput `pulumi:"failover"`
	// The name of the prepared query. Used to identify
	// the prepared query during requests. Can be specified as an empty string
	// to configure the query as a catch-all.
	Name pulumi.StringOutput `pulumi:"name"`
	// Allows specifying the name of a node to sort results
	// near using Consul's distance sorting and network coordinates. The magic
	// `_agent` value can be used to always sort nearest the node servicing the
	// request.
	Near pulumi.StringPtrOutput `pulumi:"near"`
	// When `true`, the prepared query will only
	// return nodes with passing health checks in the result.
	OnlyPassing pulumi.BoolPtrOutput `pulumi:"onlyPassing"`
	// The name of the service to query.
	Service pulumi.StringOutput `pulumi:"service"`
	// The name of the Consul session to tie this query's
	// lifetime to.  This is an advanced parameter that should not be used without a
	// complete understanding of Consul sessions and the implications of their use
	// (it is recommended to leave this blank in nearly all cases).  If this
	// parameter is omitted the query will not expire.
	Session pulumi.StringPtrOutput `pulumi:"session"`
	// The ACL token to store with the prepared
	// query. This token will be used by default whenever the query is executed.
	StoredToken pulumi.StringPtrOutput `pulumi:"storedToken"`
	// The list of required and/or disallowed tags.  If a tag is
	// in this list it must be present.  If the tag is preceded with a "!" then it is
	// disallowed.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Query templating options. This is used to make a
	// single prepared query respond to many different requests.
	Template PreparedQueryTemplatePtrOutput `pulumi:"template"`
	// The ACL token to use when saving the prepared query.
	// This overrides the token that the agent provides by default.
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewPreparedQuery registers a new resource with the given unique name, arguments, and options.
func NewPreparedQuery(ctx *pulumi.Context,
	name string, args *PreparedQueryArgs, opts ...pulumi.ResourceOption) (*PreparedQuery, error) {
	if args == nil || args.Service == nil {
		return nil, errors.New("missing required argument 'Service'")
	}
	if args == nil {
		args = &PreparedQueryArgs{}
	}
	var resource PreparedQuery
	err := ctx.RegisterResource("consul:index/preparedQuery:PreparedQuery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreparedQuery gets an existing PreparedQuery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreparedQuery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreparedQueryState, opts ...pulumi.ResourceOption) (*PreparedQuery, error) {
	var resource PreparedQuery
	err := ctx.ReadResource("consul:index/preparedQuery:PreparedQuery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreparedQuery resources.
type preparedQueryState struct {
	// When `true` the prepared query will return connect
	// proxy services for a queried service.  Conditions such as `tags` in the
	// prepared query will be matched against the proxy service. Defaults to false.
	Connect *bool `pulumi:"connect"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// Settings for controlling the DNS response details.
	Dns *PreparedQueryDns `pulumi:"dns"`
	// Options for controlling behavior when no healthy
	// nodes are available in the local DC.
	Failover *PreparedQueryFailover `pulumi:"failover"`
	// The name of the prepared query. Used to identify
	// the prepared query during requests. Can be specified as an empty string
	// to configure the query as a catch-all.
	Name *string `pulumi:"name"`
	// Allows specifying the name of a node to sort results
	// near using Consul's distance sorting and network coordinates. The magic
	// `_agent` value can be used to always sort nearest the node servicing the
	// request.
	Near *string `pulumi:"near"`
	// When `true`, the prepared query will only
	// return nodes with passing health checks in the result.
	OnlyPassing *bool `pulumi:"onlyPassing"`
	// The name of the service to query.
	Service *string `pulumi:"service"`
	// The name of the Consul session to tie this query's
	// lifetime to.  This is an advanced parameter that should not be used without a
	// complete understanding of Consul sessions and the implications of their use
	// (it is recommended to leave this blank in nearly all cases).  If this
	// parameter is omitted the query will not expire.
	Session *string `pulumi:"session"`
	// The ACL token to store with the prepared
	// query. This token will be used by default whenever the query is executed.
	StoredToken *string `pulumi:"storedToken"`
	// The list of required and/or disallowed tags.  If a tag is
	// in this list it must be present.  If the tag is preceded with a "!" then it is
	// disallowed.
	Tags []string `pulumi:"tags"`
	// Query templating options. This is used to make a
	// single prepared query respond to many different requests.
	Template *PreparedQueryTemplate `pulumi:"template"`
	// The ACL token to use when saving the prepared query.
	// This overrides the token that the agent provides by default.
	Token *string `pulumi:"token"`
}

type PreparedQueryState struct {
	// When `true` the prepared query will return connect
	// proxy services for a queried service.  Conditions such as `tags` in the
	// prepared query will be matched against the proxy service. Defaults to false.
	Connect pulumi.BoolPtrInput
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// Settings for controlling the DNS response details.
	Dns PreparedQueryDnsPtrInput
	// Options for controlling behavior when no healthy
	// nodes are available in the local DC.
	Failover PreparedQueryFailoverPtrInput
	// The name of the prepared query. Used to identify
	// the prepared query during requests. Can be specified as an empty string
	// to configure the query as a catch-all.
	Name pulumi.StringPtrInput
	// Allows specifying the name of a node to sort results
	// near using Consul's distance sorting and network coordinates. The magic
	// `_agent` value can be used to always sort nearest the node servicing the
	// request.
	Near pulumi.StringPtrInput
	// When `true`, the prepared query will only
	// return nodes with passing health checks in the result.
	OnlyPassing pulumi.BoolPtrInput
	// The name of the service to query.
	Service pulumi.StringPtrInput
	// The name of the Consul session to tie this query's
	// lifetime to.  This is an advanced parameter that should not be used without a
	// complete understanding of Consul sessions and the implications of their use
	// (it is recommended to leave this blank in nearly all cases).  If this
	// parameter is omitted the query will not expire.
	Session pulumi.StringPtrInput
	// The ACL token to store with the prepared
	// query. This token will be used by default whenever the query is executed.
	StoredToken pulumi.StringPtrInput
	// The list of required and/or disallowed tags.  If a tag is
	// in this list it must be present.  If the tag is preceded with a "!" then it is
	// disallowed.
	Tags pulumi.StringArrayInput
	// Query templating options. This is used to make a
	// single prepared query respond to many different requests.
	Template PreparedQueryTemplatePtrInput
	// The ACL token to use when saving the prepared query.
	// This overrides the token that the agent provides by default.
	Token pulumi.StringPtrInput
}

func (PreparedQueryState) ElementType() reflect.Type {
	return reflect.TypeOf((*preparedQueryState)(nil)).Elem()
}

type preparedQueryArgs struct {
	// When `true` the prepared query will return connect
	// proxy services for a queried service.  Conditions such as `tags` in the
	// prepared query will be matched against the proxy service. Defaults to false.
	Connect *bool `pulumi:"connect"`
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter *string `pulumi:"datacenter"`
	// Settings for controlling the DNS response details.
	Dns *PreparedQueryDns `pulumi:"dns"`
	// Options for controlling behavior when no healthy
	// nodes are available in the local DC.
	Failover *PreparedQueryFailover `pulumi:"failover"`
	// The name of the prepared query. Used to identify
	// the prepared query during requests. Can be specified as an empty string
	// to configure the query as a catch-all.
	Name *string `pulumi:"name"`
	// Allows specifying the name of a node to sort results
	// near using Consul's distance sorting and network coordinates. The magic
	// `_agent` value can be used to always sort nearest the node servicing the
	// request.
	Near *string `pulumi:"near"`
	// When `true`, the prepared query will only
	// return nodes with passing health checks in the result.
	OnlyPassing *bool `pulumi:"onlyPassing"`
	// The name of the service to query.
	Service string `pulumi:"service"`
	// The name of the Consul session to tie this query's
	// lifetime to.  This is an advanced parameter that should not be used without a
	// complete understanding of Consul sessions and the implications of their use
	// (it is recommended to leave this blank in nearly all cases).  If this
	// parameter is omitted the query will not expire.
	Session *string `pulumi:"session"`
	// The ACL token to store with the prepared
	// query. This token will be used by default whenever the query is executed.
	StoredToken *string `pulumi:"storedToken"`
	// The list of required and/or disallowed tags.  If a tag is
	// in this list it must be present.  If the tag is preceded with a "!" then it is
	// disallowed.
	Tags []string `pulumi:"tags"`
	// Query templating options. This is used to make a
	// single prepared query respond to many different requests.
	Template *PreparedQueryTemplate `pulumi:"template"`
	// The ACL token to use when saving the prepared query.
	// This overrides the token that the agent provides by default.
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a PreparedQuery resource.
type PreparedQueryArgs struct {
	// When `true` the prepared query will return connect
	// proxy services for a queried service.  Conditions such as `tags` in the
	// prepared query will be matched against the proxy service. Defaults to false.
	Connect pulumi.BoolPtrInput
	// The datacenter to use. This overrides the
	// agent's default datacenter and the datacenter in the provider setup.
	Datacenter pulumi.StringPtrInput
	// Settings for controlling the DNS response details.
	Dns PreparedQueryDnsPtrInput
	// Options for controlling behavior when no healthy
	// nodes are available in the local DC.
	Failover PreparedQueryFailoverPtrInput
	// The name of the prepared query. Used to identify
	// the prepared query during requests. Can be specified as an empty string
	// to configure the query as a catch-all.
	Name pulumi.StringPtrInput
	// Allows specifying the name of a node to sort results
	// near using Consul's distance sorting and network coordinates. The magic
	// `_agent` value can be used to always sort nearest the node servicing the
	// request.
	Near pulumi.StringPtrInput
	// When `true`, the prepared query will only
	// return nodes with passing health checks in the result.
	OnlyPassing pulumi.BoolPtrInput
	// The name of the service to query.
	Service pulumi.StringInput
	// The name of the Consul session to tie this query's
	// lifetime to.  This is an advanced parameter that should not be used without a
	// complete understanding of Consul sessions and the implications of their use
	// (it is recommended to leave this blank in nearly all cases).  If this
	// parameter is omitted the query will not expire.
	Session pulumi.StringPtrInput
	// The ACL token to store with the prepared
	// query. This token will be used by default whenever the query is executed.
	StoredToken pulumi.StringPtrInput
	// The list of required and/or disallowed tags.  If a tag is
	// in this list it must be present.  If the tag is preceded with a "!" then it is
	// disallowed.
	Tags pulumi.StringArrayInput
	// Query templating options. This is used to make a
	// single prepared query respond to many different requests.
	Template PreparedQueryTemplatePtrInput
	// The ACL token to use when saving the prepared query.
	// This overrides the token that the agent provides by default.
	Token pulumi.StringPtrInput
}

func (PreparedQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preparedQueryArgs)(nil)).Elem()
}

