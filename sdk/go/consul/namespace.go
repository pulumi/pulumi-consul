// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// > **NOTE:** This feature requires Consul Enterprise.
//
// The `.Namespace` resource provides isolated [Consul Enterprise Namespaces](https://www.consul.io/docs/enterprise/namespaces/index.html).
type Namespace struct {
	pulumi.CustomResourceState

	// Free form namespace description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies arbitrary KV metadata to associate with the
	// namespace.
	Meta pulumi.StringMapOutput `pulumi:"meta"`
	// The namespace name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of default policies that should be
	// applied to all tokens created in this namespace.
	PolicyDefaults pulumi.StringArrayOutput `pulumi:"policyDefaults"`
	// The list of default roles that should be applied
	// to all tokens created in this namespace.
	RoleDefaults pulumi.StringArrayOutput `pulumi:"roleDefaults"`
}

// NewNamespace registers a new resource with the given unique name, arguments, and options.
func NewNamespace(ctx *pulumi.Context,
	name string, args *NamespaceArgs, opts ...pulumi.ResourceOption) (*Namespace, error) {
	if args == nil {
		args = &NamespaceArgs{}
	}
	var resource Namespace
	err := ctx.RegisterResource("consul:index/namespace:Namespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamespace gets an existing Namespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamespaceState, opts ...pulumi.ResourceOption) (*Namespace, error) {
	var resource Namespace
	err := ctx.ReadResource("consul:index/namespace:Namespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Namespace resources.
type namespaceState struct {
	// Free form namespace description.
	Description *string `pulumi:"description"`
	// Specifies arbitrary KV metadata to associate with the
	// namespace.
	Meta map[string]string `pulumi:"meta"`
	// The namespace name.
	Name *string `pulumi:"name"`
	// The list of default policies that should be
	// applied to all tokens created in this namespace.
	PolicyDefaults []string `pulumi:"policyDefaults"`
	// The list of default roles that should be applied
	// to all tokens created in this namespace.
	RoleDefaults []string `pulumi:"roleDefaults"`
}

type NamespaceState struct {
	// Free form namespace description.
	Description pulumi.StringPtrInput
	// Specifies arbitrary KV metadata to associate with the
	// namespace.
	Meta pulumi.StringMapInput
	// The namespace name.
	Name pulumi.StringPtrInput
	// The list of default policies that should be
	// applied to all tokens created in this namespace.
	PolicyDefaults pulumi.StringArrayInput
	// The list of default roles that should be applied
	// to all tokens created in this namespace.
	RoleDefaults pulumi.StringArrayInput
}

func (NamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceState)(nil)).Elem()
}

type namespaceArgs struct {
	// Free form namespace description.
	Description *string `pulumi:"description"`
	// Specifies arbitrary KV metadata to associate with the
	// namespace.
	Meta map[string]string `pulumi:"meta"`
	// The namespace name.
	Name *string `pulumi:"name"`
	// The list of default policies that should be
	// applied to all tokens created in this namespace.
	PolicyDefaults []string `pulumi:"policyDefaults"`
	// The list of default roles that should be applied
	// to all tokens created in this namespace.
	RoleDefaults []string `pulumi:"roleDefaults"`
}

// The set of arguments for constructing a Namespace resource.
type NamespaceArgs struct {
	// Free form namespace description.
	Description pulumi.StringPtrInput
	// Specifies arbitrary KV metadata to associate with the
	// namespace.
	Meta pulumi.StringMapInput
	// The namespace name.
	Name pulumi.StringPtrInput
	// The list of default policies that should be
	// applied to all tokens created in this namespace.
	PolicyDefaults pulumi.StringArrayInput
	// The list of default roles that should be applied
	// to all tokens created in this namespace.
	RoleDefaults pulumi.StringArrayInput
}

func (NamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namespaceArgs)(nil)).Elem()
}
