// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package consul

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Starting with Consul 1.5.0, the .AclBindingRule resource can be used to
// managed Consul ACL binding rules.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/acl_binding_rule.markdown.
type AclBindingRule struct {
	pulumi.CustomResourceState

	// The name of the ACL auth method this rule apply.
	AuthMethod pulumi.StringOutput `pulumi:"authMethod"`
	// The name to bind to a token at login-time.
	BindName pulumi.StringOutput `pulumi:"bindName"`
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType pulumi.StringOutput `pulumi:"bindType"`
	// A free form human readable description of the
	// binding rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector pulumi.StringPtrOutput `pulumi:"selector"`
}

// NewAclBindingRule registers a new resource with the given unique name, arguments, and options.
func NewAclBindingRule(ctx *pulumi.Context,
	name string, args *AclBindingRuleArgs, opts ...pulumi.ResourceOption) (*AclBindingRule, error) {
	if args == nil || args.AuthMethod == nil {
		return nil, errors.New("missing required argument 'AuthMethod'")
	}
	if args == nil || args.BindName == nil {
		return nil, errors.New("missing required argument 'BindName'")
	}
	if args == nil || args.BindType == nil {
		return nil, errors.New("missing required argument 'BindType'")
	}
	if args == nil {
		args = &AclBindingRuleArgs{}
	}
	var resource AclBindingRule
	err := ctx.RegisterResource("consul:index/aclBindingRule:AclBindingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAclBindingRule gets an existing AclBindingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAclBindingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AclBindingRuleState, opts ...pulumi.ResourceOption) (*AclBindingRule, error) {
	var resource AclBindingRule
	err := ctx.ReadResource("consul:index/aclBindingRule:AclBindingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AclBindingRule resources.
type aclBindingRuleState struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod *string `pulumi:"authMethod"`
	// The name to bind to a token at login-time.
	BindName *string `pulumi:"bindName"`
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType *string `pulumi:"bindType"`
	// A free form human readable description of the
	// binding rule.
	Description *string `pulumi:"description"`
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector *string `pulumi:"selector"`
}

type AclBindingRuleState struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod pulumi.StringPtrInput
	// The name to bind to a token at login-time.
	BindName pulumi.StringPtrInput
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType pulumi.StringPtrInput
	// A free form human readable description of the
	// binding rule.
	Description pulumi.StringPtrInput
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector pulumi.StringPtrInput
}

func (AclBindingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*aclBindingRuleState)(nil)).Elem()
}

type aclBindingRuleArgs struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod string `pulumi:"authMethod"`
	// The name to bind to a token at login-time.
	BindName string `pulumi:"bindName"`
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType string `pulumi:"bindType"`
	// A free form human readable description of the
	// binding rule.
	Description *string `pulumi:"description"`
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector *string `pulumi:"selector"`
}

// The set of arguments for constructing a AclBindingRule resource.
type AclBindingRuleArgs struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod pulumi.StringInput
	// The name to bind to a token at login-time.
	BindName pulumi.StringInput
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType pulumi.StringInput
	// A free form human readable description of the
	// binding rule.
	Description pulumi.StringPtrInput
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector pulumi.StringPtrInput
}

func (AclBindingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aclBindingRuleArgs)(nil)).Elem()
}

