// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Starting with Consul 1.5.0, the .AclBindingRule resource can be used to
// managed Consul ACL binding rules.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-consul/blob/master/website/docs/r/acl_binding_rule.html.markdown.
type AclBindingRule struct {
	s *pulumi.ResourceState
}

// NewAclBindingRule registers a new resource with the given unique name, arguments, and options.
func NewAclBindingRule(ctx *pulumi.Context,
	name string, args *AclBindingRuleArgs, opts ...pulumi.ResourceOpt) (*AclBindingRule, error) {
	if args == nil || args.AuthMethod == nil {
		return nil, errors.New("missing required argument 'AuthMethod'")
	}
	if args == nil || args.BindName == nil {
		return nil, errors.New("missing required argument 'BindName'")
	}
	if args == nil || args.BindType == nil {
		return nil, errors.New("missing required argument 'BindType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["authMethod"] = nil
		inputs["bindName"] = nil
		inputs["bindType"] = nil
		inputs["description"] = nil
		inputs["selector"] = nil
	} else {
		inputs["authMethod"] = args.AuthMethod
		inputs["bindName"] = args.BindName
		inputs["bindType"] = args.BindType
		inputs["description"] = args.Description
		inputs["selector"] = args.Selector
	}
	s, err := ctx.RegisterResource("consul:index/aclBindingRule:AclBindingRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AclBindingRule{s: s}, nil
}

// GetAclBindingRule gets an existing AclBindingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAclBindingRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AclBindingRuleState, opts ...pulumi.ResourceOpt) (*AclBindingRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["authMethod"] = state.AuthMethod
		inputs["bindName"] = state.BindName
		inputs["bindType"] = state.BindType
		inputs["description"] = state.Description
		inputs["selector"] = state.Selector
	}
	s, err := ctx.ReadResource("consul:index/aclBindingRule:AclBindingRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AclBindingRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AclBindingRule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AclBindingRule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the ACL auth method this rule apply.
func (r *AclBindingRule) AuthMethod() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["authMethod"])
}

// The name to bind to a token at login-time.
func (r *AclBindingRule) BindName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bindName"])
}

// Specifies the way the binding rule affects a token
// created at login.
func (r *AclBindingRule) BindType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bindType"])
}

// A free form human readable description of the
// binding rule.
func (r *AclBindingRule) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The expression used to math this rule against valid
// identities returned from an auth method validation.
func (r *AclBindingRule) Selector() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["selector"])
}

// Input properties used for looking up and filtering AclBindingRule resources.
type AclBindingRuleState struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod interface{}
	// The name to bind to a token at login-time.
	BindName interface{}
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType interface{}
	// A free form human readable description of the
	// binding rule.
	Description interface{}
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector interface{}
}

// The set of arguments for constructing a AclBindingRule resource.
type AclBindingRuleArgs struct {
	// The name of the ACL auth method this rule apply.
	AuthMethod interface{}
	// The name to bind to a token at login-time.
	BindName interface{}
	// Specifies the way the binding rule affects a token
	// created at login.
	BindType interface{}
	// A free form human readable description of the
	// binding rule.
	Description interface{}
	// The expression used to math this rule against valid
	// identities returned from an auth method validation.
	Selector interface{}
}
