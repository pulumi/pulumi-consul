// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package consul

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-consul/sdk/v3/go/consul"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := consul.LookupPeering(ctx, &consul.LookupPeeringArgs{
//				PeerName: "peered-cluster",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPeering(ctx *pulumi.Context, args *LookupPeeringArgs, opts ...pulumi.InvokeOption) (*LookupPeeringResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPeeringResult
	err := ctx.Invoke("consul:index/getPeering:getPeering", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeering.
type LookupPeeringArgs struct {
	Partition *string `pulumi:"partition"`
	PeerName  string  `pulumi:"peerName"`
}

// A collection of values returned by getPeering.
type LookupPeeringResult struct {
	DeletedAt string `pulumi:"deletedAt"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string            `pulumi:"id"`
	Meta                map[string]string `pulumi:"meta"`
	Partition           *string           `pulumi:"partition"`
	PeerCaPems          []string          `pulumi:"peerCaPems"`
	PeerId              string            `pulumi:"peerId"`
	PeerName            string            `pulumi:"peerName"`
	PeerServerAddresses []string          `pulumi:"peerServerAddresses"`
	PeerServerName      string            `pulumi:"peerServerName"`
	State               string            `pulumi:"state"`
}

func LookupPeeringOutput(ctx *pulumi.Context, args LookupPeeringOutputArgs, opts ...pulumi.InvokeOption) LookupPeeringResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPeeringResultOutput, error) {
			args := v.(LookupPeeringArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("consul:index/getPeering:getPeering", args, LookupPeeringResultOutput{}, options).(LookupPeeringResultOutput), nil
		}).(LookupPeeringResultOutput)
}

// A collection of arguments for invoking getPeering.
type LookupPeeringOutputArgs struct {
	Partition pulumi.StringPtrInput `pulumi:"partition"`
	PeerName  pulumi.StringInput    `pulumi:"peerName"`
}

func (LookupPeeringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringArgs)(nil)).Elem()
}

// A collection of values returned by getPeering.
type LookupPeeringResultOutput struct{ *pulumi.OutputState }

func (LookupPeeringResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringResult)(nil)).Elem()
}

func (o LookupPeeringResultOutput) ToLookupPeeringResultOutput() LookupPeeringResultOutput {
	return o
}

func (o LookupPeeringResultOutput) ToLookupPeeringResultOutputWithContext(ctx context.Context) LookupPeeringResultOutput {
	return o
}

func (o LookupPeeringResultOutput) DeletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.DeletedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPeeringResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPeeringResultOutput) Meta() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPeeringResult) map[string]string { return v.Meta }).(pulumi.StringMapOutput)
}

func (o LookupPeeringResultOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeeringResult) *string { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o LookupPeeringResultOutput) PeerCaPems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPeeringResult) []string { return v.PeerCaPems }).(pulumi.StringArrayOutput)
}

func (o LookupPeeringResultOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.PeerId }).(pulumi.StringOutput)
}

func (o LookupPeeringResultOutput) PeerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.PeerName }).(pulumi.StringOutput)
}

func (o LookupPeeringResultOutput) PeerServerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPeeringResult) []string { return v.PeerServerAddresses }).(pulumi.StringArrayOutput)
}

func (o LookupPeeringResultOutput) PeerServerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.PeerServerName }).(pulumi.StringOutput)
}

func (o LookupPeeringResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeeringResultOutput{})
}
